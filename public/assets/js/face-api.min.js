/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/@vladmandic/face-api@1.6.7/dist/face-api.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var faceapi=(()=>{var e,t=Object.defineProperty,n=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,a=Object.prototype.hasOwnProperty,s=(e=function(e){if("undefined"!=typeof require)return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')},"undefined"!=typeof require?require:"undefined"!=typeof Proxy?new Proxy(e,{get:(e,t)=>("undefined"!=typeof require?require:e)[t]}):e),i=(e,n)=>{for(var r in n)t(e,r,{get:n[r],enumerable:!0})},o={};i(o,{AgeGenderNet:()=>ZX,BoundingBox:()=>oK,Box:()=>iK,ComposableTask:()=>HY,ComputeAllFaceDescriptorsTask:()=>CZ,ComputeFaceDescriptorsTaskBase:()=>_Z,ComputeSingleFaceDescriptorTask:()=>EZ,DetectAllFaceLandmarksTask:()=>AZ,DetectAllFacesTask:()=>DZ,DetectFaceLandmarksTaskBase:()=>$Z,DetectFacesTaskBase:()=>RZ,DetectSingleFaceLandmarksTask:()=>FZ,DetectSingleFaceTask:()=>MZ,Dimensions:()=>Gq,FACE_EXPRESSION_LABELS:()=>RX,FaceDetection:()=>uK,FaceDetectionNet:()=>CY,FaceExpressionNet:()=>MX,FaceExpressions:()=>DX,FaceLandmark68Net:()=>QX,FaceLandmark68TinyNet:()=>tY,FaceLandmarkNet:()=>nY,FaceLandmarks:()=>vK,FaceLandmarks5:()=>wK,FaceLandmarks68:()=>kK,FaceMatch:()=>IK,FaceMatcher:()=>VZ,FaceRecognitionNet:()=>hY,Gender:()=>YX,LabeledBox:()=>SK,LabeledFaceDescriptors:()=>NK,NetInput:()=>tX,NeuralNetwork:()=>cX,ObjectDetection:()=>lK,Point:()=>sK,PredictedBox:()=>TK,Rect:()=>xK,SsdMobilenetv1:()=>NY,SsdMobilenetv1Options:()=>SY,TinyFaceDetector:()=>YY,TinyFaceDetectorOptions:()=>GY,TinyYolov2:()=>VY,TinyYolov2Options:()=>PY,allFaces:()=>BZ,allFacesSsdMobilenetv1:()=>zZ,allFacesTinyYolov2:()=>PZ,awaitMediaLoaded:()=>qK,bufferToImage:()=>KK,computeFaceDescriptor:()=>rZ,createCanvas:()=>YK,createCanvasFromMedia:()=>ZK,createFaceDetectionNet:()=>_Y,createFaceRecognitionNet:()=>pY,createSsdMobilenetv1:()=>TY,createTinyFaceDetector:()=>UZ,createTinyYolov2:()=>UY,detectAllFaces:()=>LZ,detectFaceLandmarks:()=>tZ,detectFaceLandmarksTiny:()=>nZ,detectLandmarks:()=>gZ,detectSingleFace:()=>OZ,draw:()=>Wq,env:()=>OK,euclideanDistance:()=>WZ,extendWithAge:()=>fY,extendWithFaceDescriptor:()=>dY,extendWithFaceDetection:()=>CK,extendWithFaceExpressions:()=>LX,extendWithFaceLandmarks:()=>BX,extendWithGender:()=>gY,extractFaceTensors:()=>aX,extractFaces:()=>rX,fetchImage:()=>iX,fetchJson:()=>oX,fetchNetWeights:()=>lX,fetchOrThrow:()=>sX,fetchVideo:()=>uX,getContext2dOrThrow:()=>zK,getMediaDimensions:()=>XK,imageTensorToCanvas:()=>JK,imageToSquare:()=>eX,inverseSigmoid:()=>yK,iou:()=>hK,isMediaElement:()=>QK,isMediaLoaded:()=>jK,isWithAge:()=>cY,isWithFaceDetection:()=>_K,isWithFaceExpressions:()=>OX,isWithFaceLandmarks:()=>PX,isWithGender:()=>mY,loadAgeGenderModel:()=>cZ,loadFaceDetectionModel:()=>fZ,loadFaceExpressionModel:()=>dZ,loadFaceLandmarkModel:()=>uZ,loadFaceLandmarkTinyModel:()=>hZ,loadFaceRecognitionModel:()=>pZ,loadSsdMobilenetv1Model:()=>iZ,loadTinyFaceDetectorModel:()=>oZ,loadTinyYolov2Model:()=>lZ,loadWeightMap:()=>pX,locateFaces:()=>mZ,matchDimensions:()=>dX,minBbox:()=>pK,nets:()=>ZY,nonMaxSuppression:()=>dK,normalize:()=>cK,padToSquare:()=>fK,predictAgeAndGender:()=>sZ,recognizeFaceExpressions:()=>aZ,resizeResults:()=>GZ,resolveInput:()=>LK,shuffleArray:()=>mK,sigmoid:()=>gK,ssdMobilenetv1:()=>JY,tf:()=>l,tinyFaceDetector:()=>QY,tinyYolov2:()=>eZ,toNetInput:()=>nX,utils:()=>Uq,validateConfig:()=>RY,version:()=>HZ});var l={};i(l,{Abs:()=>Ze,Acos:()=>Je,Acosh:()=>Qe,AdadeltaOptimizer:()=>Gc,AdagradOptimizer:()=>Hc,AdamOptimizer:()=>jc,AdamaxOptimizer:()=>qc,Add:()=>et,AddN:()=>tt,All:()=>nt,Any:()=>rt,ArgMax:()=>at,ArgMin:()=>st,Asin:()=>it,Asinh:()=>ot,Atan:()=>lt,Atan2:()=>ht,Atanh:()=>ut,AvgPool:()=>pt,AvgPool3D:()=>ct,AvgPool3DGrad:()=>ft,AvgPoolGrad:()=>dt,BackendWasm:()=>Sq,BatchMatMul:()=>mt,BatchToSpaceND:()=>gt,Bincount:()=>yt,BroadcastArgs:()=>xt,BroadcastTo:()=>bt,Callback:()=>YS,CallbackList:()=>Wx,Cast:()=>vt,Ceil:()=>wt,ClipByValue:()=>kt,Complex:()=>It,ComplexAbs:()=>St,Concat:()=>Nt,Conv2D:()=>Tt,Conv2DBackpropFilter:()=>_t,Conv2DBackpropInput:()=>Ct,Conv3D:()=>Et,Conv3DBackpropFilterV2:()=>$t,Conv3DBackpropInputV2:()=>At,Cos:()=>Ft,Cosh:()=>Rt,CropAndResize:()=>Ot,Cumprod:()=>Dt,Cumsum:()=>Mt,CustomCallback:()=>Gx,DataStorage:()=>j,DenseBincount:()=>Lt,DepthToSpace:()=>zt,DepthwiseConv2dNative:()=>Pt,DepthwiseConv2dNativeBackpropFilter:()=>Bt,DepthwiseConv2dNativeBackpropInput:()=>Wt,Diag:()=>Vt,Dilation2D:()=>Ut,Dilation2DBackpropFilter:()=>Ht,Dilation2DBackpropInput:()=>Gt,ENV:()=>Ke,EarlyStopping:()=>QS,Einsum:()=>qt,Elu:()=>Kt,EluGrad:()=>Xt,Environment:()=>Ge,Equal:()=>Zt,Erf:()=>Yt,Exp:()=>Jt,ExpandDims:()=>Qt,Expm1:()=>en,FFT:()=>tn,Fill:()=>nn,FlipLeftRight:()=>rn,Floor:()=>an,FloorDiv:()=>sn,FromPixels:()=>Qr,FusedBatchNorm:()=>on,FusedConv2D:()=>na,FusedDepthwiseConv2D:()=>ra,GPGPUContext:()=>xO,GatherNd:()=>un,GatherV2:()=>ln,GraphModel:()=>LT,Greater:()=>hn,GreaterEqual:()=>pn,History:()=>Ux,IFFT:()=>cn,Identity:()=>dn,Imag:()=>fn,InputSpec:()=>Cx,IsFinite:()=>mn,IsInf:()=>gn,IsNan:()=>yn,KernelBackend:()=>q,LRN:()=>Cn,LRNGrad:()=>En,LayerVariable:()=>Nx,LayersModel:()=>Qv,LeakyRelu:()=>bn,Less:()=>xn,LessEqual:()=>vn,LinSpace:()=>wn,Log:()=>kn,Log1p:()=>In,LogSoftmax:()=>_n,LogicalAnd:()=>Sn,LogicalNot:()=>Nn,LogicalOr:()=>Tn,MathBackendWebGL:()=>_L,Max:()=>$n,MaxPool:()=>Fn,MaxPool3D:()=>Dn,MaxPool3DGrad:()=>Mn,MaxPoolGrad:()=>Rn,MaxPoolWithArgmax:()=>On,Maximum:()=>An,Mean:()=>Ln,Min:()=>zn,Minimum:()=>Pn,MirrorPad:()=>Bn,Mod:()=>Wn,MomentumOptimizer:()=>Xc,Multinomial:()=>Vn,Multiply:()=>Un,Neg:()=>Gn,NonMaxSuppressionV3:()=>jn,NonMaxSuppressionV4:()=>qn,NonMaxSuppressionV5:()=>Kn,NotEqual:()=>Hn,OP_SCOPE_SUFFIX:()=>Es,OneHot:()=>Yn,OnesLike:()=>Xn,Optimizer:()=>Uc,OptimizerConstructors:()=>Zc,Pack:()=>Zn,PadV2:()=>Jn,Pool:()=>Qn,Pow:()=>er,Prelu:()=>tr,Prod:()=>nr,RMSPropOptimizer:()=>Yc,RNN:()=>ik,Range:()=>rr,Rank:()=>Ja,Real:()=>ar,RealDiv:()=>jt,Reciprocal:()=>sr,Reduction:()=>bc,Relu:()=>ir,Relu6:()=>dr,Reshape:()=>or,ResizeBilinear:()=>hr,ResizeBilinearGrad:()=>pr,ResizeNearestNeighbor:()=>lr,ResizeNearestNeighborGrad:()=>ur,Reverse:()=>cr,RotateWithOffset:()=>ea,Round:()=>fr,Rsqrt:()=>mr,SGDOptimizer:()=>Kc,ScatterNd:()=>gr,Select:()=>yr,Selu:()=>br,Sequential:()=>rw,Sigmoid:()=>Ir,Sign:()=>kr,Sin:()=>vr,Sinh:()=>wr,Slice:()=>xr,Softmax:()=>Er,Softplus:()=>Sr,SpaceToBatchND:()=>_r,SparseFillEmptyRows:()=>$r,SparseReshape:()=>Ar,SparseSegmentMean:()=>Fr,SparseSegmentSum:()=>Rr,SparseToDense:()=>Dr,SplitV:()=>Cr,Sqrt:()=>Nr,Square:()=>Or,SquaredDifference:()=>Mr,Step:()=>Jr,StridedSlice:()=>Lr,StringNGrams:()=>zr,StringSplit:()=>Pr,StringToHashBucketFast:()=>Br,Sub:()=>Wr,Sum:()=>Tr,SymbolicTensor:()=>Ex,Tan:()=>Vr,Tanh:()=>Ur,Tensor:()=>Xa,TensorBuffer:()=>ja,Tile:()=>Gr,TopK:()=>Hr,Transform:()=>jr,Transpose:()=>qr,Unique:()=>Kr,Unpack:()=>Xr,UnsortedSegmentSum:()=>Yr,Variable:()=>Za,ZerosLike:()=>Zr,_FusedMatMul:()=>ta,abs:()=>_l,acos:()=>Cl,acosh:()=>El,add:()=>Il,addN:()=>$l,all:()=>Al,any:()=>Fl,argMax:()=>Rl,argMin:()=>Dl,asin:()=>Ml,asinh:()=>Ol,atan:()=>Ll,atan2:()=>zl,atanh:()=>Pl,avgPool:()=>tu,avgPool3d:()=>nu,backend:()=>wl,backend_util:()=>tf,basicLSTMCell:()=>ou,batchNorm:()=>hu,batchNorm2d:()=>pu,batchNorm3d:()=>du,batchNorm4d:()=>cu,batchToSpaceND:()=>lu,bincount:()=>fu,booleanMaskAsync:()=>xd,broadcastArgs:()=>mu,broadcastTo:()=>gu,broadcast_util:()=>Qi,browser:()=>ao,buffer:()=>Ti,callbacks:()=>nN,cast:()=>_i,ceil:()=>yu,clipByValue:()=>bu,clone:()=>Ci,complex:()=>As,concat:()=>ru,concat1d:()=>xu,concat2d:()=>vu,concat3d:()=>wu,concat4d:()=>ku,constraints:()=>ly,conv1d:()=>Su,conv2d:()=>Iu,conv2dTranspose:()=>Tu,conv3d:()=>_u,conv3dTranspose:()=>Eu,copyRegisteredKernels:()=>ma,cos:()=>$u,cosh:()=>Au,cosineWindow:()=>Cd,cumprod:()=>Fu,cumsum:()=>Ru,customGrad:()=>xh,data:()=>BT,denseBincount:()=>Du,deprecationWarn:()=>sl,depthToSpace:()=>Mu,depthwiseConv2d:()=>Ou,deregisterOp:()=>iN,device_util:()=>xs,diag:()=>Lu,dilation2d:()=>zu,disableDeprecationWarnings:()=>al,dispose:()=>pl,disposeVariables:()=>il,div:()=>Nl,divNoNan:()=>Vu,dot:()=>Uu,dropout:()=>Td,einsum:()=>Gu,elu:()=>Hu,enableDebugMode:()=>rl,enableProdMode:()=>nl,enclosingPowerOfTwo:()=>_d,engine:()=>ol,env:()=>je,equal:()=>Pu,erf:()=>ju,exp:()=>qu,expandDims:()=>Ku,expm1:()=>Xu,eye:()=>Zu,fft:()=>Kp,fill:()=>Ju,findBackend:()=>bl,findBackendFactory:()=>xl,floor:()=>Qu,floorDiv:()=>Sl,forceHalfFloat:()=>EL,fused:()=>$d,gather:()=>eh,gatherND:()=>Nd,gather_util:()=>po,getBackend:()=>gl,getGradient:()=>ua,getKernel:()=>la,getKernelsForBackend:()=>ha,getThreadsCount:()=>zq,gpgpu_util:()=>YM,grad:()=>fh,grads:()=>mh,greater:()=>th,greaterEqual:()=>nh,ifft:()=>Xp,imag:()=>rh,image:()=>zc,inTopKAsync:()=>Ed,initializers:()=>Ky,input:()=>ow,io:()=>$i,irfft:()=>Yp,isFinite:()=>ah,isInf:()=>sh,isNaN:()=>ih,keep:()=>dl,kernel_impls:()=>am,layers:()=>fx,leakyRelu:()=>oh,less:()=>lh,lessEqual:()=>uh,linalg:()=>Pc,linspace:()=>hh,loadGraphModel:()=>zT,loadLayersModel:()=>iw,localResponseNormalization:()=>ph,log:()=>dh,log1p:()=>ch,logSigmoid:()=>Ih,logSoftmax:()=>_h,logSumExp:()=>Oh,logicalAnd:()=>Lh,logicalNot:()=>zh,logicalOr:()=>Ph,logicalXor:()=>Bh,losses:()=>Bc,matMul:()=>Xi,math:()=>Ki,max:()=>Sh,maxPool:()=>Wh,maxPool3d:()=>Vh,maxPoolWithArgmax:()=>Uh,maximum:()=>Gh,mean:()=>Hh,memory:()=>ll,meshgrid:()=>Kh,metrics:()=>ES,min:()=>Xh,minimum:()=>Yh,mirrorPad:()=>Zh,mod:()=>Jh,model:()=>aw,models:()=>HS,moments:()=>ep,movingAverage:()=>kd,mul:()=>Tl,multiRNNCell:()=>tp,multinomial:()=>np,neg:()=>wh,nextFrame:()=>ef,norm:()=>wd,notEqual:()=>rp,oneHot:()=>Yi,ones:()=>qh,onesLike:()=>ap,op:()=>$s,outerProduct:()=>sp,pad:()=>ip,pad1d:()=>op,pad2d:()=>lp,pad3d:()=>up,pad4d:()=>hp,pool:()=>dp,pow:()=>cp,prelu:()=>fp,print:()=>Ei,prod:()=>mp,profile:()=>ul,rand:()=>gp,randomGamma:()=>wp,randomNormal:()=>kp,randomUniform:()=>Ip,range:()=>Sp,ready:()=>ml,real:()=>Np,reciprocal:()=>Tp,registerBackend:()=>vl,registerCallbackConstructor:()=>lw,registerGradient:()=>da,registerKernel:()=>pa,registerOp:()=>aN,regularizers:()=>jS,relu:()=>_p,relu6:()=>Cp,removeBackend:()=>yl,reshape:()=>eu,reverse:()=>Ep,reverse1d:()=>$p,reverse2d:()=>Ap,reverse3d:()=>Fp,reverse4d:()=>Rp,rfft:()=>Jp,round:()=>Dp,rsqrt:()=>Mp,scalar:()=>Op,scatterND:()=>Id,scatter_util:()=>fo,selu:()=>Lp,separableConv2d:()=>zp,sequential:()=>sw,serialization:()=>zo,setBackend:()=>fl,setPlatform:()=>kl,setThreadsCount:()=>Lq,setWasmPath:()=>Rq,setWasmPaths:()=>Dq,setWebGLContext:()=>mD,setdiff1dAsync:()=>Pp,sigmoid:()=>au,sign:()=>Bp,signal:()=>Lc,sin:()=>Wp,sinh:()=>Vp,slice:()=>su,slice1d:()=>Up,slice2d:()=>Gp,slice3d:()=>Hp,slice4d:()=>jp,slice_util:()=>bo,softmax:()=>qp,softplus:()=>kh,spaceToBatchND:()=>pp,sparse:()=>Wc,sparseToDense:()=>Sd,spectral:()=>Oc,split:()=>Zp,sqrt:()=>Qp,square:()=>Qh,squaredDifference:()=>ed,squeeze:()=>td,stack:()=>nd,step:()=>rd,stridedSlice:()=>ad,string:()=>Vc,sub:()=>Nh,sum:()=>Th,sumOutType:()=>is,tan:()=>sd,tanh:()=>iu,tensor:()=>Rs,tensor1d:()=>id,tensor2d:()=>od,tensor3d:()=>so,tensor4d:()=>ld,tensor5d:()=>ud,tensor6d:()=>hd,tensor_util:()=>rs,test_util:()=>Vo,tidy:()=>hl,tile:()=>Yu,time:()=>cl,topk:()=>pd,train:()=>Jc,transpose:()=>Zi,truncatedNormal:()=>dd,unique:()=>cd,unregisterGradient:()=>fa,unregisterKernel:()=>ca,unsortedSegmentSum:()=>fd,unstack:()=>md,upcastType:()=>ss,util:()=>ya,valueAndGrad:()=>gh,valueAndGrads:()=>yh,variable:()=>gd,variableGrads:()=>bh,version:()=>Bq,version_converter:()=>PT,version_core:()=>tl,version_layers:()=>Tv,version_wasm:()=>Pq,version_webgl:()=>CL,webgl:()=>$L,webgl_util:()=>uD,where:()=>Bu,whereAsync:()=>bd,zeros:()=>jh,zerosLike:()=>Wu});var u=Object.create,h=Object.defineProperty,p=Object.getOwnPropertyDescriptor,d=Object.getOwnPropertyNames,c=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty,m=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),g=(e,t)=>{for(var n in t)h(e,n,{get:t[n],enumerable:!0})},y=(e,t,n)=>(n=null!=e?u(c(e)):{},((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of d(t))!f.call(e,a)&&a!==n&&h(e,a,{get:()=>t[a],enumerable:!(r=p(t,a))||r.enumerable});return e})(!t&&e&&e.__esModule?n:h(n,"default",{value:e,enumerable:!0}),e)),b=m(((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var h=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return p(e.substring(1),t,n).neg();for(var a=l(h(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var d=l(h(n,o));s=s.mul(d).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?p(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=p,r.fromValue=d;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var v=o(1,!0);r.UONE=v;var w=o(-1);r.NEG_ONE=w;var k=u(-1,2147483647,!1);r.MAX_VALUE=k;var I=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=u(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(h(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return!(1&~this.low)},N.isEven=function(){return!(1&this.low)},N.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,h=0,p=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,p+=(c+=r+l)>>>16,h+=(p+=n+o)>>>16,h+=t+i,u((c&=65535)<<16|(f&=65535),(h&=65535)<<16|(p&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=d(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,h=65535&e.high,p=e.low>>>16,c=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*c)>>>16,m+=(b+=s*c)>>>16,b&=65535,m+=(b+=i*p)>>>16,f+=(m+=r*c)>>>16,m&=65535,f+=(m+=s*p)>>>16,m&=65535,f+=(m+=i*h)>>>16,f+=t*c+r*p+s*h+i*o,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return v;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:h(2,i-48),p=l(t),c=p.mul(e);c.isNegative()||c.gt(r);)c=(p=l(t-=o,this.unsigned)).mul(e);p.isZero()&&(p=x),s=s.add(p),r=r.sub(c)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=d(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),x=m((()=>{})),v=m((()=>{})),w=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),k=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),I=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),S=m(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),N=m(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),T=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),_=m((()=>{})),C=m(((e,t)=>{!function(e,n){var r,a=this,s=256,i="random",o=n.pow(s,6),l=n.pow(2,52),u=2*l,h=255;function p(t,h,p){var y=[],b=m(f((h=1==h?{entropy:!0}:h||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(s):(t=new Uint8Array(s),(a.crypto||a.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=a.navigator,i=n&&n.plugins;return[+new Date,a,i,a.screen,g(e)]}}():t,3),y),x=new d(y),v=function(){for(var e=x.g(6),t=o,n=0;e<l;)e=(e+n)*s,t*=s,n=x.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,m(g(x.S),e),(h.pass||p||function(e,t,r,a){return a&&(a.S&&c(a,x),e.state=function(){return c(x,{})}),r?(n[i]=e,t):e})(v,b,"global"in h?h.global:this==n,h.state)}function d(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=h&i+e[a%n]+(t=o[a])],o[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*s+o[h&(o[a]=o[i=h&i+t])+(o[i]=t)];return r.i=a,r.j=i,n})(s)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(n["seed"+i]=p,m(n.random(),e),"object"==typeof t&&t.exports){t.exports=p;try{r=_()}catch(e){}}else"function"==typeof define&&define.amd&&define((function(){return p}))}([],Math)})),E=m(((e,t)=>{var n=w(),r=k(),a=I(),s=S(),i=N(),o=T(),l=C();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),$=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),A=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),F=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),R=m(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),D=m(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),M=m(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),O=m(((e,t)=>{!function(e,n,r){var a,s=256,i="random",o=r.pow(s,6),l=r.pow(2,52),u=2*l,h=255;function p(t,h,p){var y=[],b=m(f((h=1==h?{entropy:!0}:h||{}).entropy?[t,g(n)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(s):(t=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var r=e.navigator,i=r&&r.plugins;return[+new Date,e,i,e.screen,g(n)]}}():t,3),y),x=new d(y),v=function(){for(var e=x.g(6),t=o,n=0;e<l;)e=(e+n)*s,t*=s,n=x.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,m(g(x.S),n),(h.pass||p||function(e,t,n,a){return a&&(a.S&&c(a,x),e.state=function(){return c(x,{})}),n?(r[i]=e,t):e})(v,b,"global"in h?h.global:this==r,h.state)}function d(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=h&i+e[a%n]+(t=o[a])],o[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*s+o[h&(o[a]=o[i=h&i+t])+(o[i]=t)];return r.i=a,r.j=i,n})(s)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),n),"object"==typeof t&&t.exports){t.exports=p;try{a=_()}catch(e){}}else"function"==typeof define&&define.amd?define((function(){return p})):r["seed"+i]=p}("undefined"!=typeof self?self:e,[],Math)})),L=m(((e,t)=>{var n=$(),r=A(),a=F(),s=R(),i=D(),o=M(),l=O();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),z=m((()=>{})),P=m((()=>{})),B=m((()=>{})),W=m((()=>{})),V=m((()=>{})),U=m((()=>{})),G=m(((e,t)=>{var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){function t(){return F.buffer!=G&&ee(F.buffer),H}function r(){return F.buffer!=G&&ee(F.buffer),j}function a(){return F.buffer!=G&&ee(F.buffer),q}function s(){return F.buffer!=G&&ee(F.buffer),K}var i,o,l,u=void 0!==(e=e||{})?e:{};u.ready=new Promise((function(e,t){i=e,o=t})),"undefined"!=typeof process&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var h,p,d,c,f,m,g=Object.assign({},u),y=[],b=(e,t)=>{throw t},x="object"==typeof window,v="function"==typeof importScripts,w="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,k=u.ENVIRONMENT_IS_PTHREAD||!1,I="";function S(e){return u.locateFile?u.locateFile(e,I):I+e}if(w){let e;I=v?B().dirname(I)+"/":__dirname+"/",m=()=>{f||(c=P(),f=B())},h=function(e,t){return m(),e=f.normalize(e),c.readFileSync(e,t?void 0:"utf8")},d=e=>{var t=h(e,!0);return t.buffer||(t=new Uint8Array(t)),t},p=(e,t,n)=>{m(),e=f.normalize(e),c.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),y=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ft))throw e})),process.on("unhandledRejection",(function(e){throw e})),b=(e,t)=>{if(le())throw process.exitCode=e,t;(function(e){e instanceof ft||E("exiting due to exception: "+e)})(t),process.exit(e)},u.inspect=function(){return"[Emscripten Module object]"};try{e=W()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(x||v)&&(v?I=self.location.href:"undefined"!=typeof document&&document.currentScript&&(I=document.currentScript.src),void 0!==n&&n&&(I=n),I=0!==I.indexOf("blob:")?I.substr(0,I.replace(/[?#].*/,"").lastIndexOf("/")+1):"",w||(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},v&&(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),p=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));w&&"undefined"==typeof performance&&(global.performance=V().performance);var N=console.log.bind(console),T=console.warn.bind(console);w&&(m(),N=e=>c.writeSync(1,e+"\n"),T=e=>c.writeSync(2,e+"\n"));var _,C=u.print||N,E=u.printErr||T;function $(e){$.shown||($.shown={}),$.shown[e]||($.shown[e]=1,E(e))}Object.assign(u,g),g=null,u.arguments&&(y=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&(b=u.quit),Atomics.load,Atomics.store,Atomics.compareExchange,u.wasmBinary&&(_=u.wasmBinary);var A=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&fe("no native wasm support detected");var F,R,D,M=!1;function O(e){return u["_"+e]}function L(e,n,r,a,s){var i={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);J(e,t=dt(n),n)}return t},array:function(e){var n=dt(e.length);return function(e,n){t().set(e,n)}(e,n),n}},o=O(e),l=[],u=0;if(a)for(var h=0;h<a.length;h++){var p=i[r[h]];p?(0===u&&(u=ht()),l[h]=p(a[h])):l[h]=a[h]}var d,c=o.apply(null,l);return d=c,0!==u&&pt(u),c=function(e){return"string"===n?Z(e):"boolean"===n?Boolean(e):e}(d),c}function z(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var G,H,j,q,K,X="undefined"!=typeof TextDecoder?new z("utf8"):void 0;function Y(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&X)return X.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function Z(e,t){return e?Y(r(),e,t):""}function J(e,t,n){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,r(),t,n)}function Q(e,t){return e%t>0&&(e+=t-e%t),e}function ee(e){G=e,u.HEAP8=H=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=q=new Int32Array(e),u.HEAPU8=j=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=K=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new z("utf-16le"),k&&(G=u.buffer);var te=u.INITIAL_MEMORY||16777216;if(k)F=u.wasmMemory,G=u.buffer;else if(u.wasmMemory)F=u.wasmMemory;else if(!((F=new WebAssembly.Memory({initial:te/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");F&&(G=F.buffer),te=G.byteLength,ee(G);var ne,re=[],ae=[],se=[],ie=[],oe=0;function le(){return A||oe>0}function ue(){!k&&xe(ae)}var he,pe=0,de=null,ce=null;function fe(e){k?postMessage({cmd:"onAbort",arg:e}):u.onAbort&&u.onAbort(e),E(e="Aborted("+e+")"),M=!0,D=1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw o(t),t}function me(e){return e.startsWith("data:application/octet-stream;base64,")}function ge(e){return e.startsWith("file://")}function ye(e){try{if(e==he&&_)return new Uint8Array(_);if(d)return d(e);throw"both async and sync fetching of the wasm failed"}catch(e){fe(e)}}u.preloadedImages={},u.preloadedAudios={},me(he="tfjs-backend-wasm-threaded-simd.wasm")||(he=S(he));var be={};function xe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?_e(n)():_e(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(u)}}function ve(e){var t=ht(),n=e();return pt(t),n}function we(e){var t=Ie.pthreads[e];if(t){a()[e>>2]=0;var n=t.worker;Ie.returnWorkerToPool(n)}}function ke(e){!function(e,t){if(D=e,!t&&k)throw Se(e),"unwind";le()||k||Ie.terminateAllThreads(),function(e){D=e,le()||(Ie.terminateAllThreads(),u.onExit&&u.onExit(e),M=!0),b(e,new ft(e))}(e)}(e)}var Ie={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){k?Ie.initWorker():Ie.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)Ie.allocateUnusedWorker()},initWorker:function(){A=!1},pthreads:{},setExitStatus:function(e){D=e},terminateAllThreads:function(){for(var e in Ie.pthreads){var t=Ie.pthreads[e];t&&t.worker&&Ie.returnWorkerToPool(t.worker)}for(var n=0;n<Ie.unusedWorkers.length;++n)Ie.unusedWorkers[n].terminate();Ie.unusedWorkers=[]},returnWorkerToPool:function(e){Ie.runWithoutMainThreadQueuedCalls((function(){delete Ie.pthreads[e.pthread.threadInfoStruct],Ie.unusedWorkers.push(e),Ie.runningWorkers.splice(Ie.runningWorkers.indexOf(e),1),lt(e.pthread.threadInfoStruct),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){a()[ct>>2]=0;try{e()}finally{a()[ct>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in Ie.tlsInitFunctions)Ie.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r=n.data,s=r.cmd;if(e.pthread&&(Ie.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=nt()){var i=Ie.pthreads[r.targetThread];return i?i.worker.postMessage(r,r.transferList):E('Internal error! Worker sent a message "'+s+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Ie.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===s?rt():"spawnThread"===s?Ee(r):"cleanupThread"===s?we(r.thread):"killThread"===s?function(e){a()[e>>2]=0;var t=Ie.pthreads[e];delete Ie.pthreads[e],t.worker.terminate(),lt(e),Ie.runningWorkers.splice(Ie.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread):"cancelThread"===s?function(e){Ie.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread):"loaded"===s?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===s?C("Thread "+r.threadId+": "+r.text):"printErr"===s?E("Thread "+r.threadId+": "+r.text):"alert"===s?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"onAbort"===s?u.onAbort&&u.onAbort(r.arg):E("worker sent an unknown command "+s),Ie.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw E("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},w&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||n,wasmMemory:F,wasmModule:R})},allocateUnusedWorker:function(){var e=S("tfjs-backend-wasm-threaded-simd.worker.js");Ie.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ie.unusedWorkers.length&&(Ie.allocateUnusedWorker(),Ie.loadWasmModuleToWorker(Ie.unusedWorkers[0])),Ie.unusedWorkers.pop()}};function Se(e){if(k)return Ae(1,0,e);try{ke(e)}catch(e){!function(e){if(e instanceof ft||"unwind"==e)return D;b(1,e)}(e)}}u.establishStackSpace=function(){var e=nt(),t=a()[e+44>>2],n=a()[e+48>>2];ut(t,t-n),pt(t)};var Ne,Te=[];function _e(e){var t=Te[e];return t||(e>=Te.length&&(Te.length=e+1),Te[e]=t=ne.get(e)),t}function Ce(e,t){var n;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return function(e){a()[tt()>>2]=e}(28),-1;n=Ne()}return a()[t>>2]=n/1e3|0,a()[t+4>>2]=n%1e3*1e3*1e3|0,0}function Ee(e){var t=Ie.getNewWorker();if(!t)return 6;Ie.runningWorkers.push(t);var n=Ie.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=n;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function $e(){return 2147483648}function Ae(e,t){var n=arguments.length-2,r=arguments;return ve((function(){for(var a=n,i=dt(8*a),o=i>>3,l=0;l<n;l++){var u=r[2+l];s()[o+l]=u}return it(e,a,i,t)}))}u.invokeEntryPoint=function(e,t){return _e(e)(t)},Ne=w?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:k?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Fe=[];function Re(e){try{return F.grow(e-G.byteLength+65535>>>16),ee(F.buffer),1}catch(e){}}var De={inEventHandler:0,removeAllEventListeners:function(){for(var e=De.eventHandlers.length-1;e>=0;--e)De._removeHandler(e);De.eventHandlers=[],De.deferredCalls=[]},registerRemoveEventListeners:function(){De.removeEventListenersRegistered||(se.push(De.removeAllEventListeners),De.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in De.deferredCalls){var s=De.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}De.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),De.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<De.deferredCalls.length;++t)De.deferredCalls[t].targetFunction==e&&(De.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return De.inEventHandler&&De.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(De.canPerformEventHandlerRequests())for(var e=0;e<De.deferredCalls.length;++e){var t=De.deferredCalls[e];De.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target==e&&(!t||t==De.eventHandlers[n].eventTypeString)&&De._removeHandler(n--)},_removeHandler:function(e){var t=De.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),De.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++De.inEventHandler,De.currentEventHandler=e,De.runDeferredCalls(),e.handlerFunc(t),De.runDeferredCalls(),--De.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),De.eventHandlers.push(e),De.registerRemoveEventListeners();else for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target==e.target&&De.eventHandlers[n].eventTypeString==e.eventTypeString&&De._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,s){ve((function(){var i=dt(12);a()[i>>2]=n,a()[i+4>>2]=r,a()[i+8>>2]=s,ot(e,637534208,t,r,i)}))},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Ie.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Me(e,t,n,r){ve((function(){var s=dt(12),i=0;t&&(i=function(e){var t=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,n=Qe(t);return J(e,n,t),n}(t)),a()[s>>2]=i,a()[s+4>>2]=n,a()[s+8>>2]=r,ot(e,657457152,0,i,s)}))}var Oe=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Le(e){return e=function(e){return e>2?Z(e):e}(e),Oe[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ze(e){return Le(e)}function Pe(e,t,n){var r=ze(e);if(!r)return-4;if(r.canvasSharedPtr&&(a()[r.canvasSharedPtr>>2]=t,a()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){Me(e,t=t?Z(t):"",n,r)}(a()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);s=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Be(e,t,n){return k?Ae(2,1,e,t,n):Pe(e,t,n)}var We={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){We.lastError||(We.lastError=e)},getNewId:function(e){for(var t=We.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var s="",i=0;i<t;++i){var o=r?a()[r+4*i>>2]:-1;s+=Z(a()[n+4*i>>2],o<0?void 0:o)}return s},createContext:function(e,t){e.getContextSafariWebGL2Fixed||(e.getContextSafariWebGL2Fixed=e.getContext,e.getContext=function(t,n){var r=e.getContextSafariWebGL2Fixed(t,n);return"webgl"==t==r instanceof WebGLRenderingContext?r:null});var n=e.getContext("webgl",t);return n?We.registerContext(n,t):0},registerContext:function(e,t){var n=Qe(8);a()[n+4>>2]=nt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),We.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&We.initExtensions(r),n},makeContextCurrent:function(e){return We.currentContext=We.contexts[e],u.ctx=qe=We.currentContext&&We.currentContext.GLctx,!(e&&!qe)},getContext:function(e){return We.contexts[e]},deleteContext:function(e){We.currentContext===We.contexts[e]&&(We.currentContext=null),"object"==typeof De&&De.removeAllHandlersOnTarget(We.contexts[e].GLctx.canvas),We.contexts[e]&&We.contexts[e].GLctx.canvas&&(We.contexts[e].GLctx.canvas.GLctxObject=void 0),et(We.contexts[e].handle),We.contexts[e]=null},initExtensions:function(e){if(e||(e=We.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;(function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})})(t),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),function(e){e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw")}(t),(t.getSupportedExtensions()||[]).forEach((function(e){!e.includes("lose_context")&&!e.includes("debug")&&t.getExtension(e)}))}}},Ve=["default","low-power","high-performance"],Ue={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ue.buffers[e];0===t||10===t?((1===e?C:E)(Y(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ue.varargs+=4,a()[Ue.varargs-4>>2]},getStr:function(e){return Z(e)},get64:function(e,t){return e}};function Ge(e){return k?Ae(3,1,e):0}function He(e,t,n,r,a){if(k)return Ae(4,1,e,t,n,r,a)}function je(e,t,n,s){if(k)return Ae(5,1,e,t,n,s);for(var i=0,o=0;o<n;o++){var l=a()[t>>2],u=a()[t+4>>2];t+=8;for(var h=0;h<u;h++)Ue.printChar(e,r()[l+h]);i+=u}return a()[s>>2]=i,0}Ie.init();var qe,Ke,Xe,Ye,Ze=[null,Se,Be,Ge,He,je],Je={__clock_gettime:function(e,t){return Ce(e,t)},__emscripten_init_main_thread_js:function(e){at(e,!v,1,!x),Ie.threadInit()},__emscripten_thread_cleanup:function(e){k?postMessage({cmd:"cleanupThread",thread:e}):we(e)},__pthread_create_js:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(k&&0===a.length)return st(687865856,e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return k?(s.cmd="spawnThread",postMessage(s,a),0):Ee(s)},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(k)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Ie.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){fe("")},emscripten_check_blocking_allowed:function(){w||v||$("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:$e,emscripten_get_now:Ne,emscripten_memcpy_big:function(e,t,n){r().copyWithin(e,t,t+n)},emscripten_num_logical_cores:function(){return w?U().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Fe.length=t;for(var r=n>>3,a=0;a<t;a++)Fe[a]=s()[r+a];return(e<0?be[-e-1]:Ze[e]).apply(null,Fe)},emscripten_resize_heap:function(e){var t=r().length;if((e>>>=0)<=t)return!1;var n=2147483648;if(e>n)return!1;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);if(s=Math.min(s,e+100663296),Re(Math.min(n,Q(Math.max(e,s),65536))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,n){return ze(e)?Pe(e,t,n):Be(e,t,n)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return function(e,t){var n=t>>2,r=a()[n+6],s={alpha:!!a()[n+0],depth:!!a()[n+1],stencil:!!a()[n+2],antialias:!!a()[n+3],premultipliedAlpha:!!a()[n+4],preserveDrawingBuffer:!!a()[n+5],powerPreference:Ve[r],failIfMajorPerformanceCaveat:!!a()[n+7],majorVersion:a()[n+8],minorVersion:a()[n+9],enableExtensionsByDefault:a()[n+10],explicitSwapControl:a()[n+11],proxyContextToMainThread:a()[n+12],renderViaOffscreenBackBuffer:a()[n+13]},i=ze(e);return!i||s.explicitSwapControl?0:We.createContext(i,s)}(e,t)},exit:ke,fd_close:Ge,fd_seek:He,fd_write:je,memory:F||u.wasmMemory,setTempRet0:function(e){}},Qe=(function(){var e={env:Je,wasi_snapshot_preview1:Je};function t(e,t){var n=e.exports;if(u.asm=n,function(e){Ie.tlsInitFunctions.push(e)}(u.asm.emscripten_tls_init),ne=u.asm.__indirect_function_table,function(e){ae.unshift(e)}(u.asm.__wasm_call_ctors),R=t,!k){var r=Ie.unusedWorkers.length;Ie.unusedWorkers.forEach((function(e){Ie.loadWasmModuleToWorker(e,(function(){--r||function(){if(pe--,u.monitorRunDependencies&&u.monitorRunDependencies(pe),0==pe&&(null!==de&&(clearInterval(de),de=null),ce)){var e=ce;ce=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!_&&(x||v)){if("function"==typeof fetch&&!ge(he))return fetch(he,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+he+"'";return e.arrayBuffer()})).catch((function(){return ye(he)}));if(p)return new Promise((function(e,t){p(he,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ye(he)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),fe(e)}))}if(k||(pe++,u.monitorRunDependencies&&u.monitorRunDependencies(pe)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){return E("Module.instantiateWasm callback failed with error: "+e),!1}(_||"function"!=typeof WebAssembly.instantiateStreaming||me(he)||ge(he)||"function"!=typeof fetch?r(n):fetch(he,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(o)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(Qe=u._malloc=u.asm.malloc).apply(null,arguments)}),et=u._free=function(){return(et=u._free=u.asm.free).apply(null,arguments)},tt=(u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.emscripten_tls_init).apply(null,arguments)},u.___errno_location=function(){return(tt=u.___errno_location=u.asm.__errno_location).apply(null,arguments)}),nt=u._pthread_self=function(){return(nt=u._pthread_self=u.asm.pthread_self).apply(null,arguments)},rt=u._emscripten_main_thread_process_queued_calls=function(){return(rt=u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},at=(u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u.__emscripten_thread_init=function(){return(at=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)}),st=(u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_2=function(){return(u._emscripten_sync_run_in_main_thread_2=u.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_4=function(){return(st=u._emscripten_sync_run_in_main_thread_4=u.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),it=u._emscripten_run_in_main_runtime_thread_js=function(){return(it=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},ot=u._emscripten_dispatch_to_thread_=function(){return(ot=u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},lt=u.__emscripten_thread_free_data=function(){return(lt=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},ut=(u.__emscripten_thread_exit=function(){return(u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},u._memalign=function(){return(u._memalign=u.asm.memalign).apply(null,arguments)},u._emscripten_stack_set_limits=function(){return(ut=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)}),ht=u.stackSave=function(){return(ht=u.stackSave=u.asm.stackSave).apply(null,arguments)},pt=u.stackRestore=function(){return(pt=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},dt=u.stackAlloc=function(){return(dt=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)},ct=(u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.__emscripten_allow_main_runtime_queued_calls=21464);function ft(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function mt(e){if(e=e||y,!(pe>0)){if(k)return i(u),ue(),void postMessage({cmd:"loaded"});(function(){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)e=u.preRun.shift(),re.unshift(e);var e;xe(re)})(),pe>0||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}function t(){Ke||(Ke=!0,u.calledRun=!0,!M&&(ue(),i(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(!k){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)e=u.postRun.shift(),ie.unshift(e);xe(ie)}var e}()))}}if(u.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?O(e):function(){return L(e,t,n,arguments)}},u.keepRuntimeAlive=le,u.PThread=Ie,u.PThread=Ie,u.wasmMemory=F,u.ExitStatus=ft,ce=function e(){Ke||mt(),Ke||(ce=e)},u.run=mt,u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();if(mt(),l&&(Xe={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!l.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!l.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Ye=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Ye=e}if(Xe){var gt=Ye._dispose;Ye._dispose=function(){gt(),Xe.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Xe.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=r)})),H=m(((e,t)=>{var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){var t,r,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,n){t=e,r=n})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u,h,p,d=Object.assign({},s),c=[],f="object"==typeof window,m="function"==typeof importScripts,g="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,y="";g?(y=m?B().dirname(y)+"/":__dirname+"/",p=()=>{h||(u=P(),h=B())},i=function(e,t){return p(),e=h.normalize(e),u.readFileSync(e,t?void 0:"utf8")},l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{p(),e=h.normalize(e),u.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),c=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof le))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}):(f||m)&&(m?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),n&&(y=n),y=0!==y.indexOf("blob:")?y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},m&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,x=s.print||console.log.bind(console),v=s.printErr||console.warn.bind(console);Object.assign(s,d),d=null,s.arguments&&(c=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(b=s.wasmBinary);s.noExitRuntime;"object"!=typeof WebAssembly&&H("no native wasm support detected");var w,k=!1;function I(e){return s["_"+e]}function S(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,_,t,n)}(e,t=oe(n),n)}return t},array:function(e){var t=oe(e.length);return function(e,t){T.set(e,t)}(e,t),t}},i=I(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var h=s[n[u]];h?(0===l&&(l=se()),o[u]=h(r[u])):o[u]=r[u]}var p,d=i.apply(null,o);return p=d,0!==l&&ie(l),d=function(e){return"string"===t?A(e):"boolean"===t?Boolean(e):e}(p),d}var N,T,_,C,E="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function $(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&E)return E.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function A(e,t){return e?$(_,e,t):""}function F(e,t){return e%t>0&&(e+=t-e%t),e}function R(e){N=e,s.HEAP8=T=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=C=new Int32Array(e),s.HEAPU8=_=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le"),s.INITIAL_MEMORY;var D,M=[],O=[],L=[];var z,W,V=0,U=null,G=null;function H(e){s.onAbort&&s.onAbort(e),v(e="Aborted("+e+")"),k=!0,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}function j(e){return e.startsWith("data:application/octet-stream;base64,")}function q(e){return e.startsWith("file://")}function K(e){try{if(e==z&&b)return new Uint8Array(b);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){H(e)}}function X(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Z(n)():Z(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}s.preloadedImages={},s.preloadedAudios={},j(z="tfjs-backend-wasm.wasm")||(W=z,z=s.locateFile?s.locateFile(W,y):y+W);var Y=[];function Z(e){var t=Y[e];return t||(e>=Y.length&&(Y.length=e+1),Y[e]=t=D.get(e)),t}function J(){return 2147483648}function Q(e){try{return w.grow(e-N.byteLength+65535>>>16),R(w.buffer),1}catch(e){}}var ee,te,ne,re={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=re.buffers[e];0===t||10===t?((1===e?x:v)($(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return re.varargs+=4,C[re.varargs-4>>2]},getStr:function(e){return A(e)},get64:function(e,t){return e}},ae={abort:function(){H("")},emscripten_get_heap_max:J,emscripten_memcpy_big:function(e,t,n){_.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t=_.length,n=2147483648;if((e>>>=0)>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),Q(Math.min(n,F(Math.max(e,a),65536))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,a){},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=C[t>>2],o=C[t+4>>2];t+=8;for(var l=0;l<o;l++)re.printChar(e,_[i+l]);a+=o}return C[r>>2]=a,0},setTempRet0:function(e){}},se=(function(){var e={env:ae,wasi_snapshot_preview1:ae};function t(e,t){var n=e.exports;s.asm=n,R((w=s.asm.memory).buffer),D=s.asm.__indirect_function_table,function(e){O.unshift(e)}(s.asm.__wasm_call_ctors),function(){if(V--,s.monitorRunDependencies&&s.monitorRunDependencies(V),0==V&&(null!==U&&(clearInterval(U),U=null),G)){var e=G;G=null,e()}}()}function n(e){t(e.instance)}function a(t){return function(){if(!b&&(f||m)){if("function"==typeof fetch&&!q(z))return fetch(z,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+z+"'";return e.arrayBuffer()})).catch((function(){return K(z)}));if(o)return new Promise((function(e,t){o(z,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return K(z)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){v("failed to asynchronously prepare wasm: "+e),H(e)}))}if(V++,s.monitorRunDependencies&&s.monitorRunDependencies(V),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return v("Module.instantiateWasm callback failed with error: "+e),!1}(b||"function"!=typeof WebAssembly.instantiateStreaming||j(z)||q(z)||"function"!=typeof fetch?a(n):fetch(z,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return v("wasm streaming compile failed: "+e),v("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(r)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s._emscripten_main_thread_process_queued_calls=function(){return(s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},s.stackSave=function(){return(se=s.stackSave=s.asm.stackSave).apply(null,arguments)}),ie=s.stackRestore=function(){return(ie=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},oe=s.stackAlloc=function(){return(oe=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){function n(){ee||(ee=!0,s.calledRun=!0,!k&&(X(O),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),L.unshift(e);var e;X(L)}()))}e=e||c,V>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),M.unshift(e);var e;X(M)}(),V>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?I(e):function(){return S(e,t,n,arguments)}},G=function e(){ee||ue(),ee||(G=e)},s.run=ue,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(ue(),a&&(te={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)ne=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");ne=WasmBackendModuleThreadedSimd}if(te){var he=ne._dispose;ne._dispose=function(){he(),te.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),te.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModule=r)})),j=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},q=class{refCount(e){return K("refCount")}incRef(e){return K("incRef")}timerAvailable(){return!0}time(e){return K("time")}read(e){return K("read")}readSync(e){return K("readSync")}readToGPU(e,t){return K("readToGPU")}numDataIds(){return K("numDataIds")}disposeData(e,t){return K("disposeData")}write(e,t,n){return K("write")}move(e,t,n,r,a){return K("move")}memory(){return K("memory")}floatPrecision(){return K("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return K("dispose")}};function K(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function X(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Q(e,t,n)}function Y(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Q(e,n,r),Q(t,n,r)}function Z(e,t,n){return Math.max(e,Math.min(t,n))}function J(e){return e%2==0?e:e+1}function Q(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function ee(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function te(e,t){let n=Math.random();return t*n+(1-n)*e}function ne(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function re(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ae(e,t,n=""){re(ue(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function se(e){re(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ie(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Se(e)&&!n)for(let r=0;r<e.length;++r)ie(e[r],t,n);else t.push(e);return t}function oe(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function le(e){return 0===e.length}function ue(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function he(e){return e%1==0}function pe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function de(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ce(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return X(t),t}function fe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function me(e,t=e=>0,n){return new Promise(((r,a)=>{let s=0,i=()=>{if(e())return void r();s++;let o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function ge(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function ye(e,t){let n=t.length;return re((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),re(e.every((e=>he(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function be(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:ye(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function xe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ve(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function we(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ke(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ie(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Se(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Te(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function _e(e){return"string"==typeof e||e instanceof String}function Ce(e){return"boolean"==typeof e}function Ee(e){return"number"==typeof e}function $e(e){return Array.isArray(e)?$e(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ee(e)?"float32":_e(e)?"string":Ce(e)?"bool":"float32"}function Ae(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Fe(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Re(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function De(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=De(e+t*o,i,n,r)}return a}function Me(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return De(0,e,t,n)}function Oe(e,t){let n=Le(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Le(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ze(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Me(e,new Float32Array(n));if("int32"===t)return Me(e,new Int32Array(n));if("bool"===t)return Me(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Pe(e){e.forEach((t=>{re(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Be(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function We(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Ve(e){return e&&e.then&&"function"==typeof e.then}var Ue="tfjsflags",Ge=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=He,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(je().getBool("IS_TEST")||je().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];je().getBool("IS_TEST")||je().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Ve(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Ue in e&&e[Ue].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function He(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function je(){return Ke}var qe,Ke=null;function Xe(){if(null==qe){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}qe=e}return qe}function Ye(e,t){let n=function(){let e=Xe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Ze="Abs",Je="Acos",Qe="Acosh",et="Add",tt="AddN",nt="All",rt="Any",at="ArgMax",st="ArgMin",it="Asin",ot="Asinh",lt="Atan",ut="Atanh",ht="Atan2",pt="AvgPool",dt="AvgPoolGrad",ct="AvgPool3D",ft="AvgPool3DGrad",mt="BatchMatMul",gt="BatchToSpaceND",yt="Bincount",bt="BroadcastTo",xt="BroadcastArgs",vt="Cast",wt="Ceil",kt="ClipByValue",It="Complex",St="ComplexAbs",Nt="Concat",Tt="Conv2D",_t="Conv2DBackpropFilter",Ct="Conv2DBackpropInput",Et="Conv3D",$t="Conv3DBackpropFilterV2",At="Conv3DBackpropInputV2",Ft="Cos",Rt="Cosh",Dt="Cumprod",Mt="Cumsum",Ot="CropAndResize",Lt="DenseBincount",zt="DepthToSpace",Pt="DepthwiseConv2dNative",Bt="DepthwiseConv2dNativeBackpropFilter",Wt="DepthwiseConv2dNativeBackpropInput",Vt="Diag",Ut="Dilation2D",Gt="Dilation2DBackpropInput",Ht="Dilation2DBackpropFilter",jt="RealDiv",qt="Einsum",Kt="Elu",Xt="EluGrad",Yt="Erf",Zt="Equal",Jt="Exp",Qt="ExpandDims",en="Expm1",tn="FFT",nn="Fill",rn="FlipLeftRight",an="Floor",sn="FloorDiv",on="FusedBatchNorm",ln="GatherV2",un="GatherNd",hn="Greater",pn="GreaterEqual",dn="Identity",cn="IFFT",fn="Imag",mn="IsFinite",gn="IsInf",yn="IsNan",bn="LeakyRelu",xn="Less",vn="LessEqual",wn="LinSpace",kn="Log",In="Log1p",Sn="LogicalAnd",Nn="LogicalNot",Tn="LogicalOr",_n="LogSoftmax",Cn="LRN",En="LRNGrad",$n="Max",An="Maximum",Fn="MaxPool",Rn="MaxPoolGrad",Dn="MaxPool3D",Mn="MaxPool3DGrad",On="MaxPoolWithArgmax",Ln="Mean",zn="Min",Pn="Minimum",Bn="MirrorPad",Wn="Mod",Vn="Multinomial",Un="Multiply",Gn="Neg",Hn="NotEqual",jn="NonMaxSuppressionV3",qn="NonMaxSuppressionV4",Kn="NonMaxSuppressionV5",Xn="OnesLike",Yn="OneHot",Zn="Pack",Jn="PadV2",Qn="Pool",er="Pow",tr="Prelu",nr="Prod",rr="Range",ar="Real",sr="Reciprocal",ir="Relu",or="Reshape",lr="ResizeNearestNeighbor",ur="ResizeNearestNeighborGrad",hr="ResizeBilinear",pr="ResizeBilinearGrad",dr="Relu6",cr="Reverse",fr="Round",mr="Rsqrt",gr="ScatterNd",yr="Select",br="Selu",xr="Slice",vr="Sin",wr="Sinh",kr="Sign",Ir="Sigmoid",Sr="Softplus",Nr="Sqrt",Tr="Sum",_r="SpaceToBatchND",Cr="SplitV",Er="Softmax",$r="SparseFillEmptyRows",Ar="SparseReshape",Fr="SparseSegmentMean",Rr="SparseSegmentSum",Dr="SparseToDense",Mr="SquaredDifference",Or="Square",Lr="StridedSlice",zr="StringNGrams",Pr="StringSplit",Br="StringToHashBucketFast",Wr="Sub",Vr="Tan",Ur="Tanh",Gr="Tile",Hr="TopK",jr="Transform",qr="Transpose",Kr="Unique",Xr="Unpack",Yr="UnsortedSegmentSum",Zr="ZerosLike",Jr="Step",Qr="FromPixels",ea="RotateWithOffset",ta="_FusedMatMul",na="FusedConv2D",ra="FusedDepthwiseConv2D";function aa(...e){je().getBool("IS_TEST")||je().getBool("PROD")||console.warn(...e)}function sa(...e){je().getBool("IS_TEST")||je().getBool("PROD")||console.log(...e)}var ia=Ye("kernelRegistry",(()=>new Map)),oa=Ye("gradRegistry",(()=>new Map));function la(e,t){let n=ga(e,t);return ia.get(n)}function ua(e){return oa.get(e)}function ha(e){let t=ia.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function pa(e){let{kernelName:t,backendName:n}=e,r=ga(t,n);ia.has(r)&&aa(`The kernel '${t}' for backend '${n}' is already registered`),ia.set(r,e)}function da(e){let{kernelName:t}=e;oa.has(t)&&je().getBool("DEBUG")&&aa(`Overriding the gradient for '${t}'`),oa.set(t,e)}function ca(e,t){let n=ga(e,t);if(!ia.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ia.delete(n)}function fa(e){if(!oa.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);oa.delete(e)}function ma(e,t){ha(e).forEach((e=>{pa(Object.assign({},e,{backendName:t}))}))}function ga(e,t){return`${t}_${e}`}var ya={};g(ya,{arraysEqual:()=>ue,assert:()=>re,assertNonNegativeIntegerDimensions:()=>Pe,assertNonNull:()=>se,assertShapesMatch:()=>ae,bytesFromStringArray:()=>Te,bytesPerElement:()=>Ne,checkConversionForErrors:()=>we,clamp:()=>Z,computeStrides:()=>Re,createScalarValue:()=>Fa,createShuffledIndices:()=>ce,decodeString:()=>La,distSquared:()=>ne,encodeString:()=>Oa,fetch:()=>Ma,fingerPrint64:()=>Aa,flatten:()=>ie,getArrayFromDType:()=>ve,getTypedArrayFromDType:()=>xe,hasEncodingLoss:()=>Ie,hexToLong:()=>va,indexToLoc:()=>We,inferDtype:()=>$e,inferFromImplicitShape:()=>ge,isBoolean:()=>Ce,isFunction:()=>Ae,isInt:()=>he,isNumber:()=>Ee,isPromise:()=>Ve,isScalarShape:()=>le,isString:()=>_e,isTypedArray:()=>Se,isValidDtype:()=>ke,locToIndex:()=>Be,makeOnesTypedArray:()=>Oe,makeZerosNestedTypedArray:()=>ze,makeZerosTypedArray:()=>Le,nearestDivisor:()=>Fe,nearestLargerEven:()=>J,now:()=>Da,parseAxisParam:()=>ye,randUniform:()=>te,repeatedTry:()=>me,rightPad:()=>fe,shuffle:()=>X,shuffleCombo:()=>Y,sizeFromShape:()=>oe,sizeToSquarishShape:()=>de,squeezeShape:()=>be,sum:()=>ee,swap:()=>Q,tanh:()=>pe,toNestedArray:()=>Me,toTypedArray:()=>Ra});var ba=y(b()),xa=ba.default||ba;function va(e){return xa.fromString(e,!0,16)}var wa=va("c3a5c85c97cb3127"),ka=va("b492b66fbe98f273"),Ia=va("9ae16a3b2f90404f");function Sa(e){return e.xor(e.shru(47))}function Na(e,t,n){let r=e.slice(t,t+n);return xa.fromBytes(Array.from(r),!0,!0)}function Ta(e,t){return Na(e,t,8)}function _a(e,t){return Na(e,t,4)}function Ca(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ea(e,t,n=va("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function $a(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Ca(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(Ca(a,44)),[a.add(r),s.add(i)]}(Ta(e,t),Ta(e,t+8),Ta(e,t+16),Ta(e,t+24),n,r)}function Aa(e,t=e.length){let n=xa.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=Ia.add(2*t),r=Ta(e,0).add(Ia),a=Ta(e,t-8);return Ea(Ca(a,37).mul(n).add(r),Ca(r,25).add(a).mul(n),n)}if(t>=4){let n=Ia.add(2*t);return Ea(_a(e,0).shl(3).add(t),_a(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Sa(Ia.mul(n).xor(wa.mul(r))).mul(Ia)}return Ia}(e,t):function(e,t=e.length){let n=Ia.add(2*t),r=Ta(e,0).mul(ka),a=Ta(e,8),s=Ta(e,t-8).mul(n),i=Ta(e,t-16).mul(Ia);return Ea(Ca(r.add(a),43).add(Ca(s,30)).add(i),r.add(Ca(a.add(Ia),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=Ia.add(2*t),r=Ta(e,0).mul(Ia),a=Ta(e,8),s=Ta(e,t-8).mul(n),i=Ta(e,t-16).mul(Ia),o=Ca(r.add(a),43).add(Ca(s,30)).add(i),l=Ea(o,r.add(Ca(a.add(Ia),18)).add(s),n),u=Ta(e,16).mul(n),h=Ta(e,24),p=o.add(Ta(e,t-32)).mul(n),d=l.add(Ta(e,t-24)).mul(n);return Ea(Ca(u.add(h),43).add(Ca(p,30)).add(d),u.add(Ca(h.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(ka).add(113),s=Sa(a.mul(Ia).add(113)).mul(Ia),i=[xa.UZERO,xa.UZERO],o=[xa.UZERO,xa.UZERO];r=r.mul(Ia).add(Ta(e,0));let l=0,u=64*(t-1>>6),h=u+(t-1&63)-63;do{r=Ca(r.add(a).add(i[0]).add(Ta(e,l+8)),37).mul(ka),a=Ca(a.add(i[1]).add(Ta(e,l+48)),42).mul(ka),r=r.xor(o[1]),a=a.add(i[0]).add(Ta(e,l+40)),s=Ca(s.add(o[0]),33).mul(ka),i=$a(e,l,i[1].mul(ka),r.add(o[0])),o=$a(e,l+32,s.add(o[1]),a.add(Ta(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let p=ka.add(s.and(255).shl(1));return l=h,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ca(r.add(a).add(i[0]).add(Ta(e,l+8)),37).mul(p),a=Ca(a.add(i[1]).add(Ta(e,l+48)),42).mul(p),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Ta(e,l+40))),s=Ca(s.add(o[0]),33).mul(p),i=$a(e,l,i[1].mul(p),r.add(o[0])),o=$a(e,l+32,s.add(o[1]),a.add(Ta(e,l+16))),[s,r]=[r,s],Ea(Ea(i[0],o[0],p).add(Sa(a).mul(wa)).add(s),Ea(i[1],o[1],p).add(r),p)}function Fa(e,t){return"string"===t?Oa(e):Ra([e],t)}function Ra(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ie(e)),je().getBool("DEBUG")&&we(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Da(){return je().platform.now()}function Ma(e,t){return je().platform.fetch(e,t)}function Oa(e,t="utf-8"){return t=t||"utf-8",je().platform.encode(e,t)}function La(e,t="utf-8"){return t=t||"utf-8",je().platform.decode(e,t)}var za=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ba)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=Da();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:Da()-i})}if(je().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){let n=r[t];n.data().then((t=>{Pa(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}};function Pa(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var Ba=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?fe(`${r}ms`,9):r.error,o=fe(e,25),l=t.rank,u=t.size,h=fe(t.shape.toString(),14),p="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${u}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function Wa(e,t,n,r){let a=Re(t),s=function(e,t,n,r){let a=oe(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Ha(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Va(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Ga(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Va(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:_e(e)?`'${e}'`:"bool"===n?Ua(e):parseFloat(e.toFixed(7)).toString(),fe(r,t)}function Ua(e){return 0===e?"false":"true"}function Ga(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Va(Ha(e)[0],0,n)]}return"bool"===n?[Ua(e[0])]:[e[0].toString()]}if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Ha(r),s=Ha(s)),["["+r.map(((e,t)=>Va(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Va(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Ha(e):Array.from(e)).map(((e,t)=>Va(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),h=r.slice(1),p=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){let r=t*p,s=r+p;d.push(...Ga(e.slice(r,s),u,n,h,a,!1))}d.push("...");for(let t=o-3;t<o;t++){let r=t*p,s=r+p;d.push(...Ga(e.slice(r,s),u,n,h,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*p,s=r+p;d.push(...Ga(e.slice(r,s),u,n,h,a,t===o-1))}let c=2===l?",":"";d[0]="["+d[0]+c;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Ha(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var ja=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=oe(e),null!=n){let e=n.length;re(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ve(t,this.size),this.strides=Re(e)}set(e,...t){0===t.length&&(t=[0]),re(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return qa().makeTensor(this.values,this.shape,this.dtype)}},qa=null,Ka=null;var Xa=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=oe(e),this.strides=Re(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Ka.buffer(this.shape,this.dtype,e)}bufferSync(){return Ka.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Me(this.shape,e,"complex64"===this.dtype)}arraySync(){return Me(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=qa().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>La(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),qa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=qa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>La(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await qa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(qa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ka.print(this,e)}clone(){return this.throwIfDisposed(),Ka.clone(this)}toString(e=!1){return Wa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ka.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),qa().makeVariable(this,e,t,n)}};function Ya(){return Ye("Tensor",(()=>Xa))}Object.defineProperty(Xa,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ya();var Za=class extends Xa{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ue(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);qa().disposeTensor(this),this.dataId=e.dataId,qa().incRef(this,null)}dispose(){qa().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Za,Symbol.hasInstance,{value:e=>e instanceof Xa&&null!=e.assign&&e.assign instanceof Function});var Ja,Qa,es,ts,ns,rs={};g(rs,{assertTypesMatch:()=>ls,getTensorsInContainer:()=>hs,isTensorInList:()=>us,makeTypesMatch:()=>os}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ja||(Ja={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Qa||(Qa={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(es||(es={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ts||(ts={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ns||(ns={}));var as={float32:ts,int32:Qa,bool:es,complex64:ns};function ss(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return as[e][t]}function is(e){return ss(e,"int32")}function os(e,t){if(e.dtype===t.dtype)return[e,t];let n=ss(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ls(e,t){re(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function us(e,t){return t.some((t=>t.id===e.id))}function hs(e){let t=[];return ps(e,t,new Set),t}function ps(e,t,n){if(null==e)return;if(e instanceof Xa)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),ps(a,t,n))}}function ds(e){return null!=e.kernelName}var cs=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},fs=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new cs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(aa(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new za(this.backendInstance),!0}setupRegisteredKernels(){ha(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ha(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof q||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,aa(`Initialization of backend ${e} failed`),aa(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return aa(`Initialization of backend ${e} failed`),aa(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return fs.nextTensorId++}nextVariableId(){return fs.nextVariableId++}clone(e){let t=gs.runKernel(dn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e},n={dtype:"float32"};return gs.runKernel(vt,t,n)}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==la(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=ds(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ds(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=la(t,this.backendName);re(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>{if(null!=e.rank)return e;let{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!a||(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:h,attrs:p}=e,d=ds(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,h,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,h,t,d,r,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=ua(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(re(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&_e(e[0])&&(a=e.map((e=>Oa(e))));let s=r.write(a,t,n),i=new Xa(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=Te(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a=new Xa(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Za(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Za||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*Ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ua(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=Le(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=hs(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(re(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));re(a instanceof Xa,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Oe(oe(e),"float32");return gs.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!ue(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),ys);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return re(Ae(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{re(t.every((e=>e instanceof Xa)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),re(n.value instanceof Xa,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),re(Ae(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];re(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),re(s.every((e=>e instanceof Xa)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Da(),n=await this.backend.time(e);return n.wallMs=Da()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new cs;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function ms(){let e=Xe();if(null==e._tfengine){let t=new Ge(e);e._tfengine=new fs(t)}return function(e){Ke=e}(e._tfengine.ENV),function(e){qa=e}((()=>e._tfengine)),e._tfengine}fs.nextTensorId=0,fs.nextVariableId=0;var gs=ms();function ys(e,t){let n={a:e,b:t};return gs.runKernel(et,n)}var bs,xs={};function vs(e){bs=e}function ws(e){if(void 0!==bs)return bs;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ks(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}g(xs,{isBrowser:()=>ks,isMobile:()=>ws,mockIsMobile:()=>vs});var Is=je();function Ss(e,t){let n=e;if(Se(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||Se(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&je().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ns(e,r,[]),r}function Ns(e,t,n){if(n=n||[],!Array.isArray(e)&&!Se(e))return void re(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));re(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),re(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)Ns(e[t],r,n.concat(t))}function Ts(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function _s(e,t,n,r="numeric"){if(e instanceof Xa)return Ts(r,e.dtype,t,n),e;let a=$e(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Ts(r,a,t,n),null==e||!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=Ss(e,a);!Se(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Ra(e,a):ie(e,[],!0);return gs.makeTensor(i,s,a)}function Cs(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>_s(e,`${t}[${a}]`,n,r)))}Is.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Is.registerFlag("IS_BROWSER",(()=>ks())),Is.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Is.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Is.registerFlag("PROD",(()=>!1)),Is.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Is.getBool("DEBUG"))),Is.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Is.registerFlag("IS_TEST",(()=>!1)),Is.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Is.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Is.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var Es="__op";function $s(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Es;let a=(...e)=>{gs.startScope(n);try{let t=r(...e);return Ve(t)&&console.error("Cannot return a Promise inside of tidy."),gs.endScope(t),t}catch(e){throw gs.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var As=$s({complex_:function(e,t){let n=_s(e,"real","complex"),r=_s(t,"imag","complex");ae(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return gs.runKernel(It,a)}});function Fs(e,t,n,r){if(null==r&&(r=$e(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Pe(t);let e=oe(t),r=oe(n);re(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==oe(t.slice(e));re(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!Se(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Ra(e,r):ie(e,[],!0),gs.makeTensor(e,t,r)}function Rs(e,t,n){return Fs(e,t,Ss(e,n),n)}var Ds={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ms(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ls(await Promise.all(r)),specs:n}}function Os(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=oe(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=Ds[r.dtype],h=e.slice(a,a+u*l),p="uint8"===r.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=Hs()),t=n(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=oe(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+4))[0];a+=4;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=Ds[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=Rs(e,l,"float32"),o=Rs(n,l,"float32");r[i]=As(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=Rs(t,l,o))}return r}function Ls(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var zs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ps(e){return zs?Buffer.byteLength(e):new Blob([e]).size}function Bs(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ws(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Vs(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Us(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){let[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Gs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ps(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ps(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Hs(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var js=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==js.instance&&(js.instance=new js),js.instance}static registerSaveRouter(e){js.getInstance().saveRouters.push(e)}static registerLoadRouter(e){js.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return js.getHandlers(e,"save")}static getLoadHandlers(e,t){return js.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?js.getInstance().loadRouters:js.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},qs=e=>js.registerSaveRouter(e),Ks=e=>js.registerLoadRouter(e),Xs=e=>js.getSaveHandlers(e),Ys=(e,t)=>js.getLoadHandlers(e,t),Zs="tensorflowjs",Js="models_store",Qs="model_info_store";function ei(){if(!je().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ti(e){let t=e.result;t.createObjectStore(Js,{keyPath:"modelPath"}),t.createObjectStore(Qs,{keyPath:"modelPath"})}var ni=class{constructor(e){if(this.indexedDB=ei(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(Zs,1);r.onupgradeneeded=()=>ti(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(Js,"readonly"),r=t.objectStore(Js).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=Gs(t),i=a.transaction(Qs,"readwrite"),o=i.objectStore(Qs),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(Js,"readwrite");let l=r.objectStore(Js).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(Qs);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};ni.URL_SCHEME="indexeddb://";var ri=e=>je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ni.URL_SCHEME)?function(e){return new ni(e)}(e.slice(ni.URL_SCHEME.length)):null;js.registerSaveRouter(ri),js.registerLoadRouter(ri);var ai="/",si="tensorflowjs_models",ii="info",oi="model_topology",li="weight_specs",ui="weight_data",hi="model_metadata";function pi(e){return{info:[si,e,ii].join(ai),topology:[si,e,oi].join(ai),weightSpecs:[si,e,li].join(ai),weightData:[si,e,ui].join(ai),modelMetadata:[si,e,hi].join(ai)}}function di(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function ci(e){let t=e.split(ai);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ai)}var fi=class{constructor(e){if(!je().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=pi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Gs(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(zs)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw di(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(zs){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};fi.URL_SCHEME="localstorage://";var mi=e=>je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(fi.URL_SCHEME)?function(e){return new fi(e)}(e.slice(fi.URL_SCHEME.length)):null;js.registerSaveRouter(mi),js.registerLoadRouter(mi);var gi="://",yi=class{constructor(){this.managers={}}static getInstance(){return null==yi.instance&&(yi.instance=new yi),yi.instance}static registerManager(e,t){re(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(gi)&&(e=e.slice(0,e.indexOf(gi))),re(e.length>0,(()=>"scheme must not be an empty string."));let n=yi.getInstance();re(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function bi(e){if(-1===e.indexOf(gi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${yi.getSchemes().join(",")}`);return{scheme:e.split(gi)[0],path:e.split(gi)[1]}}async function xi(e,t,n=!1){re(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=js.getLoadHandlers(e);re(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),re(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=js.getSaveHandlers(t);re(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),re(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=bi(e).scheme,l=bi(e).path,u=o===bi(e).scheme,h=await a.load();n&&u&&await yi.getManager(o).removeModel(l);let p=await i.save(h);return n&&!u&&await yi.getManager(o).removeModel(l),p.modelArtifactsInfo}async function vi(){let e=yi.getSchemes(),t={};for(let n of e){let e=await yi.getManager(n).listModels();for(let r in e){t[n+gi+r]=e[r]}}return t}async function wi(e){let t=bi(e);return yi.getManager(t.scheme).removeModel(t.path)}async function ki(e,t){return xi(e,t,!1)}async function Ii(e,t){return xi(e,t,!0)}if(je().get("IS_BROWSER")){je().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{yi.registerManager(fi.URL_SCHEME,new class{constructor(){re(je().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),re("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=si+ai,n=ai+ii;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[ci(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=pi(e=function(e){return e.startsWith(fi.URL_SCHEME)?e.slice(fi.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return di(t),n}})}catch(e){}try{yi.registerManager(ni.URL_SCHEME,new class{constructor(){this.indexedDB=ei()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Zs,1);n.onupgradeneeded=()=>ti(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Qs,"readonly"),s=a.objectStore(Qs).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(ni.URL_SCHEME)?e.slice(ni.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(Zs,1);r.onupgradeneeded=()=>ti(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(Qs,"readwrite"),o=i.objectStore(Qs),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(Js,"readwrite");let r=a.objectStore(Js).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var Si,Ni=()=>x();function Ti(e,t="float32",n){return t=t||"float32",Pe(e),new ja(e,t,n)}je().get("IS_NODE")&&!je().get("IS_BROWSER")&&je().setPlatform("node",new class{constructor(){this.util=v(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=je().global.fetch?je().global.fetch(e,t):(null==Si&&(Si=Ni()),Si(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var _i=$s({cast_:function(e,t){let n=_s(e,"x","cast");if(!ke(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return gs.runKernel(vt,r,a)}});var Ci=$s({clone_:function(e){let t={x:_s(e,"x","clone","string_or_numeric")};return gs.runKernel(dn,t)}});function Ei(e,t=!1){console.log(e.toString(t))}ms(),function(e){Ka=e}({buffer:Ti,cast:_i,clone:Ci,print:Ei});var $i={};g($i,{browserFiles:()=>Di,browserHTTPRequest:()=>Ui,concatenateArrayBuffers:()=>Bs,copyModel:()=>ki,decodeWeights:()=>Os,encodeWeights:()=>Ms,fromMemory:()=>ji,getLoadHandlers:()=>Ys,getModelArtifactsForJSON:()=>Us,getModelArtifactsInfoForJSON:()=>Gs,getSaveHandlers:()=>Xs,http:()=>Vi,isHTTPScheme:()=>Bi,listModels:()=>vi,loadWeights:()=>Li,moveModel:()=>Ii,registerLoadRouter:()=>Ks,registerSaveRouter:()=>qs,removeModel:()=>wi,weightsLoaderFactory:()=>zi,withSaveHandler:()=>qi});function Ai(e){return new Promise((e=>setTimeout(e))).then(e)}var Fi=class{constructor(e){if(!je().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Fi.URL_SCHEME)&&(e=e.slice(Fi.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=Vs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Ai((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ai((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Gs(e)}}}};Fi.URL_SCHEME="downloads://";var Ri=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=Us(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Bs(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>Ws(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=Ws(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}};function Di(e){return new Ri(e)}function Mi(e,t,n,r){var a;re(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){re(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),re(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),re(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Oi(e,t){null==t&&(t={});let n=null==t.fetchFunc?je().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Mi(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Mi(a,t.onProgress,.5,1)}async function Li(e,t="",n,r){return zi((e=>Oi(e,{requestInit:r})))(e,t,n)}function zi(e){return async(t,n="",r)=>{let a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=Ds[l]*oe(e.shape),h=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(h(),i[n]=!0)})):h(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let h=await e(u),p={},d=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let e=0;e<n;e++)r+=h[d+e].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(h[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=Os(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)p[e]=t[e]})),d+=n})),p}}js.registerSaveRouter((e=>je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Fi.URL_SCHEME)?function(e="model"){return new Fi(e)}(e.slice(Fi.URL_SCHEME.length)):null));var Pi=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(re("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=je().platform.fetch,re(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&re(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Vs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Gs(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Us(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(let t of e)s.push(...t.weights);let i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Bs(await Oi(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Bi(e){return null!=e.match(Pi.URL_SCHEME_REGEX)}Pi.URL_SCHEME_REGEX=/^https?:\/\//;var Wi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Bi(e))):Bi(e),n)return Vi(e,t)}return null};function Vi(e,t){return new Pi(e,t)}function Ui(e,t){return Vi(e,t)}js.registerSaveRouter(Wi),js.registerLoadRouter(Wi);var Gi=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},Hi=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function ji(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Gi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function qi(e){return new Hi(e)}var Ki={};g(Ki,{confusionMatrix:()=>Ji});var Xi=$s({matMul_:function(e,t,n=!1,r=!1){let a=_s(e,"a","matMul"),s=_s(t,"b","matMul");[a,s]=os(a,s);let i={a:a,b:s},o={transposeA:n,transposeB:r};return gs.runKernel(mt,i,o)}});var Yi=$s({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:_s(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return gs.runKernel(Yn,a,s)}});var Zi=$s({transpose_:function(e,t){let n=_s(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{re(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();let r={x:n},a={perm:t};return gs.runKernel(qr,r,a)}});var Ji=$s({confusionMatrix_:function(e,t,n){let r=_s(e,"labels","confusionMatrix"),a=_s(t,"predictions","confusionMatrix");re(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),re(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),re(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),re(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),re(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=Yi(_i(r,"int32"),n),i=Yi(_i(a,"int32"),n),o=Zi(s),l=Xi(o,i);return _i(l,"int32")}}),Qi={};function eo(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function to(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function no(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}g(Qi,{assertAndGetBroadcastShape:()=>no,getBroadcastDims:()=>eo,getReductionAxes:()=>to});var ro,ao={};function so(e,t,n){if(se(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=Ss(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Fs(e,t,r,n)}function io(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=la(Qr,gs.backendName)){let n={pixels:e},r={numChannels:t};return gs.runKernel(Qr,n,r)}let l,u,[h,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,h,p).data;else if(r||n)l=e.data;else if(s||a||o){if(null==ro)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");ro=new OffscreenCanvas(1,1).getContext("2d")}else ro=document.createElement("canvas").getContext("2d");ro.canvas.width=h,ro.canvas.height=p,ro.drawImage(e,0,0,h,p),l=ro.getImageData(0,0,h,p).data}if(4===t)u=new Int32Array(l);else{let e=h*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return so(u,[p,h,t],"int32")}function oo(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function lo(e,t=3){let n=null;if(je().getBool("WRAP_TO_IMAGEBITMAP")&&oo(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return io(n,t)}async function uo(e,t){let n=_s(e,"img","toPixels");if(!(e instanceof Xa)){let e=n;n=_i(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}g(ao,{fromPixels:()=>ho,fromPixelsAsync:()=>lo,toPixels:()=>uo});var ho=$s({fromPixels_:io}),po={};function co(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===oe(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let h=[...Re(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,h]}g(po,{prepareAndValidate:()=>co});var fo={};function mo(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function go(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}mo(n,t,e)}function yo(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:oe(t.shape)/o,sliceSize:i,strides:[...Re(n.slice(0,a)),1],outputSize:oe(n)}}g(fo,{calculateShapes:()=>yo,validateInput:()=>go,validateUpdateShape:()=>mo});var bo={};g(bo,{assertParamsValid:()=>wo,computeFlatOffset:()=>Do,computeOutShape:()=>Io,getNormalizedAxes:()=>_o,isSliceContinous:()=>Ro,maskToAxes:()=>ko,parseSliceParams:()=>Mo,sliceInfo:()=>Oo,startForAxis:()=>Ao,startIndicesWithElidedDims:()=>Co,stopForAxis:()=>Fo,stopIndicesWithElidedDims:()=>Eo,stridesForAxis:()=>$o,stridesWithElidedDims:()=>So});var xo=-2,vo=-1;function wo(e,t,n){let r=e.shape.length;re(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),re(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)re(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function ko(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Io(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function So(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function No(e,t,n){return n<=e?n:n-(t-1)}function To(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function _o(e,t,n,r,a,s,i,o,l){let u=e.length,h=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;h=Co(i,l,u,r,e),p=Eo(o,l,u,a,e),d=So(s,l,u,e)}else for(let t=0;t<u;t++)h[t]=Ao(i,r,s,e,t,l),p[t]=Fo(o,a,s,e,t,l),d[t]=$o(s,t,l);return{begin:h,end:p,strides:d}}function Co(e,t,n,r,a){let s=[...a],i=To(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=No(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function Eo(e,t,n,r,a){let s=[...a],i=To(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=No(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=Z(0,s[e],a[e])}return s}function $o(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ao(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=Z(0,i,l-1),i}function Fo(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?Z(0,i,l):Z(-1,i,l-1),i}function Ro(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Do(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Mo(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{re(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(re(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Oo(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let h=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<p.dims;e++)h&&!!(1<<e&o)&&p.numAddAxisAfterEllipsis++,1<<e&i&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(xo),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(vo),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}let a=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];let i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){let e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Lo(d.begin[t],0,d.strides[t],r,a,s),d.end[t]=Lo(d.end[t],1,d.strides[t],r,a,s);let e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;c=c&&e,f=f&&(0===t&&1===d.strides[t]||e)}else c=c&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){let t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===xo&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==xo)),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Lo(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var zo={};g(zo,{Serializable:()=>Po,SerializationMap:()=>Bo,registerClass:()=>Wo});var Po=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Bo=class{constructor(){this.classNameMap={}}static getMap(){return null==Bo.instance&&(Bo.instance=new Bo),Bo.instance}static register(e){Bo.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Wo(e){re(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),re("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),re(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Bo.register(e)}var Vo={};g(Vo,{TEST_EPSILON_FLOAT16:()=>Go,encodeStrings:()=>el,expectArrayBuffersEqual:()=>Qo,expectArraysClose:()=>Ho,expectArraysEqual:()=>Xo,expectNumbersClose:()=>Yo,expectPromiseToFail:()=>Ko,expectValuesInRange:()=>Jo,testEpsilon:()=>jo});var Uo=.001,Go=.1;function Ho(e,t,n){return null==n&&(n=jo()),qo(e,t,((e,t)=>Zo(e,t,n)))}function jo(){return 32===gs.backend.floatPrecision()?Uo:Go}function qo(e,t,n){let r=!0;if((Se(e)||Se(t))&&(r=!1),Se(e)&&Se(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=Ss(e),r=Ss(t);if(!ue(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=Se(e)?e:ie(e),s=Se(t)?t:ie(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Ko(e,t){e().then((()=>t.fail()),(()=>t()))}function Xo(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return _e(e)||_e(e[0])||_e(t)||_e(t[0])?qo(e,n,((e,t)=>e==t)):qo(e,t,((e,t)=>Zo(e,t,0)))}function Yo(e,t,n){if(null==n&&(n=jo()),!Zo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Zo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Jo(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Qo(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function el(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?el(n):e[t]=Oa(n)}return e}var tl="3.15.0";function nl(){je().set("PROD",!0)}function rl(){je().set("DEBUG",!0)}function al(){je().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function sl(e){je().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function il(){gs.disposeVariables()}function ol(){return gs}function ll(){return gs.memory()}function ul(e){return gs.profile(e)}function hl(e,t){return gs.tidy(e,t)}function pl(e){hs(e).forEach((e=>e.dispose()))}function dl(e){return gs.keep(e)}function cl(e){return gs.time(e)}function fl(e){return gs.setBackend(e)}function ml(){return gs.ready()}function gl(){return gs.backendName}function yl(e){gs.removeBackend(e)}function bl(e){return gs.findBackend(e)}function xl(e){return gs.findBackendFactory(e)}function vl(e,t,n=1){return gs.registerBackend(e,t,n)}function wl(){return gs.backend}function kl(e,t){je().setPlatform(e,t)}!function(e){0}(sl);var Il=$s({add_:function(e,t){let n=_s(e,"a","add"),r=_s(t,"b","add");[n,r]=os(n,r);let a={a:n,b:r};return gs.runKernel(et,a)}});var Sl=$s({floorDiv_:function(e,t){let n=_s(e,"a","floorDiv"),r=_s(t,"b","floorDiv");[n,r]=os(n,r);let a={a:n,b:r};return gs.runKernel(sn,a)}});var Nl=$s({div_:function(e,t){let n=_s(e,"a","div"),r=_s(t,"b","div");if([n,r]=os(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Sl(n,r);let a={a:n,b:r};return gs.runKernel(jt,a,{})}});var Tl=$s({mul_:function(e,t){let n=_s(e,"a","mul"),r=_s(t,"b","mul");[n,r]=os(n,r);let a={a:n,b:r};return gs.runKernel(Un,a)}});var _l=$s({abs_:function(e){let t=_s(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return gs.runKernel(St,e)}{let e={x:t};return gs.runKernel(Ze,e)}}});var Cl=$s({acos_:function(e){let t={x:_s(e,"x","acos")};return gs.runKernel(Je,t)}});var El=$s({acosh_:function(e){let t={x:_s(e,"x","acosh")};return gs.runKernel(Qe,t)}});var $l=$s({addN_:function(e){re(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),re(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>_s(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ue(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return gs.runKernel(tt,r)}});var Al=$s({all_:function(e,t=null,n=!1){let r={x:_s(e,"x","all","bool")},a={axis:t,keepDims:n};return gs.runKernel(nt,r,a)}});var Fl=$s({any_:function(e,t=null,n=!1){let r={x:_s(e,"x","any","bool")},a={axis:t,keepDims:n};return gs.runKernel(rt,r,a)}});var Rl=$s({argMax_:function(e,t=0){let n={x:_s(e,"x","argMax")},r={axis:t};return gs.runKernel(at,n,r)}});var Dl=$s({argMin_:function(e,t=0){let n={x:_s(e,"x","argMin")},r={axis:t};return gs.runKernel(st,n,r)}});var Ml=$s({asin_:function(e){let t={x:_s(e,"x","asin")};return gs.runKernel(it,t)}});var Ol=$s({asinh_:function(e){let t={x:_s(e,"x","asinh")};return gs.runKernel(ot,t)}});var Ll=$s({atan_:function(e){let t={x:_s(e,"x","atan")};return gs.runKernel(lt,t)}});var zl=$s({atan2_:function(e,t){let n=_s(e,"a","atan2"),r=_s(t,"b","atan2");[n,r]=os(n,r);let a={a:n,b:r};return gs.runKernel(ht,a)}});var Pl=$s({atanh_:function(e){let t={x:_s(e,"x","atanh")};return gs.runKernel(ut,t)}});function Bl(e,t,n,r,a="NHWC",s){return Ul(e,[...t,e[3]],n,s,r,null,null,Jl(a))}function Wl(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=jl(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return Ul(e,o,n,r,a,s,!1,i)}function Vl(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,h,p]=ql(t);if("NDHWC"===i)l="channelsLast",o=[u,h,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,h,p,e[1],e[1]]}return Gl(e,o,n,r,a,!1,l,s)}function Ul(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,h]=e}let d,[c,f,,m]=t,[g,y]=jl(n),[b,x]=jl(r),v=Kl(c,b),w=Kl(f,x),{padInfo:k,outHeight:I,outWidth:S}=function(e,t,n,r,a,s,i,o,l){let u,h,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=Hl(e,t,n));let s=e[0],i=e[1],o=Xl((s-t+2*r)/n+1,a),l=Xl((i-t+2*r)/n+1,a);return[o,l]}([t,n],s,r,e,o);h=a[0],p=a[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/a);let e=Math.max(0,(h-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2);u={top:l,bottom:d,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},h=Xl((t-s+d+c)/r+1,o),p=Xl((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:h,outWidth:p}}(a,u,h,g,y,v,w,s,o),N=i?m*p:m;return"channelsFirst"===o?d=[l,N,I,S]:"channelsLast"===o&&(d=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:p,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function Gl(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,h,p,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,h,p]=e}let c,[f,m,g,,y]=t,[b,x,v]=ql(n),[w,k,I]=ql(r),S=Kl(f,w),N=Kl(m,k),T=Kl(g,I),{padInfo:_,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,r,a,s,i,o,l,u,h){let p,d,c,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=function(e,t,n,r,a,s){null==a&&(a=Hl(e,t,r));let i=e[0],o=e[1],l=e[2],u=Xl((i-t+2*a)/r+1,s),h=Xl((o-t+2*a)/r+1,s),p=Xl((l-t+2*a)/r+1,s);return[u,h,p,n]}([t,n,r,1],o,1,a,e,h);d=s[0],c=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(d-1)*a+o-t,h=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(h/2),x=h-b,v=Math.floor(m/2);p={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),c=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:p,outDepth:d,outHeight:c,outWidth:f}}(a,u,h,p,b,x,v,S,N,T,o),A=s?y*d:y;return"channelsFirst"===i?c=[l,A,C,E,$]:"channelsLast"===i&&(c=[l,C,E,$,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:h,inWidth:p,inChannels:d,outDepth:C,outHeight:E,outWidth:$,outChannels:A,padInfo:_,strideDepth:b,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function Hl(e,t,n,r=1){let a=Kl(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function jl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ql(e){return"number"==typeof e?[e,e,e]:e}function Kl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Xl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Yl(e){let[t,n,r]=jl(e);return 1===t&&1===n&&1===r}function Zl(e,t){return Yl(e)||Yl(t)}function Jl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ql(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)re(he(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{re(he(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var eu=$s({reshape_:function(e,t){let n={x:_s(e,"x","reshape","string_or_numeric")},r={shape:t};return gs.runKernel(or,n,r)}});var tu=$s({avgPool_:function(e,t,n,r,a){let s=_s(e,"x","avgPool","float32");re(Zl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=eu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),re(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Ql("avgPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=gs.runKernel(pt,l,u);return h=_i(h,s.dtype),o?eu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var nu=$s({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=_s(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=eu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),re("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Ql("avgPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=gs.runKernel(ct,u,h);return p=_i(p,o.dtype),l?eu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var ru=$s({concat_:function(e,t=0){re(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Cs(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ci(n[0]);let r=n,a={axis:t};return gs.runKernel(Nt,r,a)}});var au=$s({sigmoid_:function(e){let t={x:_s(e,"x","sigmoid","float32")};return gs.runKernel(Ir,t)}});var su=$s({slice_:function(e,t,n){let r=_s(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return gs.runKernel(xr,a,s)}});var iu=$s({tanh_:function(e){let t={x:_s(e,"x","tanh","float32")};return gs.runKernel(Ur,t)}});var ou=$s({basicLSTMCell_:function(e,t,n,r,a,s){let i=_s(e,"forgetBias","basicLSTMCell"),o=_s(t,"lstmKernel","basicLSTMCell"),l=_s(n,"lstmBias","basicLSTMCell"),u=_s(r,"data","basicLSTMCell"),h=_s(a,"c","basicLSTMCell"),p=_s(s,"h","basicLSTMCell"),d=ru([u,p],1),c=Xi(d,o),f=Il(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=su(f,[0,0],y),x=su(f,[0,g],y),v=su(f,[0,2*g],y),w=su(f,[0,3*g],y),k=Il(Tl(au(b),iu(x)),Tl(h,au(Il(i,v))));return[k,Tl(iu(k),au(w))]}});var lu=$s({batchToSpaceND_:function(e,t,n){let r=_s(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));re(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),re(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),re(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return gs.runKernel(gt,s,i)}});function uu(e){let t;return t=0===e.rank||1===e.rank?eu(e,[1,1,1,e.size]):2===e.rank?eu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?eu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var hu=$s({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=_s(e,"x","batchNorm"),u=_s(t,"mean","batchNorm"),h=_s(n,"variance","batchNorm");null!=a&&(i=_s(a,"scale","batchNorm")),null!=r&&(o=_s(r,"offset","batchNorm")),re(u.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let p={x:uu(l),scale:i,offset:o,mean:u,variance:h},d={varianceEpsilon:s},c=gs.runKernel(on,p,d);return eu(c,l.shape)}});var pu=$s({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=_s(e,"x","batchNorm"),u=_s(t,"mean","batchNorm"),h=_s(n,"variance","batchNorm");return null!=a&&(i=_s(a,"scale","batchNorm")),null!=r&&(o=_s(r,"offset","batchNorm")),re(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),re(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),re(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=i&&re(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&re(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),hu(l,u,h,o,i,s)}});var du=$s({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=_s(e,"x","batchNorm"),u=_s(t,"mean","batchNorm"),h=_s(n,"variance","batchNorm");return null!=a&&(i=_s(a,"scale","batchNorm")),null!=r&&(o=_s(r,"offset","batchNorm")),re(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),re(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),re(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=i&&re(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&re(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),hu(l,u,h,o,i,s)}});var cu=$s({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=_s(e,"x","batchNorm"),u=_s(t,"mean","batchNorm"),h=_s(n,"variance","batchNorm");return null!=a&&(i=_s(a,"scale","batchNorm")),null!=r&&(o=_s(r,"offset","batchNorm")),re(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),re(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),re(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=i&&re(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&re(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),hu(l,u,h,o,i,s)}});var fu=$s({bincount_:function(e,t,n){let r=_s(e,"x","bincount"),a=_s(t,"weights","bincount");re("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return gs.runKernel(yt,s,i)}});var mu=$s({broadcastArgs_:function(e,t){let n=_s(e,"s0","broadcastArgs","int32"),r=_s(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return gs.runKernel(xt,a)}});var gu=$s({broadcastTo_:function(e,t){let n=_s(e,"broadcastTo","x"),r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=eu(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ci(n);let i={x:n},o={reps:s};return gs.runKernel(Gr,i,o)}});var yu=$s({ceil_:function(e){let t={x:_s(e,"x","ceil","float32")};return gs.runKernel(wt,t)}});var bu=$s({clipByValue_:function(e,t,n){let r=_s(e,"x","clipByValue");re(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));let a={x:r},s={clipValueMin:t,clipValueMax:n};return gs.runKernel(kt,a,s)}});var xu=$s({concat1d_:function(e){return ru(e,0)}});var vu=$s({concat2d_:function(e,t){return ru(e,t)}});var wu=$s({concat3d_:function(e,t){return ru(e,t)}});var ku=$s({concat4d_:function(e,t){return ru(e,t)}});var Iu=$s({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=_s(e,"x","conv2d","float32"),l=_s(t,"filter","conv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=eu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Ql("conv2d",r,i);let p="NHWC"===a?u.shape[3]:u.shape[1];re(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),re(Zl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=gs.runKernel(Tt,d,c);return h?eu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Su=$s({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=_s(e,"x","conv1d"),l=_s(t,"filter","conv1d"),u=o,h=!1;2===o.rank&&(h=!0,u=eu(o,[1,o.shape[0],o.shape[1]])),re(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),re(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Ql("conv1d",r,i),re(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),re(Zl(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),re("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let p=eu(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=eu(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=Iu(d,p,[1,n],r,"NHWC",[1,s],i);return eu(c,h?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}});var Nu=$s({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=eu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),re(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),re(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),re(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let h="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];re(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),re(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),Ql("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=gs.runKernel(Ct,d,c);return u?eu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Tu=$s({conv2dTranspose_:function(e,t,n,r,a,s){let i=_s(e,"x","conv2dTranspose"),o=_s(t,"filter","conv2dTranspose");return Nu(n,i,o,r,a,"NHWC",s)}});var _u=$s({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=_s(e,"x","conv3d"),o=_s(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=eu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),re(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),re(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),re(Zl(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),re("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));let h={x:l,filter:o},p={strides:n,pad:r,dataFormat:a,dilations:s},d=gs.runKernel(Et,h,p);return u?eu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Cu=$s({conv3DBackpropInput_:function(e,t,n,r,a){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=eu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];re(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),re(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),re(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),re(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),re(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let h={dy:i,filter:n},p={pad:a,strides:r,inputShape:s},d=gs.runKernel(At,h,p);return o?eu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Eu=$s({conv3dTranspose_:function(e,t,n,r,a){let s=_s(e,"x","conv3dTranspose"),i=_s(t,"filter","conv3dTranspose");return Cu(n,s,i,r,a)}});var $u=$s({cos_:function(e){let t={x:_s(e,"x","cos","float32")};return gs.runKernel(Ft,t)}});var Au=$s({cosh_:function(e){let t={x:_s(e,"x","cosh","float32")};return gs.runKernel(Rt,t)}});var Fu=$s({cumprod_:function(e,t=0,n=!1,r=!1){let a={x:_s(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return gs.runKernel(Dt,a,s)}});var Ru=$s({cumsum_:function(e,t=0,n=!1,r=!1){let a={x:_s(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return gs.runKernel(Mt,a,s)}});var Du=$s({denseBincount_:function(e,t,n,r=!1){let a=_s(e,"x","denseBincount"),s=_s(t,"weights","denseBincount");re("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),re(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return gs.runKernel(Lt,i,o)}});var Mu=$s({depthToSpace_:function(e,t,n="NHWC"){let r=_s(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];re(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),re(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),re(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),re(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return gs.runKernel(zt,o,l)}});var Ou=$s({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=_s(e,"x","depthwiseConv2d","float32"),l=_s(t,"filter","depthwiseConv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=eu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),re(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Ql("depthwiseConv2d",r,i);let p={x:u,filter:l},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},c=gs.runKernel(Pt,p,d);return h?eu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var Lu=$s({diag_:function(e){let t={x:_s(e,"x","diag")};return gs.runKernel(Vt,t)}});var zu=$s({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=_s(e,"x","dilation2d"),o=_s(t,"filter","dilation2d");re(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),re(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),re("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=eu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let h={x:l,filter:o},p={strides:n,pad:r,dilations:a},d=gs.runKernel(Ut,h,p);return u?eu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Pu=$s({equal_:function(e,t){let n=_s(e,"a","equal","string_or_numeric"),r=_s(t,"b","equal","string_or_numeric");[n,r]=os(n,r),no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(Zt,a)}});var Bu=$s({where_:function(e,t,n){let r=_s(t,"a","where"),a=_s(n,"b","where"),s=_s(e,"condition","where","bool"),i=no(no(s.shape,r.shape),a.shape),o={condition:gu(s,i),t:gu(r,i),e:gu(a,i)};return gs.runKernel(yr,o)}});var Wu=$s({zerosLike_:function(e){let t={x:_s(e,"x","zerosLike")};return gs.runKernel(Zr,t)}});var Vu=$s({divNoNan_:function(e,t){let n=_s(e,"a","div"),r=_s(t,"b","div");[n,r]=os(n,r);let a=Nl(n,r),s=Wu(a),i=Pu(r,s);return Bu(i,s,a)}});var Uu=$s({dot_:function(e,t){let n=_s(e,"t1","dot"),r=_s(t,"t2","dot");re(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(re(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=eu(n,[1,-1]),t=eu(r,[-1,1]),a=Xi(e,t);return eu(a,[])}if(1===n.rank&&2===r.rank){let e=eu(n,[1,-1]),t=eu(r,[r.shape[0],r.shape[1]]),a=Xi(e,t);return eu(a,[a.size])}if(2===n.rank&&1===r.rank){let e=eu(r,[-1,1]),t=Xi(n,e);return eu(t,[t.size])}{let e=eu(r,[r.shape[0],r.shape[1]]);return Xi(n,e)}}});var Gu=$s({einsum_:function(e,...t){let n=t.map(((e,t)=>_s(e,`tensors${t}`,"einsum"))),r={equation:e};return gs.runKernel(qt,n,r)}});var Hu=$s({elu_:function(e){let t={x:_s(e,"x","elu","float32")};return gs.runKernel(Kt,t)}});var ju=$s({erf_:function(e){let t=_s(e,"x","erf");re("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=_i(t,"float32"));let n={x:t};return gs.runKernel(Yt,n)}});var qu=$s({exp_:function(e){let t={x:_s(e,"x","exp")};return gs.runKernel(Jt,t)}});var Ku=$s({expandDims_:function(e,t=0){let n=_s(e,"x","expandDims","string_or_numeric");re(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return gs.runKernel(Qt,r,a)}});var Xu=$s({expm1_:function(e){let t={x:_s(e,"x","expm1")};return gs.runKernel(en,t)}});var Yu=$s({tile_:function(e,t){let n=_s(e,"x","tile","string_or_numeric");re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return gs.runKernel(Gr,r,a)}});var Zu=$s({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=Ti([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=eu(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Yu(Ku(i,0),[n[0],1,1]);if(2===n.length)return Yu(Ku(Ku(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Yu(Ku(Ku(Ku(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ju(e,t,n){let r={shape:e,value:t,dtype:n};return gs.runKernel(nn,{},r)}var Qu=$s({floor_:function(e){let t={x:_s(e,"x","floor","float32")};return gs.runKernel(an,t)}});var eh=$s({gather_:function(e,t,n=0,r=0){let a={x:_s(e,"x","gather"),indices:_s(t,"indices","gather","int32")},s={axis:n,batchDims:r};return gs.runKernel(ln,a,s)}});var th=$s({greater_:function(e,t){let n=_s(e,"a","greater","string_or_numeric"),r=_s(t,"b","greater","string_or_numeric");[n,r]=os(n,r),no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(hn,a)}});var nh=$s({greaterEqual_:function(e,t){let n=_s(e,"a","greaterEqual","string_or_numeric"),r=_s(t,"b","greaterEqual","string_or_numeric");[n,r]=os(n,r),no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(pn,a)}});var rh=$s({imag_:function(e){let t={input:_s(e,"input","imag")};return gs.runKernel(fn,t)}});var ah=$s({isFinite_:function(e){let t={x:_s(e,"x","isFinite")};return gs.runKernel(mn,t)}});var sh=$s({isInf_:function(e){let t={x:_s(e,"x","isInf")};return gs.runKernel(gn,t)}});var ih=$s({isNaN_:function(e){let t={x:_s(e,"x","isNaN")};return gs.runKernel(yn,t)}});var oh=$s({leakyRelu_:function(e,t=.2){let n={x:_s(e,"x","leakyRelu")},r={alpha:t};return gs.runKernel(bn,n,r)}});var lh=$s({less_:function(e,t){let n=_s(e,"a","less","string_or_numeric"),r=_s(t,"b","less","string_or_numeric");[n,r]=os(n,r),no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(xn,a)}});var uh=$s({lessEqual_:function(e,t){let n=_s(e,"a","lessEqual","string_or_numeric"),r=_s(t,"b","lessEqual","string_or_numeric");[n,r]=os(n,r),no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(vn,a)}});function hh(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return gs.runKernel(wn,{},r)}var ph=$s({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=_s(e,"x","localResponseNormalization");re(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),re(he(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=eu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},h=gs.runKernel(Cn,l,u);return o?eu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var dh=$s({log_:function(e){let t={x:_s(e,"x","log","float32")};return gs.runKernel(kn,t)}});var ch=$s({log1p_:function(e){let t={x:_s(e,"x","log1p")};return gs.runKernel(In,t)}});function fh(e){return re(Ae(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=_s(t,"x","tf.grad","string_or_numeric"),a=null!=n?_s(n,"dy","tf.grad"):null;return gs.tidy((()=>{let{value:t,grads:n}=gs.gradients((()=>e(r)),[r],a);return null!=a&&ae(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),vh(n),n[0]}))}}function mh(e){return re(Ae(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{re(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=Cs(t,"args","tf.grads","string_or_numeric"),a=null!=n?_s(n,"dy","tf.grads"):null;return gs.tidy((()=>{let{value:t,grads:n}=gs.gradients((()=>e(...r)),r,a);return null!=a&&ae(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vh(n),n}))}}function gh(e){return re(Ae(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{re(t instanceof Xa,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),re(null==n||n instanceof Xa,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=gs.gradients((()=>e(t)),[t],n);return vh(r),{grad:r[0],value:a}}}function yh(e){return re(Ae(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{re(Array.isArray(t)&&t.every((e=>e instanceof Xa)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),re(null==n||n instanceof Xa,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=gs.gradients((()=>e(...t)),t,n);return null!=n&&ae(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vh(r.grads),r}}function bh(e,t){re(Ae(e),(()=>"The f passed in variableGrads(f) must be a function")),re(null==t||Array.isArray(t)&&t.every((e=>e instanceof Za)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in gs.registeredVariables)t.push(gs.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;re((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=gs.gradients(e,t,null,!0);re(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),re(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function xh(e){return gs.customGrad(e)}function vh(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var wh=$s({neg_:function(e){let t={x:_s(e,"x","neg")};return gs.runKernel(Gn,t)}});var kh=$s({softplus_:function(e){let t={x:_s(e,"x","softplus")};return gs.runKernel(Sr,t)}});var Ih=$s({logSigmoid_:function(e){let t=_s(e,"x","logSigmoid");return xh((e=>({value:wh(kh(wh(e))),gradFunc:t=>Tl(t,au(wh(e)))})))(t)}});var Sh=$s({max_:function(e,t=null,n=!1){let r={x:_s(e,"x","max")},a={reductionIndices:t,keepDims:n};return gs.runKernel($n,r,a)}});var Nh=$s({sub_:function(e,t){let n=_s(e,"a","sub"),r=_s(t,"b","sub");[n,r]=os(n,r);let a={a:n,b:r};return gs.runKernel(Wr,a)}});var Th=$s({sum_:function(e,t=null,n=!1){let r=_s(e,"x","sum");"bool"===r.dtype&&(r=_i(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return gs.runKernel(Tr,a,s)}});var _h=$s({logSoftmax_:function(e,t=-1){let n=_s(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return xh(((e,n)=>{let r=Sh(e,t,!0),a=Nh(e,r),s=Nh(_i(a,"float32"),dh(Th(qu(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=qu(r);return Nh(e,Tl(Th(e,t,!0),a))}}}))(n)}});function Ch(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Eh(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function $h(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Ah(e,t){return Eh(e,t.map((e=>1)),t)}function Fh(e,t,n){re(Ch(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Rh(e,t){if(Ch(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Dh(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Mh(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Oh=$s({logSumExp_:function(e,t=null,n=!1){let r=_s(e,"x","logSumExp"),a=ye(t,r.shape),s=Sh(r,a,!0),i=Nh(r,s),o=qu(i),l=Th(o,a),u=dh(l),h=Il(eu(s,u.shape),u);if(n){let e=Ah(h.shape,a);return eu(h,e)}return h}});var Lh=$s({logicalAnd_:function(e,t){let n=_s(e,"a","logicalAnd","bool"),r=_s(t,"b","logicalAnd","bool");no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(Sn,a)}});var zh=$s({logicalNot_:function(e){let t={x:_s(e,"x","logicalNot","bool")};return gs.runKernel(Nn,t)}});var Ph=$s({logicalOr_:function(e,t){let n=_s(e,"a","logicalOr","bool"),r=_s(t,"b","logicalOr","bool");no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(Tn,a)}});var Bh=$s({logicalXor_:function(e,t){let n=_s(e,"a","logicalXor","bool"),r=_s(t,"b","logicalXor","bool");return no(n.shape,r.shape),Lh(Ph(e,t),zh(Lh(e,t)))}});var Wh=$s({maxPool_:function(e,t,n,r,a){let s=_s(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=eu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),re(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),re(Zl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Ql("maxPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=gs.runKernel(Fn,l,u);return o?eu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var Vh=$s({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=_s(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=eu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),re("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Ql("maxPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=gs.runKernel(Dn,u,h);return l?eu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Uh=$s({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s={x:_s(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=gs.runKernel(On,s,i);return{result:o[0],indexes:o[1]}}});var Gh=$s({maximum_:function(e,t){let n=_s(e,"a","maximum"),r=_s(t,"b","maximum");[n,r]=os(n,r),"bool"===n.dtype&&(n=_i(n,"int32"),r=_i(r,"int32")),no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(An,a)}});var Hh=$s({mean_:function(e,t=null,n=!1){let r={x:_s(e,"x","mean")},a={axis:t,keepDims:n};return gs.runKernel(Ln,r,a)}});function jh(e,t="float32"){if("complex64"===t){let t=jh(e,"float32"),n=jh(e,"float32");return As(t,n)}let n=Le(oe(e),t);return gs.makeTensor(n,e,t)}function qh(e,t="float32"){if("complex64"===t){let t=qh(e,"float32"),n=jh(e,"float32");return As(t,n)}let n=Oe(oe(e),t);return gs.makeTensor(n,e,t)}function Kh(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=_s(e,"x","meshgrid",e instanceof Xa?e.dtype:"float32");if(void 0===t)return[r];let a=_s(t,"y","meshgrid",t instanceof Xa?t.dtype:"float32"),s=oe(r.shape),i=oe(a.shape);return"xy"===n?(r=eu(r,[1,-1]),a=eu(a,[-1,1]),[Xi(qh([i,1],r.dtype),r),Xi(a,qh([1,s],a.dtype))]):(r=eu(r,[-1,1]),a=eu(a,[1,-1]),[Xi(r,qh([1,i],r.dtype)),Xi(qh([s,1],a.dtype),a)])}var Xh=$s({min_:function(e,t=null,n=!1){let r={x:_s(e,"x","min")},a={axis:t,keepDims:n};return gs.runKernel(zn,r,a)}});var Yh=$s({minimum_:function(e,t){let n=_s(e,"a","minimum"),r=_s(t,"b","minimum");[n,r]=os(n,r),"bool"===n.dtype&&(n=_i(n,"int32"),r=_i(r,"int32")),no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(Pn,a)}});var Zh=$s({mirrorPad_:function(e,t,n){re("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=_s(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");re(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)re(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),re(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return gs.runKernel(Bn,i,s)}});var Jh=$s({mod_:function(e,t){let n=_s(e,"a","mod"),r=_s(t,"b","mod");[n,r]=os(n,r);let a={a:n,b:r};return gs.runKernel(Wn,a)}});var Qh=$s({square_:function(e){let t=_s(e,"x","square");return gs.runKernel("Square",{x:t},{})}});var ep=$s({moments_:function(e,t=null,n=!1){let r=ye(t,(e=_s(e,"x","moments")).shape),a=Hh(e,r,n),s=a.shape;n||(s=Ah(a.shape,r));let i=Qh(Nh(_i(e,"float32"),eu(a,s)));return{mean:a,variance:Hh(i,r,n)}}});var tp=$s({multiRNNCell_:function(e,t,n,r){let a=_s(t,"data","multiRNNCell"),s=Cs(n,"c","multiRNNCell"),i=Cs(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],h=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),h.push(l[e+1]);return[u,h]}});var np=$s({multinomial_:function(e,t,n,r=!1){let a=_s(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?eu(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=gs.runKernel(Vn,o,l);return 1===i?eu(u,[u.size]):u}});var rp=$s({notEqual_:function(e,t){let n=_s(e,"a","notEqual","string_or_numeric"),r=_s(t,"b","notEqual","string_or_numeric");[n,r]=os(n,r),no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(Hn,a)}});var ap=$s({onesLike_:function(e){let t={x:_s(e,"x","onesLike")};return gs.runKernel(Xn,t)}});var sp=$s({outerProduct_:function(e,t){let n=_s(e,"v1","outerProduct"),r=_s(t,"v2","outerProduct");re(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=eu(n,[-1,1]),s=eu(r,[1,-1]);return Xi(a,s)}});var ip=$s({pad_:function(e,t,n=0){let r=_s(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return gs.runKernel(Jn,s,a)}});var op=$s({pad1d_:function(e,t,n=0){return re(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),ip(e,[t],n)}});var lp=$s({pad2d_:function(e,t,n=0){return re(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ip(e,t,n)}});var up=$s({pad3d_:function(e,t,n=0){return re(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ip(e,t,n)}});var hp=$s({pad4d_:function(e,t,n=0){return re(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ip(e,t,n)}});var pp=$s({spaceToBatchND_:function(e,t,n){let r=_s(e,"x","spaceToBatchND");re(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),re(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),re(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return gs.runKernel(_r,a,s)}});var dp=$s({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=_s(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=eu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(Zl(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let h,p=Wl(l.shape,t,s,a,r),d=[p.dilationHeight,p.dilationWidth];h="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([p.filterHeight,p.filterWidth],d):[[0,0],[0,0]];let c=1===d[0]&&1===d[1],[f,m]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([p.inHeight,p.inWidth],d,h),g=c?r:"valid",y=c?l:pp(l,d,f),b=("avg"===n?()=>tu(y,t,s,g,i):()=>Wh(y,t,s,g,i))(),x=c?b:lu(b,d,m);return u?eu(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var cp=$s({pow_:function(e,t){let n=_s(e,"base","pow"),r=_s(t,"exp","pow");[n,r]=os(n,r);let a={a:n,b:r};return gs.runKernel(er,a)}});var fp=$s({prelu_:function(e,t){let n={x:_s(e,"x","prelu"),alpha:_s(t,"alpha","prelu")};return gs.runKernel(tr,n)}});var mp=$s({prod_:function(e,t=null,n=!1){let r=_s(e,"x","prod");"bool"===r.dtype&&(r=_i(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return gs.runKernel(nr,a,s)}});var gp=$s({rand_:function(e,t,n){let r=oe(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return gs.makeTensor(a,e,n)}}),yp=y(E()),bp=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=yp.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},xp=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=yp.alea(a.toString()),this.randn=new bp(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},vp=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=yp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};var wp=$s({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new xp(t,n,r,a),i=Ti(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var kp=$s({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new bp(t,n,r,!1,a),i=Ti(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Ip=$s({randomUniform_:function(e,t=0,n=1,r="float32",a){let s=Ti(e,r),i=new vp(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function Sp(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return gs.runKernel(rr,{},a)}var Np=$s({real_:function(e){let t={input:_s(e,"input","real")};return gs.runKernel(ar,t)}});var Tp=$s({reciprocal_:function(e){let t={x:_s(e,"x","reciprocal")};return gs.runKernel(sr,t)}});var _p=$s({relu_:function(e){let t={x:_s(e,"x","relu")};return gs.runKernel(ir,t)}});var Cp=$s({relu6_:function(e){let t={x:_s(e,"x","relu6")};return gs.runKernel(dr,t)}});var Ep=$s({reverse_:function(e,t){let n={x:_s(e,"x","reverse")},r={dims:t};return gs.runKernel(cr,n,r)}});var $p=$s({reverse1d_:function(e){let t=_s(e,"x","reverse");return re(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Ep(t,0)}});var Ap=$s({reverse2d_:function(e,t){let n=_s(e,"x","reverse");return re(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Ep(n,t)}});var Fp=$s({reverse3d_:function(e,t){let n=_s(e,"x","reverse");return re(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Ep(n,t)}});var Rp=$s({reverse4d_:function(e,t){let n=_s(e,"x","reverse");return re(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Ep(n,t)}});var Dp=$s({round_:function(e){let t={x:_s(e,"x","round")};return gs.runKernel(fr,t)}});var Mp=$s({rsqrt_:function(e){let t={x:_s(e,"x","rsqrt","float32")};return gs.runKernel(mr,t)}});function Op(e,t){if((Se(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Se(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Fs(e,[],[],t)}var Lp=$s({selu_:function(e){let t={x:_s(e,"x","selu")};return gs.runKernel(br,t)}});var zp=$s({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=_s(e,"x","separableConv2d"),l=_s(t,"depthwiseFilter","separableConv2d"),u=_s(n,"pointwiseFilter","separableConv2d"),h=o,p=!1;if(3===o.rank&&(p=!0,h=eu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");re(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),re(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),re(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),re(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let d=l.shape[2],c=l.shape[3];re(u.shape[2]===d*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`));let f=Ou(h,l,r,a,i,s),m=Iu(f,u,1,"valid",i);return p?eu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var Pp=async function(e,t){let n=_s(e,"x","setdiff1d"),r=_s(t,"y","setdiff1d");re(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),re(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),re(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new ja([o],n.dtype),u=new ja([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};var Bp=$s({sign_:function(e){let t={x:_s(e,"x","sign")};return gs.runKernel(kr,t)}});var Wp=$s({sin_:function(e){let t={x:_s(e,"x","sin","float32")};return gs.runKernel(vr,t)}});var Vp=$s({sinh_:function(e){let t={x:_s(e,"x","sinh")};return gs.runKernel(wr,t)}});var Up=$s({slice1d_:function(e,t,n){let r=_s(e,"x","slice1d");return re(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),su(r,[t],[n])}});var Gp=$s({slice2d_:function(e,t,n){let r=_s(e,"x","slice2d");return re(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),su(r,t,n)}});var Hp=$s({slice3d_:function(e,t,n){let r=_s(e,"x","slice3d");return re(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),su(r,t,n)}});var jp=$s({slice4d_:function(e,t,n){let r=_s(e,"x","slice4d");return re(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),su(r,t,n)}});var qp=$s({softmax_:function(e,t=-1){let n=_s(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return gs.runKernel(Er,r,a)}});var Kp=$s({fft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return gs.runKernel(tn,t)}});var Xp=$s({ifft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return gs.runKernel(cn,t)}});var Yp=$s({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=eu(e,[r,n]);t=Xp(a)}else{let a=[r,2*(n-1)],s=eu(Np(e),[r,n]),i=eu(rh(e),[r,n]),o=Ep(su(s,[0,1],[r,n-2]),1),l=Tl(Ep(su(i,[0,1],[r,n-2]),1),Op(-1)),u=ru([s,o],1),h=ru([i,l],1),p=eu(As(u,h),[a[0],a[1]]);t=Xp(p)}if(t=Np(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=eu(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}});var Zp=$s({split_:function(e,t,n=0){let r={x:_s(e,"x","split")},a={numOrSizeSplits:t,axis:n};return gs.runKernel(Cr,r,a)}});var Jp=$s({rfft_:function(e,t){re("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=su(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=ru([e,jh(a)],e.shape.length-1),r=t}else n=e;let s=Wu(n),i=eu(As(n,s),[a,r]),o=Kp(i),l=Math.floor(r/2)+1,u=Np(o),h=rh(o),p=Zp(u,[l,r-l],u.shape.length-1),d=Zp(h,[l,r-l],h.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,eu(As(p[0],d[0]),c)}});var Qp=$s({sqrt_:function(e){let t={x:_s(e,"x","sqrt","float32")};return gs.runKernel(Nr,t)}});var ed=$s({squaredDifference_:function(e,t){let n=_s(e,"a","squaredDifference"),r=_s(t,"b","squaredDifference");[n,r]=os(n,r),no(n.shape,r.shape);let a={a:n,b:r};return gs.runKernel(Mr,a,{})}});var td=$s({squeeze_:function(e,t){let n=_s(e,"x","squeeze");return eu(n,be(n.shape,t).newShape)}});var nd=$s({stack_:function(e,t=0){let n=Cs(e,"tensors","stack","string_or_numeric");re(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&re(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return gs.runKernel(Zn,r,a)}});var rd=$s({step_:function(e,t=0){let n={x:_s(e,"x","step")},r={alpha:t};return gs.runKernel(Jr,n,r)}});var ad=$s({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:_s(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return gs.runKernel(Lr,u,h)}});var sd=$s({tan_:function(e){let t={x:_s(e,"x","tan","float32")};return gs.runKernel(Vr,t)}});function id(e,t){se(e);let n=Ss(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Fs(e,null,n,t)}function od(e,t,n){if(se(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=Ss(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Fs(e,t,r,n)}function ld(e,t,n){if(se(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=Ss(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Fs(e,t,r,n)}function ud(e,t,n){if(se(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=Ss(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Fs(e,t,r,n)}function hd(e,t,n){if(se(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=Ss(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Fs(e,t=t||r,r,n)}var pd=$s({topk_:function(e,t=1,n=!0){let r=_s(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=gs.runKernel(Hr,s,i);return{values:o,indices:l}}});var dd=$s({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new bp(t,n,r,!0,a),i=Ti(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var cd=$s({unique_:function(e,t=0){let n=_s(e,"x","unique","string_or_numeric");re(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=gs.runKernel(Kr,r,a);return{values:s,indices:i}}});var fd=$s({unsortedSegmentSum_:function(e,t,n){let r=_s(e,"x","unsortedSegmentSum"),a=_s(t,"segmentIds","unsortedSegmentSum","int32");re(he(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return gs.runKernel(Yr,s,i)}});var md=$s({unstack_:function(e,t=0){let n=_s(e,"x","unstack","string_or_numeric");re(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return gs.runKernel(Xr,r,a)}});function gd(e,t=!0,n,r){return gs.makeVariable(e,t,n,r)}function yd(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=Ti(e,"int32"),a=Ti([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var bd=async function(e){let t=_s(e,"condition","whereAsync","bool"),n=await t.data(),r=yd(t.shape,n);return e!==t&&t.dispose(),r};var xd=async function(e,t,n){let r=_s(e,"tensor","boolMask"),a=_s(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;re(i>0,(()=>"mask cannot be scalar")),ae(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),h=eu(r,u),p=eu(a,[-1]),d=await bd(p),c=td(d,[1]),f=eh(h,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),h.dispose(),p.dispose(),d.dispose(),f};function vd(e,t,n=null){if(0===e.rank)return _l(e);if(1!==e.rank&&null===n)return vd(eu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Th(_l(e),n);if(t===1/0)return Sh(_l(e),n);if(t===-1/0)return Xh(_l(e),n);if("euclidean"===t||2===t)return Qp(Th(cp(_l(e),Op(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Sh(Th(_l(e),n[0]),n[1]-1);if(t===1/0)return Sh(Th(_l(e),n[1]),n[0]);if(t===-1/0)return Xh(Th(_l(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Qp(Th(Qh(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var wd=$s({norm_:function(e,t="euclidean",n=null,r=!1){let a=vd(e=_s(e,"x","norm"),t,n),s=a.shape;if(r){let t=ye(n,e.shape);s=Ah(a.shape,t)}return eu(a,s)}});var kd=$s({movingAverage_:function(e,t,n,r,a=!0){let s=_s(e,"v","movingAverage"),i=_s(t,"x","movingAverage"),o=_s(n,"decay","movingAverage");ls(s,i),re(ue(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=Op(1),u=Nh(l,o),h=Tl(Nh(i,s),u);if(a){re(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=_s(r,"step","movingAverage");h=Nl(h,Nh(l,cp(o,e)))}return Il(s,h)}});var Id=$s({scatterND_:function(e,t,n){let r=_s(e,"indices","scatterND","int32"),a=_s(t,"updates","scatterND");go(a,r,n);let s={indices:r,updates:a},i={shape:n};return gs.runKernel(gr,s,i)}});var Sd=$s({sparseToDense_:function(e,t,n,r=0){let a=_s(e,"sparseIndices","sparseToDense","int32"),s=_s(t,"sparseValues","sparseToDense"),i=_s(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return gs.runKernel(Dr,o,l)}});var Nd=$s({gatherND_:function(e,t){let n=_s(t,"indices","gatherND","int32"),r={params:_s(e,"x","gatherND","string_or_numeric"),indices:n};return gs.runKernel(un,r)}});var Td=$s({dropout_:function(e,t,n,r){let a=_s(e,"x","dropout");if(re("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),re(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Xa?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(ue(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=Nl(Qu(Il(Ip(s,0,1,"float32",r),i)),i);return Tl(a,o)}});function _d(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Cd(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return id(a,"float32")}var Ed=async function(e,t,n=1){let r=_s(e,"predictions","inTopK"),a=_s(t,"targets","inTopK");re(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),re(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),ae(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];re(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],h=xe("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),h[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){h[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Rs(h,a.shape,"bool")},$d={};g($d,{conv2d:()=>Od,depthwiseConv2d:()=>Pd,matMul:()=>Bd});var Ad=$s({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=eu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=eu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),re(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),re(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),re(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],h="NHWC"===s?l.shape[3]:l.shape[1];re(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),re(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),Ql("conv2dDerFilter",a,i);let p={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return gs.runKernel(_t,p,d)}});function Fd(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Tl(e,rd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Rd(e,t){let n=t,r=to(e.shape,t.shape);return r.length>0&&(n=Th(n,r)),eu(n,e.shape)}function Dd(e,t,n,r){if("linear"===t)return e;if("relu"===t)return _p(e);if("elu"===t)return Hu(e);if("relu6"===t)return Cp(e);if("prelu"===t)return fp(e,n);if("leakyrelu"===t)return oh(e,r);if("sigmoid"===t)return au(e);throw new Error(`Unknown fused activation ${t}.`)}var Md=(e,t)=>!(e>0)||"linear"===t;var Od=$s({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===Md(gs.state.gradientDepth,l)){let p=Iu(e,t,n,r,a,s,i);return null!=o&&(p=Il(p,o)),Dd(p,l,u,h)}let p=_s(e,"x","conv2d","float32"),d=_s(t,"filter","conv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=eu(p,[1,p.shape[0],p.shape[1],p.shape[2]])),re(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),re(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Ql("fused conv2d",r,i),re(c.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${c.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),re(Zl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),re("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));let m,g,y=Ul(c.shape,d.shape,n,s,r,i);null!=o&&(m=_s(o,"bias","fused conv2d"),[m]=os(m,p),no(y.outShape,m.shape)),null!=u&&(g=_s(u,"prelu weights","fused conv2d"));let b=(e,t)=>{let[a,i,o,u]=t,h=Fd(e,o,l);re(Yl(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let p=[Nu(i.shape,h,a,n,r),Ad(i,h,a.shape,n,r)];if(null!=u){let e=Rd(u,h);p.push(e)}return p},x={x:c,filter:d,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?xh(((e,t,n)=>{let r=gs.runKernel(na,x,v);return n([t,e,r]),f&&(r=eu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):xh(((e,t,n,r)=>{let a=gs.runKernel(na,x,v);return r([t,e,a,n]),f&&(a=eu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}});var Ld=$s({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=eu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=eu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return gs.runKernel(Bt,u,h)}});var zd=$s({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=eu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},p=gs.runKernel(Wt,u,h);return l?eu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Pd=$s({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===Md(gs.state.gradientDepth,l)){let p=Ou(e,t,n,r,a,s,i);return null!=o&&(p=Il(p,o)),Dd(p,l,u,h)}let p=_s(e,"x","depthwiseConv2d","float32"),d=_s(t,"filter","depthwiseConv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=eu(p,[1,p.shape[0],p.shape[1],p.shape[2]])),re(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),re(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),re(c.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),re(Zl(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Ql("fused depthwiseConv2d",r,i);let m,g,y=Ul(c.shape,d.shape,n,s,r,i,!0);null!=o&&(m=_s(o,"bias","fused conv2d"),[m]=os(m,p),no(y.outShape,m.shape)),null!=u&&(g=_s(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{re(Yl(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[a,o,u,h]=t,p=Fd(e,u,l),d=zd(o.shape,p,a,n,r,s,i),c=Ld(o,p,a.shape,n,r,s,i);if(null!=h){return[d,c,Rd(m,p)]}return[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?xh(((e,t,n)=>{let r=gs.runKernel(ra,x,v);return n([t,e,r]),f&&(r=eu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):xh(((e,t,n,r)=>{let a=gs.runKernel(ra,x,v);return r([t,e,a,n]),f&&(a=eu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}});var Bd=$s({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Md(gs.state.gradientDepth,s)){let l=Xi(e,t,n,r);return null!=a&&(l=Il(l,a)),Dd(l,s,i,o)}let l=_s(e,"a","fused matMul"),u=_s(t,"b","fused matMul");[l,u]=os(l,u);let h=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=oe(f),y=oe(m);re(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));let b,x,v=no(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),w=eu(l,n?[g,h,d]:[g,d,h]),k=eu(u,r?[y,c,p]:[y,p,c]);null!=a&&(b=_s(a,"bias","fused matMul"),[b]=os(b,l),no(v,b.shape)),null!=i&&(x=_s(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,h,p]=t,d=Fd(eu(e,h.shape),h,s);if(n||r?!n&&r?(i=Xi(d,u,!1,!1),o=Xi(d,l,!0,!1)):n&&!r?(i=Xi(u,d,!1,!0),o=Xi(l,d,!1,!1)):(i=Xi(u,d,!0,!0),o=Xi(d,l,!0,!0)):(i=Xi(d,u,!1,!0),o=Xi(l,d,!0,!1)),null!=a){return[i,o,Rd(p,d)]}return[i,o]},S={a:w,b:k,bias:b,preluActivationWeights:x},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?xh(((e,t,n)=>{let r=gs.runKernel(ta,S,N);return n([e,t,r]),{value:eu(r,v),gradFunc:I}}))(w,k):xh(((e,t,n,r)=>{let a=gs.runKernel(ta,S,N);return r([e,t,a,n]),{value:eu(a,v),gradFunc:I}}))(w,k,b)}});var Wd=$s({hammingWindow_:function(e){return Cd(e,.54,.46)}});var Vd=$s({hannWindow_:function(e){return Cd(e,.5,.5)}});var Ud=$s({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(su(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=ru([su(e,s,t-r),Ju([r],a)]);i.push(o),s+=n}return 0===i.length?od([],[0,t]):eu(ru(i),[i.length,t])}});var Gd=$s({stft_:function(e,t,n,r,a=Vd){null==r&&(r=_d(t));let s=Ud(e,t,n),i=Tl(s,a(t));return Jp(i,r)}});var Hd=$s({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=_s(e,"image","cropAndResize"),o=_s(t,"boxes","cropAndResize","float32"),l=_s(n,"boxInd","cropAndResize","int32"),u=o.shape[0];re(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),re(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),re(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),re(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),re(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),re("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let h={image:i,boxes:o,boxInd:l},p={method:a,extrapolationValue:s,cropSize:r};return gs.runKernel(Ot,h,p)}});var jd=$s({flipLeftRight_:function(e){let t=_s(e,"image","flipLeftRight","float32");re(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return gs.runKernel(rn,n,{})}});var qd=$s({grayscaleToRGB_:function(e){let t=_s(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];re(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),re(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Yu(t,a)}});var Kd=$s({rotateWithOffset_:function(e,t,n=0,r=.5){let a=_s(e,"image","rotateWithOffset","float32");re(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return gs.runKernel(ea,s,i)}});function Xd(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),re(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),re(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),re(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),re(1===t.rank,(()=>"scores must be a 1D tensor")),re(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),re(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Yd=$s({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_s(e,"boxes","nonMaxSuppression","float32"),i=_s(t,"scores","nonMaxSuppression","float32"),o=Xd(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return gs.runKernel(jn,{boxes:s,scores:i},l)}});function Zd(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Jd)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Jd(e,t){return e>t?1:e<t?-1:0}function Qd(e,t,n,r,a){return nc(e,t,n,r,a,0)}function ec(e,t,n,r,a,s){return nc(e,t,n,r,a,0,!1,s,!0)}function tc(e,t,n,r,a,s){return nc(e,t,n,r,a,s,!0)}function nc(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(sc);let h=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=p.length-1;n>=i;--n){let i=rc(e,s,p[n]);if(i>=r){o=!0;break}if(t.score=t.score*ac(r,h,i),t.score<=a)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),d.push(t.score)):t.score>a&&Zd(u,t,sc))}let c=p.length,f=n-c;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function rc(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),h=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(p-u)*(d-h);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,h),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function ac(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function sc(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var ic=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_s(e,"boxes","nonMaxSuppressionAsync"),i=_s(t,"scores","nonMaxSuppressionAsync"),o=Xd(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:p}=Qd(u,h,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),id(p,"int32")};var oc=$s({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_s(e,"boxes","nonMaxSuppression"),o=_s(t,"scores","nonMaxSuppression"),l=Xd(i,o,n,r,a,s),u={boxes:i,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},p=gs.runKernel(Kn,u,h);return{selectedIndices:p[0],selectedScores:p[1]}}});var lc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_s(e,"boxes","nonMaxSuppressionAsync"),o=_s(t,"scores","nonMaxSuppressionAsync"),l=Xd(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),h=u[0],p=u[1],{selectedIndices:d,selectedScores:c}=tc(h,p,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:id(d,"int32"),selectedScores:id(c)}};var uc=$s({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_s(e,"boxes","nonMaxSuppression"),o=_s(t,"scores","nonMaxSuppression"),l=Xd(i,o,n,r,a,null),u={boxes:i,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},p=gs.runKernel(qn,u,h);return{selectedIndices:p[0],validOutputs:p[1]}}});var hc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_s(e,"boxes","nonMaxSuppressionAsync"),o=_s(t,"scores","nonMaxSuppressionAsync"),l=Xd(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=ec(d,c,u,h,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:id(f,"int32"),validOutputs:Op(m,"int32")}};var pc=$s({resizeBilinear_:function(e,t,n=!1,r=!1){let a=_s(e,"images","resizeBilinear");re(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),re(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),re(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=eu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=gs.runKernel(hr,o,l);return i?eu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var dc=$s({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=_s(e,"images","resizeNearestNeighbor");re(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),re(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),re("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),re(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=eu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=gs.runKernel(lr,o,l);return i?eu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var cc=$s({threshold_:function(e,t="binary",n=!1,r=.5){let a,s,i,o,l=_s(e,"image","threshold"),u=l.shape[0]*l.shape[1],h=Tl(id([r]),255);if(re(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),re(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),re("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),re("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[a,s,i]=Zp(l,[1,1,1],-1);let e=Tl(a,.2989),t=Tl(s,.587),n=Tl(i,.114);o=Il(Il(e,t),n)}else o=e;if("otsu"===t){h=function(e,t){let n,r,a,s,i,o,l=id([-1]),u=id([0]),h=id([0]);for(let p=0;p<e.size-1;p++){n=su(e,0,p+1),r=su(e,p+1),i=Nl(Th(n),t),o=Nl(Th(r),t);let d=Th(Tl(n,Sp(0,n.size)));a=Nl(d,Th(n));let c=Ju(r.shape,n.size),f=Il(Sp(0,r.size),c),m=Tl(r,f);s=Nl(Th(m),Th(r));let g=Nh(a,s),y=Nh(a,s),b=Tl(i,o);h=Tl(Tl(b,g),y);let x=th(h,u);u=Bu(x,h,u),l=Bu(x,id([p]),l)}return l}(fu(_i(Dp(o),"int32"),Rs([]),256),u)}let p=n?uh(o,h):th(o,h);return _i(Tl(p,255),"int32")}});var fc=$s({transform_:function(e,t,n="nearest",r="constant",a=0,s){let i=_s(e,"image","transform","float32"),o=_s(t,"transforms","transform","float32");re(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),re(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),re(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return gs.runKernel(jr,l,u)}});var mc=$s({bandPart_:function(e,t,n){re(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),re(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=_s(e,"a","bandPart");re(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=eu(Sp(0,s,1,"int32"),[-1,1]),l=Sp(0,i,1,"int32"),u=Nh(o,l),h=Lh(uh(u,Op(+t,"int32")),nh(u,Op(-n,"int32"))),p=jh([s,i],r.dtype);return eu(nd(md(eu(r,[-1,s,i])).map((e=>Bu(h,e,p)))),a)}});var gc=$s({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,re(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)re(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Zp(e,e.shape[0],0).map((e=>td(e,[0])));re(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(gs.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=Tl(Th(Tl(n[r],e)),n[r]);e=Nh(e,t)}return Nl(e,wd(e,"euclidean"))})));return t?nd(n,0):n}});function yc(e,t=!1){return gs.tidy((()=>{re(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=Zu(n),s=Ci(e),i=od([[1]],[1,1]),o=Ci(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=gs.tidy((()=>{let t=su(s,[e,e],[n-e,1]),l=wd(t),u=su(s,[e,e],[1,1]),h=Bu(th(u,0),od([[-1]]),od([[1]])),p=Nh(u,Tl(h,l)),d=Nl(t,p);o=1===d.shape[0]?Ci(i):ru([i,su(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=wh(Nl(Xi(h,p),l)),f=su(s,[e,0],[n-e,r]),m=Tl(c,o),g=Zi(o);if(0===e)s=Nh(f,Xi(m,Xi(g,f)));else{let t=Nh(f,Xi(m,Xi(g,f)));s=ru([su(s,[0,0],[e,r]),t],0)}let y=Zi(m),b=su(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Nh(b,Xi(Xi(b,o),y));else{let t=Nh(b,Xi(Xi(b,o),y));a=ru([su(a,[0,0],[n,e]),t],1)}return[o,s,a]})),pl([t,l,u])}return!t&&n>r&&(a=su(a,[0,0],[n,r]),s=su(s,[0,0],[r,r])),[a,s]}))}var bc,xc=$s({qr_:function(e,t=!1){if(re(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return yc(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=md(eu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=yc(e,t);a.push(n),s.push(r)})),[eu(nd(a,0),e.shape),eu(nd(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(bc||(bc={}));var vc=$s({computeWeightedLoss_:function(e,t,n=bc.SUM_BY_NONZERO_WEIGHTS){let r=_s(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=_s(t,"weights","computeWeightedLoss"));let s=null==a?r:Tl(r,a);if(n===bc.NONE)return s;if(n===bc.SUM)return Th(s);if(n===bc.MEAN){if(null==a)return Hh(s);{let e=r.size/a.size,t=Nl(Th(s),Th(a));return e>1?Nl(t,Op(e)):t}}if(n===bc.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Nl(Th(s),Op(r.size));{let e=Tl(a,qh(r.shape)),t=_i(Th(rp(e,Op(0))),"float32");return Nl(Th(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var wc=$s({absoluteDifference_:function(e,t,n,r=bc.SUM_BY_NONZERO_WEIGHTS){let a=_s(e,"labels","absoluteDifference"),s=_s(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=_s(n,"weights","absoluteDifference")),ae(a.shape,s.shape,"Error in absoluteDifference: ");let o=_l(Nh(a,s));return vc(o,i,r)}});var kc=$s({cosineDistance_:function(e,t,n,r,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=_s(e,"labels","cosineDistance"),i=_s(t,"predictions","cosineDistance"),o=null;null!=r&&(o=_s(r,"weights","cosineDistance")),ae(s.shape,i.shape,"Error in cosineDistance: ");let l=Op(1),u=Nh(l,Th(Tl(s,i),n,!0));return vc(u,o,a)}});var Ic=$s({hingeLoss_:function(e,t,n,r=bc.SUM_BY_NONZERO_WEIGHTS){let a=_s(e,"labels","hingeLoss"),s=_s(t,"predictions","hingeLoss"),i=null;null!=n&&(i=_s(n,"weights","hingeLoss")),ae(a.shape,s.shape,"Error in hingeLoss: ");let o=Op(1);a=Nh(Tl(Op(2),a),o);let l=_p(Nh(o,Tl(a,s)));return vc(l,i,r)}});var Sc=$s({huberLoss_:function(e,t,n,r=1,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=_s(e,"labels","huberLoss"),i=_s(t,"predictions","huberLoss"),o=null;null!=n&&(o=_s(n,"weights","huberLoss")),ae(s.shape,i.shape,"Error in huberLoss: ");let l=Op(r),u=_l(Nh(i,s)),h=Yh(u,l),p=Nh(u,h),d=Il(Tl(Op(.5),Qh(h)),Tl(l,p));return vc(d,o,a)}});var Nc=$s({logLoss_:function(e,t,n,r=1e-7,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=_s(e,"labels","logLoss"),i=_s(t,"predictions","logLoss"),o=null;null!=n&&(o=_s(n,"weights","logLoss")),ae(s.shape,i.shape,"Error in logLoss: ");let l=Op(1),u=Op(r),h=wh(Tl(s,dh(Il(i,u)))),p=Tl(Nh(l,s),dh(Il(Nh(l,i),u))),d=Nh(h,p);return vc(d,o,a)}});var Tc=$s({meanSquaredError_:function(e,t,n,r=bc.SUM_BY_NONZERO_WEIGHTS){let a=_s(e,"labels","meanSquaredError"),s=_s(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=_s(n,"weights","meanSquaredError")),ae(a.shape,s.shape,"Error in meanSquaredError: ");let o=ed(a,s);return vc(o,i,r)}});var _c=$s({sigmoidCrossEntropy_:function(e,t,n,r=0,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=_s(e,"multiClassLabels","sigmoidCrossEntropy"),i=_s(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=_s(n,"weights","sigmoidCrossEntropy")),ae(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=Op(r),t=Op(1),n=Op(.5);s=Il(Tl(s,Nh(t,e)),Tl(n,e))}let l=function(e,t){let n=_s(e,"labels","sigmoidCrossEntropyWithLogits"),r=_s(t,"logits","sigmoidCrossEntropyWithLogits");ae(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=_p(r),s=Tl(r,n),i=ch(qu(wh(_l(r))));return Il(Nh(a,s),i)}(s,i);return vc(l,o,a)}});var Cc=$s({softmaxCrossEntropy_:function(e,t,n,r=0,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=_s(e,"onehotLabels","softmaxCrossEntropy"),i=_s(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=_s(n,"weights","softmaxCrossEntropy")),ae(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=Op(r),t=Op(1),n=Op(s.shape[1]);s=Il(Tl(s,Nh(t,e)),Nl(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return xh(((e,t,r)=>{let a=Oh(t,[n],!0),s=Nh(_i(t,"float32"),a);r([e,s]);let i=wh(Tl(s,e));return{value:Th(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=Ah(e.shape,[n]);return[Tl(eu(e,s),Nh(_i(r,"float32"),qu(a))),Tl(eu(e,s),Nh(qu(a),_i(r,"float32")))]}}}))(e,t)}(s,i);return vc(l,o,a)}});var Ec=$s({sparseFillEmptyRows_:function(e,t,n,r){let a=_s(e,"indices","sparseFillEmptyRows","int32"),s=_s(t,"values","sparseFillEmptyRows"),i=_s(n,"denseShape","sparseFillEmptyRows","int32"),o=_s(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=gs.runKernel($r,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});var $c=$s({sparseReshape_:function(e,t,n){let r=_s(e,"inputIndices","sparseReshape","int32"),a=_s(t,"inputShape","sparseReshape","int32"),s=_s(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=gs.runKernel(Ar,i);return{outputIndices:o[0],outputShape:o[1]}}});var Ac=$s({sparseSegmentMean_:function(e,t,n){let r=_s(e,"data","sparseSegmentMean"),a=_s(t,"indices","sparseSegmentMean","int32"),s=_s(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return gs.runKernel(Fr,i)}});var Fc=$s({sparseSegmentSum_:function(e,t,n){let r=_s(e,"data","sparseSegmentSum"),a=_s(t,"indices","sparseSegmentSum","int32"),s=_s(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return gs.runKernel(Rr,i)}});var Rc=$s({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=_s(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=_s(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let h={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:l,dataSplits:u},d=gs.runKernel(zr,p,h);return{nGrams:d[0],nGramsSplits:d[1]}}});var Dc=$s({stringSplit_:function(e,t,n=!0){let r=_s(e,"input","stringSplit","string"),a=_s(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=gs.runKernel(Pr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});var Mc=$s({stringToHashBucketFast_:function(e,t){let n=_s(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return gs.runKernel(Br,a,r)}}),Oc={fft:Kp,ifft:Xp,rfft:Jp,irfft:Yp},Lc={hammingWindow:Wd,hannWindow:Vd,frame:Ud,stft:Gd},zc={flipLeftRight:jd,grayscaleToRGB:qd,resizeNearestNeighbor:dc,resizeBilinear:pc,rotateWithOffset:Kd,cropAndResize:Hd,nonMaxSuppression:Yd,nonMaxSuppressionAsync:ic,nonMaxSuppressionWithScore:oc,nonMaxSuppressionWithScoreAsync:lc,nonMaxSuppressionPadded:uc,nonMaxSuppressionPaddedAsync:hc,threshold:cc,transform:fc},Pc={bandPart:mc,gramSchmidt:gc,qr:xc},Bc={absoluteDifference:wc,computeWeightedLoss:vc,cosineDistance:kc,hingeLoss:Ic,huberLoss:Sc,logLoss:Nc,meanSquaredError:Tc,sigmoidCrossEntropy:_c,softmaxCrossEntropy:Cc},Wc={sparseFillEmptyRows:Ec,sparseReshape:$c,sparseSegmentMean:Ac,sparseSegmentSum:Fc},Vc={stringNGrams:Rc,stringSplit:Dc,stringToHashBucketFast:Mc},Uc=class extends Po{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return pl(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return bh(e,t)}dispose(){null!=this.iterations_&&pl(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Op(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Uc,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Gc=class extends Uc{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=gs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=gs.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:hl((()=>Wu(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:hl((()=>Wu(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;hl((()=>{let e=Il(Tl(i,this.rho),Tl(Qh(s),1-this.rho)),t=Tl(Nl(Qp(Il(o,this.epsilon)),Qp(Il(i,this.epsilon))),s),n=Il(Tl(o,this.rho),Tl(Qh(t),1-this.rho));i.assign(e),o.assign(n);let a=Il(Tl(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(pl(this.accumulatedGrads.map((e=>e.variable))),pl(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Gc.className="Adadelta",Wo(Gc);var Hc=class extends Uc{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=gs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:hl((()=>Ju(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;hl((()=>{let e=Il(s,Qh(a));s.assign(e);let t=Il(Tl(Nl(a,Qp(Il(e,gs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&pl(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Hc.className="Adagrad",Wo(Hc);var jc=class extends Uc{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],hl((()=>{this.accBeta1=Op(t).variable(),this.accBeta2=Op(n).variable()})),null==r&&(this.epsilon=gs.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);hl((()=>{let n=Nh(1,this.accBeta1),r=Nh(1,this.accBeta2);t.forEach(((t,a)=>{let s=gs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:hl((()=>Wu(s).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:hl((()=>Wu(s).variable(i)))});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,h=Il(Tl(l,this.beta1),Tl(o,1-this.beta1)),p=Il(Tl(u,this.beta2),Tl(Qh(o),1-this.beta2)),d=Nl(h,n),c=Nl(p,r);l.assign(h),u.assign(p);let f=Il(Tl(Nl(d,Il(Qp(c),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(Tl(this.accBeta1,this.beta1)),this.accBeta2.assign(Tl(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&pl(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&pl(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),hl((()=>{this.accBeta1.assign(cp(this.beta1,this.iterations_+1)),this.accBeta2.assign(cp(this.beta2,this.iterations_+1))}));let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};jc.className="Adam",Wo(jc);var qc=class extends Uc{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],hl((()=>{this.iteration=Op(0).variable(),this.accBeta1=Op(t).variable()})),null==r&&(this.epsilon=gs.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);hl((()=>{let n=Nh(1,this.accBeta1),r=Nl(-this.learningRate,Il(Tl(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=gs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Wu(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Wu(s).variable(i)});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,h=Il(Tl(l,this.beta1),Tl(o,1-this.beta1)),p=Tl(u,this.beta2),d=_l(o),c=Gh(p,d);l.assign(h),u.assign(c);let f=Il(Tl(Nl(r,n),Nl(h,Il(c,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Il(this.iteration,1)),this.accBeta1.assign(Tl(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&pl(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&pl(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};qc.className="Adamax",Wo(qc);var Kc=class extends Uc{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=gs.registeredVariables[t];hl((()=>{let e=Il(Tl(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=dl(Op(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Kc.className="SGD",Wo(Kc);var Xc=class extends Kc{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Op(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=gs.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:hl((()=>Wu(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&hl((()=>{let e,t=Il(Tl(this.m,a),s);e=this.useNesterov?Il(Tl(this.c,Il(s,Tl(t,this.m))),r):Il(Tl(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&pl(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Xc.className="Momentum",Wo(Xc);var Yc=class extends Uc{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=gs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=gs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:hl((()=>Wu(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:hl((()=>Wu(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:hl((()=>Wu(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;hl((()=>{let e=Il(Tl(i,this.decay),Tl(Qh(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=Il(Tl(t,this.decay),Tl(s,1-this.decay)),l=Nl(Tl(s,this.learningRate),Qp(Nh(e,Il(Qh(a),this.epsilon)))),u=Il(Tl(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let h=Nh(r,u);r.assign(h)}else{let e=Il(Tl(i,this.decay),Tl(Qh(s),1-this.decay)),t=Il(Tl(o,this.momentum),Nl(Tl(s,this.learningRate),Qp(Il(e,this.epsilon))));i.assign(e),o.assign(t);let n=Nh(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&pl(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&pl(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&pl(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Yc.className="RMSProp",Wo(Yc);var Zc=class{static sgd(e){return new Kc(e)}static momentum(e,t,n=!1){return new Xc(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Yc(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new jc(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Gc(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new qc(e,t,n,r,a)}static adagrad(e,t=.1){return new Hc(e,t)}},Jc={sgd:Zc.sgd,momentum:Zc.momentum,adadelta:Zc.adadelta,adagrad:Zc.adagrad,rmsprop:Zc.rmsprop,adamax:Zc.adamax,adam:Zc.adam},Qc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function ef(){return new Promise((e=>Qc((()=>e()))))}var tf={};function nf(e,t){let n=e[0].length;e.forEach(((e,t)=>{re(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),re(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)re(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function rf(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}g(tf,{ERF_A1:()=>gf,ERF_A2:()=>yf,ERF_A3:()=>bf,ERF_A4:()=>xf,ERF_A5:()=>vf,ERF_P:()=>mf,PARALLELIZE_THRESHOLD:()=>af,SELU_SCALE:()=>ff,SELU_SCALEALPHA:()=>cf,applyActivation:()=>Dd,assertAndGetBroadcastShape:()=>no,assertAxesAreInnerMostDims:()=>Fh,assertParamsConsistent:()=>nf,assignToTypedArray:()=>Tf,axesAreInnerMostDims:()=>Ch,calculateShapes:()=>yo,checkEinsumDimSizes:()=>Mf,checkPadOnDimRoundingMode:()=>Ql,combineLocations:()=>Eh,complexWithEvenIndex:()=>If,complexWithOddIndex:()=>Sf,computeConv2DInfo:()=>Ul,computeConv3DInfo:()=>Gl,computeDefaultPad:()=>Hl,computeDilation2DInfo:()=>Bl,computeOptimalWindowSize:()=>sf,computeOutAndReduceShapes:()=>$h,computeOutShape:()=>rf,computePool2DInfo:()=>Wl,computePool3DInfo:()=>Vl,convertConv2DDataFormat:()=>Jl,decodeEinsumEquation:()=>Rf,eitherStridesOrDilationsAreOne:()=>Zl,expandShapeToKeepDim:()=>Ah,exponent:()=>Cf,exponents:()=>_f,fromStringArrayToUint8:()=>rm,fromUint8ToStringArray:()=>nm,getAxesPermutation:()=>Rh,getBroadcastDims:()=>eo,getComplexWithIndex:()=>Nf,getEinsumComputePath:()=>Of,getEinsumPermutation:()=>Df,getFusedBiasGradient:()=>Rd,getFusedDyActivation:()=>Fd,getImageCenter:()=>of,getInnerMostAxes:()=>Mh,getPermuted:()=>uf,getReductionAxes:()=>to,getReshaped:()=>lf,getReshapedPermuted:()=>hf,getSliceBeginCoords:()=>pf,getSliceSize:()=>df,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Bf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Wf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Vf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Hf,getSparseReshapeInputOutputMismatchErrorMessage:()=>qf,getSparseReshapeInputOutputMultipleErrorMessage:()=>jf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Uf,getSparseReshapeNegativeOutputDimErrorMessage:()=>Gf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Zf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Kf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Xf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Yf,getUndoAxesPermutation:()=>Dh,isIdentityPermutation:()=>Lf,log:()=>sa,mergeRealAndImagArrays:()=>wf,prepareAndValidate:()=>co,prepareSplitSize:()=>Pf,segment_util:()=>Jf,shouldFuse:()=>Md,slice_util:()=>bo,splitRealAndImagArrays:()=>kf,tupleValuesAreOne:()=>Yl,upcastType:()=>ss,validateInput:()=>go,validateUpdateShape:()=>mo,warn:()=>aa});var af=30;function sf(e){return e<=af?e:Fe(e,Math.floor(Math.sqrt(e)))}function of(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function lf(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function uf(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function hf(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function pf(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function df(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var cf=1.7580993408473768,ff=1.0507009873554805,mf=.3275911,gf=.254829592,yf=-.284496736,bf=1.421413741,xf=-1.453152027,vf=1.061405429;function wf(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function kf(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function If(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Sf(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Nf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Tf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function _f(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Cf(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var Ef="->",$f=/->/g,Af=",",Ff="...";function Rf(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace($f,"").length)/Ef.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Ef}").`);let[r,a]=e.split(Ef);re(-1===r.indexOf(Ff),(()=>`The ellipsis notation ("${Ff}") is not supported yet.`));let s=r.split(Af),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&t!==Af&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,h=[];for(let e=a.length;e<u;++e)h.push(e);return{allDims:o,summedDims:h,idDims:l}}function Df(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Mf(e,t,n){let r=new Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:re(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Of(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);let s=[];for(let e=0;e<n.length;++e){let a=zf(t,n[e]);for(let t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Lf(e){return e.every(((e,t)=>e===t))}function zf(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function Pf(e,t,n=0){let r=[];if("number"==typeof t)re(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{re(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}re(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Bf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Wf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Vf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Uf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Gf(e,t){return`size ${e} must be non-negative, not ${t}`}function Hf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function jf(e,t){return`Input to reshape is a SparseTensor with ${oe(e)}\n  dense values, but the requested shape requires a multiple of ${oe(t)}. inputShape=${e} outputShape= ${t}`}function qf(e,t){return`Input to reshape is a tensor with ${oe(e)} dense values, but the requested shape has ${oe(t)}. inputShape=${e} outputShape=${t}`}function Kf(){return"segment ids must be >= 0"}function Xf(){return"segment ids are not increasing"}function Yf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Zf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Jf={};function Qf(e,t){let n,r=!1;for(e<=af?(n=e,r=!0):n=Fe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Fe(e,n+1);return n}function em(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function tm(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,h=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),h*=e.shape[t];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function nm(e){try{return e.map((e=>La(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function rm(e){return e.map((e=>Oa(e)))}g(Jf,{collectGatherOpShapeInfo:()=>tm,computeOutShape:()=>em,segOpComputeOptimalWindowSize:()=>Qf});var am={};g(am,{nonMaxSuppressionV3Impl:()=>Qd,nonMaxSuppressionV4Impl:()=>ec,nonMaxSuppressionV5Impl:()=>tc,whereImpl:()=>yd});var sm={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,rd(_i(n,"float32"),-1))}}},im={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Qh(_i(n,"float32")),r=Qp(Nh(Op(1),t));return wh(Nl(e,r))}}}},om={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Qp(Nh(Qh(_i(n,"float32")),1));return Nl(e,t)}}}},lm={kernelName:et,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=no(n.shape,r.shape);return{a:()=>{let t=e,r=to(n.shape,a);return r.length>0&&(t=Th(t,r)),eu(t,n.shape)},b:()=>{let t=e,n=to(r.shape,a);return n.length>0&&(t=Th(t,n)),eu(t,r.shape)}}}},um={kernelName:tt,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},hm={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Wu(n)}}},pm={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Wu(n)}}},dm={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Nl(e,Qp(Nh(Op(1),Qh(_i(n,"float32")))))}}},cm={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Qp(Il(Op(1),Qh(_i(n,"float32"))));return Nl(e,t)}}}},fm={kernelName:ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=no(n.shape,r.shape);return{a:()=>{let t=Il(Qh(n),Qh(r)),s=Tl(e,Nl(r,t)),i=to(n.shape,a);return i.length>0&&(s=Th(s,i)),eu(s,n.shape)},b:()=>{let t=Il(Qh(n),Qh(r)),s=wh(Tl(e,Nl(n,t))),i=to(r.shape,a);return i.length>0&&(s=Th(s,i)),eu(s,r.shape)}}}},mm={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Nl(e,Il(Qh(_i(n,"float32")),1))}}},gm={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Nl(e,Nh(Op(1),Qh(_i(n,"float32"))))}}};var ym=$s({avgPool3dGrad_:function(e,t,n,r,a,s){let i=_s(e,"dy","avgPool3dGrad"),o=_s(t,"input","avgPool3dGrad"),l=i,u=o,h=!1;4===o.rank&&(h=!0,l=eu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=eu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),re(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),re(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Ql("avgPool3dGrad",a,s);let p={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=gs.runKernel(ft,p,d);return h?eu(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),bm={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>ym(e,r,a,s,i,o)}}};var xm=$s({avgPoolGrad_:function(e,t,n,r,a){let s=_s(e,"dy","avgPoolGrad"),i=_s(t,"input","avgPoolGrad");re(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=eu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=eu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),re(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),re(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let h={dy:l,input:o},p={filterSize:n,strides:r,pad:a},d=gs.runKernel(dt,h,p);return u?eu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),vm={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>xm(e,r,a,s,i)}}},wm={kernelName:mt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Xi(e,a,!1,!1),b:()=>Xi(e,r,!0,!1)}:s&&!i?{a:()=>Xi(a,e,!1,!0),b:()=>Xi(r,e,!1,!1)}:{a:()=>Xi(a,e,!0,!0),b:()=>Xi(e,r,!0,!0)}:{a:()=>Xi(e,a,!1,!0),b:()=>Xi(r,e,!0,!1)}}},km={kernelName:gt,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>pp(e,r,a)}}},Im={kernelName:bt,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Th(e,o,!0)}}},Sm={kernelName:vt,gradFunc:e=>({x:()=>e.clone()})},Nm={kernelName:wt,gradFunc:e=>({x:()=>Wu(e)})},Tm={kernelName:kt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Bu(Lh(nh(r,a),uh(r,s)),e,Wu(e))}}},_m={kernelName:St,inputsToSave:["x"],gradFunc:sm.gradFunc},Cm={kernelName:Nt,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=ye(a,t[0].shape)[0],i=r.map((e=>e[s]));return Zp(e,i,s).map((e=>()=>e))}},Em={kernelName:Tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return re(Yl(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Nu(r.shape,e,a,i,o,l),filter:()=>Ad(r,e,a.shape,i,o,l)}}},$m={kernelName:Ct,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Iu(e,a,s,i,o,1,l),filter:()=>Ad(e,r,a.shape,s,i,o,l)}}};var Am=$s({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=eu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=eu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),re(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),re(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),re(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),re(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),re(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return gs.runKernel($t,o,l)}}),Fm={kernelName:Et,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;re(Yl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>Cu(i.shape,e,o,a,s),filter:()=>Am(i,e,o.shape,a,s)}}},Rm={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(wh(Wp(_i(n,"float32"))),e)}}},Dm={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(Vp(_i(n,"float32")),e)}}},Mm={kernelName:Mt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Rh([a],r.rank),n=Ru(e,a,s,!i);return null!=t&&(n=Zi(n,t)),n}}}},Om={kernelName:Pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;re(Yl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return re(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),re(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),re(Zl(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Ql("depthwiseConv2d",s,i),{x:()=>zd(l.shape,e,u,a,s,o,i),filter:()=>Ld(l,e,u.shape,a,s,o,i)}}},Lm={kernelName:Ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>gs.runKernel(Gt,s,n),filter:()=>gs.runKernel(Ht,i,n)}}},zm={kernelName:Kt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>gs.runKernel(Xt,r)}}},Pm={kernelName:Yt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Tl(qu(wh(Qh(n))),2/Math.sqrt(Math.PI));return{x:()=>Tl(e,r)}}},Bm={kernelName:Jt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,n)}}},Wm={kernelName:Qt,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>eu(e,n.shape)}}},Vm={kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,qu(n))}}},Um={kernelName:an,gradFunc:e=>({x:()=>Wu(e)})},Gm={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=no(n.shape,r.shape);return{a:()=>{let t=Nl(e,_i(r,"float32")),s=to(n.shape,a);return s.length>0?eu(Th(t,s),n.shape):t},b:()=>{let t=Tl(e,_i(n,"float32")),s=to(r.shape,a);s.length>0&&(t=eu(Th(t,s),r.shape));let i=Qh(r);return wh(Nl(t,_i(i,"float32")))}}}},Hm={kernelName:on,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?Op(1):o,u=to(s.shape,a.shape),h=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)h.push(a.shape[e]);h.push(1)}let p=Nh(a,s),d=Tl(e,l),c=Mp(Il(i,Op(r))),f=Tl(Tl(Tl(c,c),c),Op(-.5));return{x:()=>1===s.rank?eu(Tl(Tl(e,Yu(eu(c,[1,1,1,s.shape[0]]),h)),l),a.shape):eu(Tl(Tl(e,c),l),a.shape),mean:()=>{let e=Tl(Tl(c,Op(-1)),d);return 1===s.rank&&(e=Th(e,u)),eu(e,s.shape)},variance:()=>{let e=Tl(Tl(f,p),d);return 1===s.rank&&(e=Th(e,u)),eu(e,s.shape)},scale:()=>{let t=Tl(p,c),n=Tl(e,t);return 1===s.rank&&(n=Th(n,u)),eu(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Th(t,u)),eu(t,s.shape)}}}},jm={kernelName:ln,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=ye(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),h=u.length,p=qm(0,l),d=qm(l+1,l+1+h),c=Km([o,[n],u]),f=eu(e,c),m=eu(a,[n]),g=Km([[l],p,d]),y=Zi(f,g),b=fd(y,m,r.shape[i]),x=Dh(g);return b=Zi(b,x),b},indices:()=>a}}};function qm(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Km(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Xm={kernelName:pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Wu(n),b:()=>Wu(r)}}},Ym={kernelName:dn,gradFunc:e=>({x:()=>_i(e,"float32")})},Zm={kernelName:mn,gradFunc:e=>({x:()=>Wu(e)})},Jm={kernelName:gn,gradFunc:e=>({x:()=>Wu(e)})},Qm={kernelName:yn,gradFunc:e=>({x:()=>Wu(e)})},eg={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=th(r,0);return{x:()=>Bu(s,e,Tl(e,a))}}},tg={kernelName:In,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Nl(e,Il(n,1))}}},ng={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Nl(e,_i(n,"float32"))}}},rg={kernelName:_n,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=qu(r);return Nh(e,Tl(Th(e,a,!0),t))}}}};var ag=$s({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return gs.runKernel(En,o,l)}}),sg={kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>ag(r,a,e,s,i,o,l)}}};function ig(e,t,n,r){return t.rank<n.rank&&(t=eu(t,Ah(t.shape,r))),e.rank<n.rank&&(e=eu(e,Ah(e.shape,r))),{x:()=>Tl(e,_i(Pu(n,t),e.dtype))}}var og={kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=ig(e,t[1],s,ye(a,s.shape));return{x:()=>i.x()}}},lg={kernelName:An,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Tl(e,_i(nh(n,r),"float32")),b:()=>Tl(e,_i(lh(n,r),"float32"))}}};var ug=$s({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=_s(e,"dy","maxPool3dGrad"),l=_s(t,"input","maxPool3dGrad"),u=_s(n,"output","maxPool3dGrad"),h=o,p=l,d=u,c=!1;4===l.rank&&(c=!0,h=eu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=eu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=eu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),re(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),re(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),re(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Ql("maxPool3dGrad",s,i);let f={dy:h,input:p,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=gs.runKernel(Mn,f,m);return c?eu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),hg={kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>ug(e,r,a,s,i,o,l)}}};var pg=$s({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=_s(e,"dy","maxPoolGrad"),l=_s(t,"input","maxPoolGrad"),u=_s(n,"output","maxPoolGrad");re(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),re(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),re(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Ql("maxPoolGrad",s,i);let h={dy:o,input:l,output:u},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return gs.runKernel(Rn,h,p)}}),dg={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>pg(e,r,a,s,i,o)}}},cg={kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=ye(a,r.shape),i=oe($h(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=eu(e,t);return Nl(Tl(n,qh(r.shape,"float32")),i)}}}},fg={kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=ig(e,i,s,ye(a,s.shape));return{x:()=>o.x()}}},mg={kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Tl(e,_i(uh(n,r),"float32")),b:()=>Tl(e,_i(th(n,r),"float32"))}}},gg={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>su(e,s,r.shape)}}},yg={kernelName:Wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=no(n.shape,r.shape);return{a:()=>{let t=to(n.shape,a);return t.length>0?eu(Th(e,t),n.shape):e},b:()=>{let t=Tl(e,wh(Qu(Nl(n,r)))),s=to(r.shape,a);return s.length>0?eu(Th(t,s),r.shape):t}}}},bg={kernelName:Un,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=no(n.shape,r.shape);return{a:()=>{let t=Tl(e,_i(r,"float32")),s=to(n.shape,a);return s.length>0?eu(Th(t,s),n.shape):t},b:()=>{let t=Tl(e,_i(n,"float32")),s=to(r.shape,a);return s.length>0?eu(Th(t,s),r.shape):t}}}},xg={kernelName:Gn,gradFunc:e=>({x:()=>wh(e)})},vg={kernelName:Yn,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>jh(n.shape,"float32")}}},wg={kernelName:Xn,gradFunc:e=>({x:()=>Wu(e)})},kg={kernelName:Zn,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return md(e,r).map((e=>()=>e))}},Ig={kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>su(e,s,r.shape)}}},Sg={kernelName:er,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=no(s.shape,i.shape);return{a:()=>{let t=_i(i,"float32"),n=Tl(e,Tl(t,cp(s,Nh(t,Op(1))))),r=to(s.shape,o);return r.length>0&&(n=Th(n,r)),eu(n,s.shape)},b:()=>{let t=th(s,0),n=Bu(t,dh(s),Wu(s)),r=Tl(e,Tl(a,n)),l=to(i.shape,o);return l.length>0&&(r=Th(r,l)),eu(r,i.shape)}}}},Ng={kernelName:tr,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=th(n,0);return{x:()=>Bu(a,e,Tl(e,r)),alpha:()=>{let t=Bu(a,Wu(e),Tl(e,n)),s=to(r.shape,e.shape);return s.length>0&&(t=Th(t,s)),eu(t,r.shape)}}}},Tg={kernelName:jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=no(n.shape,r.shape);return{a:()=>{let t=Nl(e,_i(r,"float32")),s=to(n.shape,a);return s.length>0?eu(Th(t,s),n.shape):t},b:()=>{let t=Tl(e,_i(n,"float32")),s=to(r.shape,a);s.length>0&&(t=eu(Th(t,s),r.shape));let i=Qh(r);return wh(Nl(t,_i(i,"float32")))}}}},_g={kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Nl(e,wh(Qh(n)))}}},Cg={kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Tl(uh(n,6),rd(n));return{x:()=>Tl(e,_i(r,"float32"))}}},Eg={kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,_i(rd(n),"float32"))}}},$g={kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>eu(e,n.shape)}}},Ag={kernelName:hr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>gs.runKernel(pr,a,n)}}},Fg={kernelName:lr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>gs.runKernel(ur,a,n)}}},Rg={kernelName:cr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=ye(r,e.shape);return{x:()=>Ep(e,a)}}},Dg={kernelName:fr,gradFunc:e=>({x:()=>Wu(e)})},Mg={kernelName:mr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>wh(Nl(e,Tl(cp(n,1.5),2)))}}},Og={kernelName:yr,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>_i(Wu(n),"float32"),t:()=>Tl(e,_i(n,e.dtype)),e:()=>Tl(e,_i(zh(n),e.dtype))}}},Lg={kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=th(n,Op(0)),r=Op(cf),a=Op(ff),s=Tl(e,a),i=Tl(Tl(e,r),qu(_i(n,"float32")));return Bu(t,s,i)}}}},zg={kernelName:Ir,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,Tl(n,Nh(Op(1),n)))}}},Pg={kernelName:kr,gradFunc:e=>({x:()=>Wu(e)})},Bg={kernelName:vr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl($u(_i(n,"float32")),e)}}},Wg={kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(Au(_i(n,"float32")),e)}}},Vg={kernelName:xr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Mo(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>ip(e,u)}}},Ug={kernelName:Er,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=Tl(e,r);return{logits:()=>Nh(s,Tl(Th(s,[a],true),r))}}},Gg={kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,au(n))}}},Hg={kernelName:_r,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>lu(e,r,a)}}},jg={kernelName:Cr,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>ru(e,r)}}},qg={kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Nl(e,Tl(Qp(_i(n,"float32")),2))}}},Kg={kernelName:Or,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,Tl(_i(n,"float32"),2))}}},Xg={kernelName:Mr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Op(2);return{a:()=>Tl(e,Tl(a,Nh(n,r))),b:()=>Tl(e,Tl(a,Nh(r,n)))}}},Yg={kernelName:Jr,gradFunc:e=>({x:()=>Wu(e)})},Zg={kernelName:Wr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=no(n.shape,r.shape);return{a:()=>{let t=e,r=to(n.shape,a);return r.length>0&&(t=Th(t,r)),eu(t,n.shape)},b:()=>{let t=e,n=to(r.shape,a);return n.length>0&&(t=Th(t,n)),eu(wh(t),r.shape)}}}},Jg={kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;ye(s,r.shape).forEach((e=>{a[e]=1}));let i=eu(e,a),o=Tl(i,qh(r.shape,"float32"));return{x:()=>o}}},Qg={kernelName:Vr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Nl(e,Qh($u(n)))}}},ey={kernelName:Ur,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(Nh(Op(1),Qh(n)),e)}}},ty={kernelName:Gr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Wu(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Il(t,su(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Il(t,su(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Il(t,su(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Il(t,su(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},ny={kernelName:qr,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Dh(a);return{x:()=>Zi(e,s)}}},ry={kernelName:Xr,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>nd(e,a)}}},ay={kernelName:Yr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=Gh(t,Wu(t)),r=eh(e,n),a=nh(t,Op(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=Ku(a,e+1);a=Lh(a,qh(r.shape,"bool"));let i=Wu(r);return Bu(a,r,i)}(e,n)}}};var sy={kernelName:Zr,gradFunc:e=>({x:()=>Wu(e)})},iy=[sm,im,om,lm,um,hm,pm,dm,cm,fm,mm,gm,bm,vm,wm,km,Im,Sm,Nm,Tm,_m,Cm,$m,Em,Fm,Rm,Dm,Mm,Om,Lm,Tg,zm,Pm,Bm,Wm,Vm,Gm,Um,Hm,jm,Xm,Ym,Zm,Jm,Qm,eg,tg,ng,rg,sg,og,og,lg,hg,dg,cg,fg,mg,gg,yg,bg,xg,vg,wg,kg,Ig,Ig,Sg,Ng,_g,Cg,Eg,$g,Ag,Fg,Rg,Dg,Mg,Og,Lg,zg,Pg,Bg,Wg,Vg,Ug,Gg,Hg,Hg,jg,jg,qg,Xg,Kg,Yg,Zg,Jg,Qg,ey,ty,ny,ry,ay,sy];for(let e of iy)da(e);Ya().prototype.abs=function(){return this.throwIfDisposed(),_l(this)},Ya().prototype.acos=function(){return this.throwIfDisposed(),Cl(this)},Ya().prototype.acosh=function(){return this.throwIfDisposed(),El(this)},Ya().prototype.add=function(e){return this.throwIfDisposed(),Il(this,e)},Ya().prototype.all=function(e,t){return this.throwIfDisposed(),Al(this,e,t)},Ya().prototype.any=function(e,t){return this.throwIfDisposed(),Fl(this,e,t)},Ya().prototype.argMax=function(e){return this.throwIfDisposed(),Rl(this,e)},Ya().prototype.argMin=function(e){return this.throwIfDisposed(),Dl(this,e)},Ya().prototype.asScalar=function(){return this.throwIfDisposed(),re(1===this.size,(()=>"The array must have only 1 element.")),eu(this,[])},Ya().prototype.asType=function(e){return this.throwIfDisposed(),_i(this,e)},Ya().prototype.as1D=function(){return this.throwIfDisposed(),eu(this,[this.size])},Ya().prototype.as2D=function(e,t){return this.throwIfDisposed(),eu(this,[e,t])},Ya().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),eu(this,[e,t,n])},Ya().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),eu(this,[e,t,n,r])},Ya().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),eu(this,[e,t,n,r,a])},Ya().prototype.asin=function(){return this.throwIfDisposed(),Ml(this)},Ya().prototype.asinh=function(){return this.throwIfDisposed(),Ol(this)},Ya().prototype.atan=function(){return this.throwIfDisposed(),Ll(this)},Ya().prototype.atan2=function(e){return this.throwIfDisposed(),zl(this,e)},Ya().prototype.atanh=function(){return this.throwIfDisposed(),Pl(this)},Ya().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),tu(this,e,t,n,r)},Ya().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),lu(this,e,t)},Ya().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),hu(this,e,t,n,r,a)},Ya().prototype.broadcastTo=function(e){return this.throwIfDisposed(),gu(this,e)},Ya().prototype.cast=function(e){return this.throwIfDisposed(),_i(this,e)},Ya().prototype.ceil=function(){return this.throwIfDisposed(),yu(this)},Ya().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},Ya().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Xa&&(e=[e]),ru([this,...e],t)},Ya().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Su(this,e,t,n,r,a,s)},Ya().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Tu(this,e,t,n,r,a)},Ya().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Iu(this,e,t,n,r,a,s)},Ya().prototype.cos=function(){return this.throwIfDisposed(),$u(this)},Ya().prototype.cosh=function(){return this.throwIfDisposed(),Au(this)},Ya().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Fu(this,e,t,n)},Ya().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Ru(this,e,t,n)},Ya().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Mu(this,e,t)},Ya().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ou(this,e,t,n,r,a,s)},Ya().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),zu(this,e,t,n,r,a)},Ya().prototype.divNoNan=function(e){return this.throwIfDisposed(),Vu(this,e)},Ya().prototype.div=function(e){return this.throwIfDisposed(),Nl(this,e)},Ya().prototype.dot=function(e){return this.throwIfDisposed(),Uu(this,e)},Ya().prototype.elu=function(){return this.throwIfDisposed(),Hu(this)},Ya().prototype.equal=function(e){return this.throwIfDisposed(),Pu(this,e)},Ya().prototype.erf=function(){return this.throwIfDisposed(),ju(this)},Ya().prototype.exp=function(){return this.throwIfDisposed(),qu(this)},Ya().prototype.expandDims=function(e){return this.throwIfDisposed(),Ku(this,e)},Ya().prototype.expm1=function(){return this.throwIfDisposed(),Xu(this)},Ya().prototype.fft=function(){return this.throwIfDisposed(),Kp(this)},Ya().prototype.flatten=function(){return this.throwIfDisposed(),eu(this,[this.size])},Ya().prototype.floor=function(){return this.throwIfDisposed(),Qu(this)},Ya().prototype.floorDiv=function(e){return this.throwIfDisposed(),Sl(this,e)},Ya().prototype.gather=function(e,t){return this.throwIfDisposed(),eh(this,e,t)},Ya().prototype.greaterEqual=function(e){return this.throwIfDisposed(),nh(this,e)},Ya().prototype.greater=function(e){return this.throwIfDisposed(),th(this,e)},Ya().prototype.ifft=function(){return this.throwIfDisposed(),Xp(this)},Ya().prototype.irfft=function(){return this.throwIfDisposed(),Yp(this)},Ya().prototype.isFinite=function(){return this.throwIfDisposed(),ah(this)},Ya().prototype.isInf=function(){return this.throwIfDisposed(),sh(this)},Ya().prototype.isNaN=function(){return this.throwIfDisposed(),ih(this)},Ya().prototype.leakyRelu=function(e){return this.throwIfDisposed(),oh(this,e)},Ya().prototype.lessEqual=function(e){return this.throwIfDisposed(),uh(this,e)},Ya().prototype.less=function(e){return this.throwIfDisposed(),lh(this,e)},Ya().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),ph(this,e,t,n,r)},Ya().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ih(this)},Ya().prototype.logSoftmax=function(e){return this.throwIfDisposed(),_h(this,e)},Ya().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Oh(this,e,t)},Ya().prototype.log=function(){return this.throwIfDisposed(),dh(this)},Ya().prototype.log1p=function(){return this.throwIfDisposed(),ch(this)},Ya().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Lh(this,e)},Ya().prototype.logicalNot=function(){return this.throwIfDisposed(),zh(this)},Ya().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ph(this,e)},Ya().prototype.logicalXor=function(e){return this.throwIfDisposed(),Bh(this,e)},Ya().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Xi(this,e,t,n)},Ya().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Wh(this,e,t,n,r)},Ya().prototype.max=function(e,t){return this.throwIfDisposed(),Sh(this,e,t)},Ya().prototype.maximum=function(e){return this.throwIfDisposed(),Gh(this,e)},Ya().prototype.mean=function(e,t){return this.throwIfDisposed(),Hh(this,e,t)},Ya().prototype.min=function(e,t){return this.throwIfDisposed(),Xh(this,e,t)},Ya().prototype.minimum=function(e){return this.throwIfDisposed(),Yh(this,e)},Ya().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Zh(this,e,t)},Ya().prototype.mod=function(e){return this.throwIfDisposed(),Jh(this,e)},Ya().prototype.mul=function(e){return this.throwIfDisposed(),Tl(this,e)},Ya().prototype.neg=function(){return this.throwIfDisposed(),wh(this)},Ya().prototype.norm=function(e,t,n){return this.throwIfDisposed(),wd(this,e,t,n)},Ya().prototype.notEqual=function(e){return this.throwIfDisposed(),rp(this,e)},Ya().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Yi(this,e,t,n)},Ya().prototype.onesLike=function(){return this.throwIfDisposed(),ap(this)},Ya().prototype.pad=function(e,t){return this.throwIfDisposed(),ip(this,e,t)},Ya().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),dp(this,e,t,n,r,a,s)},Ya().prototype.pow=function(e){return this.throwIfDisposed(),cp(this,e)},Ya().prototype.prelu=function(e){return this.throwIfDisposed(),fp(this,e)},Ya().prototype.prod=function(e,t){return this.throwIfDisposed(),mp(this,e,t)},Ya().prototype.reciprocal=function(){return this.throwIfDisposed(),Tp(this)},Ya().prototype.relu=function(){return this.throwIfDisposed(),_p(this)},Ya().prototype.relu6=function(){return this.throwIfDisposed(),Cp(this)},Ya().prototype.reshapeAs=function(e){return this.throwIfDisposed(),eu(this,e.shape)},Ya().prototype.reshape=function(e){return this.throwIfDisposed(),eu(this,e)},Ya().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),pc(this,e,t,n)},Ya().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),dc(this,e,t,n)},Ya().prototype.reverse=function(e){return this.throwIfDisposed(),Ep(this,e)},Ya().prototype.rfft=function(){return this.throwIfDisposed(),Jp(this)},Ya().prototype.round=function(){return this.throwIfDisposed(),Dp(this)},Ya().prototype.rsqrt=function(){return this.throwIfDisposed(),Mp(this)},Ya().prototype.selu=function(){return this.throwIfDisposed(),Lp(this)},Ya().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),zp(this,e,t,n,r,a,s)},Ya().prototype.sigmoid=function(){return this.throwIfDisposed(),au(this)},Ya().prototype.sign=function(){return this.throwIfDisposed(),Bp(this)},Ya().prototype.sin=function(){return this.throwIfDisposed(),Wp(this)},Ya().prototype.sinh=function(){return this.throwIfDisposed(),Vp(this)},Ya().prototype.slice=function(e,t){return this.throwIfDisposed(),su(this,e,t)},Ya().prototype.softmax=function(e){return this.throwIfDisposed(),qp(this,e)},Ya().prototype.softplus=function(){return this.throwIfDisposed(),kh(this)},Ya().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},Ya().prototype.split=function(e,t){return this.throwIfDisposed(),Zp(this,e,t)},Ya().prototype.sqrt=function(){return this.throwIfDisposed(),Qp(this)},Ya().prototype.square=function(){return this.throwIfDisposed(),Qh(this)},Ya().prototype.squaredDifference=function(e){return this.throwIfDisposed(),ed(this,e)},Ya().prototype.squeeze=function(e){return this.throwIfDisposed(),td(this,e)},Ya().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Xa?[this,e]:[this,...e];return nd(n,t)},Ya().prototype.step=function(e){return this.throwIfDisposed(),rd(this,e)},Ya().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),ad(this,e,t,n,r,a,s,i,o)},Ya().prototype.sub=function(e){return this.throwIfDisposed(),Nh(this,e)},Ya().prototype.sum=function(e,t){return this.throwIfDisposed(),Th(this,e,t)},Ya().prototype.tan=function(){return this.throwIfDisposed(),sd(this)},Ya().prototype.tanh=function(){return this.throwIfDisposed(),iu(this)},Ya().prototype.tile=function(e){return this.throwIfDisposed(),Yu(this,e)},Ya().prototype.toBool=function(){return this.throwIfDisposed(),_i(this,"bool")},Ya().prototype.toFloat=function(){return this.throwIfDisposed(),_i(this,"float32")},Ya().prototype.toInt=function(){return this.throwIfDisposed(),_i(this,"int32")},Ya().prototype.topk=function(e,t){return this.throwIfDisposed(),pd(this,e,t)},Ya().prototype.transpose=function(e){return this.throwIfDisposed(),Zi(this,e)},Ya().prototype.unique=function(e){return this.throwIfDisposed(),cd(this,e)},Ya().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),fd(this,e,t)},Ya().prototype.unstack=function(e){return this.throwIfDisposed(),md(this,e)},Ya().prototype.where=function(e,t){return this.throwIfDisposed(),Bu(e,this,t)},Ya().prototype.zerosLike=function(){return this.throwIfDisposed(),Wu(this)};var oy,ly={};function uy(){return null==oy&&(oy=wl().epsilon()),oy}g(ly,{maxNorm:()=>Gy,minMaxNorm:()=>qy,nonNeg:()=>jy,unitNorm:()=>Hy});var hy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hy.prototype)}},py=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,py.prototype)}},dy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dy.prototype)}},cy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cy.prototype)}},fy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fy.prototype)}};function my(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function gy(e,t){if(!e)throw new fy(t)}function yy(e,t){let n=0;for(let r of e)r===t&&n++;return n}function by(e){return 1===e.length?e[0]:e}function xy(e){return Array.isArray(e)?e:[e]}function vy(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function wy(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var ky={};function Iy(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Sy(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Sy(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Sy(t):e[n]=t.value)}}}function Ny(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in ky)a=ky[s];else if(a=t[s],null==a)throw new dy(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new dy(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in ky?[i,o]=ky.className:l in t&&([i,o]=t[l]),null==i)throw new dy(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(ky))e[t]=ky[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t=Object.assign({},ky);for(let e of Object.keys(n))ky[e]=n[e];Sy(s.config);let r=o(i,s.config,n,a);return ky=Object.assign({},t),r}{let e=Object.assign({},ky);for(let e of Object.keys(n))ky[e]=n[e];let t=new i(s.config);return ky=Object.assign({},e),t}}}function Ty(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function _y(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function Cy(e){if(null==e)throw new dy(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ey(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new dy(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function $y(e,t,n=0,r=1/0){return gy(n>=0),gy(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Ay(e,t){Array.isArray(e)?(ya.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Ay(e,`element ${n+1} of ${t}`)))):ya.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Fy(e)}.`))}function Fy(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Fy(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Ry(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Dy(e,t){return hl((()=>Qp(Th(Tl(e,e),t,!0))))}var My=class extends zo.Serializable{getConfig(){return{}}},Oy=class extends My{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hl((()=>{let t=Dy(e,this.axis),n=bu(t,0,this.maxValue);return Tl(e,Nl(n,Il(uy(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Oy.className="MaxNorm",zo.registerClass(Oy);var Ly=class extends My{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hl((()=>Nl(e,Il(uy(),Dy(e,this.axis)))))}getConfig(){return{axis:this.axis}}};Ly.className="UnitNorm",zo.registerClass(Ly);var zy=class extends My{apply(e){return _p(e)}};zy.className="NonNeg",zo.registerClass(zy);var Py=class extends My{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hl((()=>{let t=Dy(e,this.axis),n=Il(Tl(this.rate,bu(t,this.minValue,this.maxValue)),Tl(1-this.rate,t));return Tl(e,Nl(n,Il(uy(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Py.className="MinMaxNorm",zo.registerClass(Py);var By={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Wy(e){return Iy(e)}function Vy(e,t={}){return Ny(e,zo.SerializationMap.getMap().classNameMap,t,"constraint")}function Uy(e){if(null==e)return null;if("string"==typeof e){return Vy({className:e in By?By[e]:e,config:{}})}return e instanceof My?e:Vy(e)}function Gy(e){return new Oy(e)}function Hy(e){return new Ly(e)}function jy(){return new zy}function qy(e){return new Py(e)}var Ky={};g(Ky,{constant:()=>tx,glorotNormal:()=>lx,glorotUniform:()=>ox,heNormal:()=>ux,heUniform:()=>hx,identity:()=>sx,leCunNormal:()=>px,leCunUniform:()=>dx,ones:()=>ex,orthogonal:()=>cx,randomNormal:()=>rx,randomUniform:()=>nx,truncatedNormal:()=>ax,varianceScaling:()=>ix,zeros:()=>Qb});var Xy=["channelsFirst","channelsLast"],Yy=["nearest","bilinear"],Zy=["valid","same","causal"],Jy=["max","avg"],Qy=["sum","mul","concat","ave"],eb=new Map;function tb(e){Ey(Xy,"DataFormat",e)}function nb(e){Ey(Zy,"PaddingMode",e)}function rb(e){Ey(Jy,"PoolMode",e)}var ab=[];function sb(e,t){ab.push(e);try{let e=t();return ab.pop(),e}catch(e){throw ab.pop(),e}}function ib(e){if(!ub(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===ab.length?"":ab.join("/")+"/")+e}function ob(e){if(!ub(e))throw new Error("Not a valid tensor name: '"+e+"'");eb.has(e)||eb.set(e,0);let t=eb.get(e);if(eb.set(e,eb.get(e)+1),t>0){let n=`${e}_${t}`;return eb.set(n,1),n}return e}var lb=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ub(e){return!!e.match(lb)}function hb(e){return e===parseInt(e.toString(),10)}function pb(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function db(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function cb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function fb(e,t){if(t<e)throw new dy(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function mb(e,t){return _i(e,t)}function gb(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),eu(e,n)}function yb(e,t,n){return hl((()=>{switch(e.rank){case 1:return Up(e,t,n);case 2:return Gp(e,[t,0],[n,e.shape[1]]);case 3:return Hp(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return jp(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return su(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return su(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new dy(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function bb(e,t,n){return hl((()=>{switch(e.rank){case 1:return Up(e,t,n);case 2:return Gp(e,[0,t],[e.shape[0],n]);case 3:return Hp(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return jp(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new dy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function xb(e,t,n,r){return hl((()=>{switch(e.rank){case 1:return Up(e,t,n);case 2:switch(r){case 1:return yb(e,t,n);case 2:return bb(e,t,n);default:throw new dy(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return yb(e,t,n);case 2:return Hp(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return bb(e,t,n);default:throw new dy(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return yb(e,t,n);case 2:return jp(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return jp(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return bb(e,t,n);default:throw new dy(`The axis is not within the rank of the tensor ${r}`)}default:throw new dy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function vb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),ru(e,t)}function wb(e,t){switch(e.rank){case 1:return xu([e,t]);case 2:return vu([e,t],0);case 3:return wu([e,t],0);case 4:return ku([e,t],0);default:throw new dy(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function kb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new dy(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Yu(e,t)}function Ib(e,t=0,n=1,r,a){return kp(e,t,n,r,a)}function Sb(e,t,n,r){if(e.rank<2||t.rank<2)throw new cy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new cy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return $d.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?_b(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=eu(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=eu(Zi(t,h),[l,-1]);let p=[...a,...u],d=!1,c=!1;return eu($d.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:r?_b(e.rank,r,"channelsLast"):null,activation:n}),p)}}function Nb(e,t,n){return hl((()=>(t=Array.isArray(t)?id(t,"int32"):_i(t,"int32"),eh(e,t,n))))}function Tb(e){return Tl(e,e)}function _b(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new dy(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?eu(t,[1,r[0],1,1,1]):eu(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?eu(t,[1,1,1,1,r[0]]):eu(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?eu(t,[1,r[0],1,1]):eu(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?eu(t,[1,1,1,r[0]]):eu(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?eu(t,[1,r[0],1]):eu(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?eu(t,[1,1,r[0]]):eu(t,[1].concat(r))}else if(e<3)return t;throw new dy(`Unsupported input rank by biasAdd: ${t.rank}`)}function Cb(e,t,n){return hl((()=>(null==n&&(n="channelsLast"),tb(n),Il(e,_b(e.rank,t,n)))))}function Eb(e,t,n,r){return hl((()=>Td(e,t,n,r)))}function $b(e,t,n=!1){return n?e():t()}var Ab=["fanIn","fanOut","fanAvg"],Fb=["normal","uniform","truncatedNormal"];var Rb=class extends zo.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Db=class extends Rb{apply(e,t){return jh(e,t)}};Db.className="Zeros",zo.registerClass(Db);var Mb=class extends Rb{apply(e,t){return qh(e,t)}};Mb.className="Ones",zo.registerClass(Mb);var Ob=class extends Rb{constructor(e){if(super(),"object"!=typeof e)throw new dy(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new dy(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return hl((()=>Tl(Op(this.value),qh(e,t))))}getConfig(){return{value:this.value}}};Ob.className="Constant",zo.registerClass(Ob);var Lb=class extends Rb{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ip(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Lb.className="RandomUniform",zo.registerClass(Lb);var zb=class extends Rb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new cy(`randomNormal does not support dType ${t}.`);return Ib(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};zb.className="RandomNormal",zo.registerClass(zb);var Pb=class extends Rb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new cy(`truncatedNormal does not support dType ${t}.`);return dd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Pb.className="TruncatedNormal",zo.registerClass(Pb);var Bb=class extends Rb{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return hl((()=>{if(2!==e.length||e[0]!==e[1])throw new dy("Identity matrix initializer can only be used for 2D square matrices.");return Tl(this.gain,Zu(e[0]))}))}getConfig(){return{gain:this.gain}}};Bb.className="Identity",zo.registerClass(Bb);var Wb=class extends Rb{constructor(e){if(super(),e.scale<0)throw new dy(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){Ey(Ab,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Ey(Fb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(tb(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=pb(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=pb(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=pb(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new cy(`${this.getClassName()} does not support dType ${t}.`);return dd(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return Ip(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Wb.className="VarianceScaling",zo.registerClass(Wb);var Vb=class extends Wb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wb.className}};Vb.className="GlorotUniform",zo.registerClass(Vb);var Ub=class extends Wb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wb.className}};Ub.className="GlorotNormal",zo.registerClass(Ub);var Gb=class extends Wb{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wb.className}};Gb.className="HeNormal",zo.registerClass(Gb);var Hb=class extends Wb{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wb.className}};Hb.className="HeUniform",zo.registerClass(Hb);var jb=class extends Wb{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wb.className}};jb.className="LeCunNormal",zo.registerClass(jb);var qb=class extends Wb{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wb.className}};qb.className="LeCunNormal",zo.registerClass(qb);var Kb=class extends Rb{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new cy("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return hl((()=>{if(e.length<2)throw new cy("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let t=Ib(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=Pc.gramSchmidt(t);return e[0]>e[1]&&(n=Zi(n)),Tl(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};Kb.className="Orthogonal",zo.registerClass(Kb);var Xb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Yb(e,t={}){return Ny(e,zo.SerializationMap.getMap().classNameMap,t,"initializer")}function Zb(e){return Iy(e)}function Jb(e){if("string"==typeof e){let t=e in Xb?Xb[e]:e;if("GlorotNormal"===t)return new Ub;if("GlorotUniform"===t)return new Vb;if("HeNormal"===t)return new Gb;if("HeUniform"===t)return new Hb;if("LeCunNormal"===t)return new jb;if("LeCunUniform"===t)return new qb;{let e={};return e.className=t,e.config={},Yb(e)}}return e instanceof Rb?e:Yb(e)}function Qb(){return new Db}function ex(){return new Mb}function tx(e){return new Ob(e)}function nx(e){return new Lb(e)}function rx(e){return new zb(e)}function ax(e){return new Pb(e)}function sx(e){return new Bb(e)}function ix(e){return new Wb(e)}function ox(e){return new Vb(e)}function lx(e){return new Ub(e)}function ux(e){return new Gb(e)}function hx(e){return new Hb(e)}function px(e){return new jb(e)}function dx(e){return new qb(e)}function cx(e){return new Kb(e)}var fx={};g(fx,{Layer:()=>Rx,RNN:()=>ik,RNNCell:()=>ok,activation:()=>CI,add:()=>LI,alphaDropout:()=>_S,average:()=>zI,averagePooling1d:()=>qI,averagePooling2d:()=>YI,averagePooling3d:()=>QI,avgPool1d:()=>KI,avgPool2d:()=>ZI,avgPool3d:()=>eS,avgPooling1d:()=>XI,avgPooling2d:()=>JI,avgPooling3d:()=>tS,batchNormalization:()=>GI,bidirectional:()=>xS,concatenate:()=>PI,conv1d:()=>xI,conv2d:()=>vI,conv2dTranspose:()=>wI,conv3d:()=>kI,conv3dTranspose:()=>II,convLstm2d:()=>mS,convLstm2dCell:()=>gS,cropping2D:()=>NI,dense:()=>EI,depthwiseConv2d:()=>_I,dot:()=>UI,dropout:()=>$I,elu:()=>cI,embedding:()=>OI,flatten:()=>FI,gaussianDropout:()=>TS,gaussianNoise:()=>NS,globalAveragePooling1d:()=>nS,globalAveragePooling2d:()=>rS,globalMaxPool1d:()=>wS,globalMaxPool2d:()=>kS,globalMaxPooling1d:()=>aS,globalMaxPooling2d:()=>sS,gru:()=>uS,gruCell:()=>hS,input:()=>ow,inputLayer:()=>dI,layerNormalization:()=>HI,leakyReLU:()=>mI,lstm:()=>pS,lstmCell:()=>dS,masking:()=>CS,maxPool1d:()=>IS,maxPool2d:()=>SS,maxPooling1d:()=>iS,maxPooling2d:()=>oS,maxPooling3d:()=>lS,maximum:()=>BI,minimum:()=>WI,multiply:()=>VI,permute:()=>MI,prelu:()=>gI,reLU:()=>fI,repeatVector:()=>RI,reshape:()=>DI,rnn:()=>yS,separableConv2d:()=>SI,simpleRNN:()=>cS,simpleRNNCell:()=>fS,softmax:()=>yI,spatialDropout1d:()=>AI,stackedRNNCells:()=>bS,thresholdedReLU:()=>bI,timeDistributed:()=>vS,upSampling2d:()=>TI,zeroPadding2d:()=>jI});var mx=0;function gx(){return mx++}var yx={};function bx(e=""){return e in yx||(yx[e]=0),yx[e]+=1,e+yx[e].toString()}function xx(e){return Array.isArray(e)&&Array.isArray(e[0])}function vx(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function wx(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new dy(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function kx(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new dy(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ix(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var Sx="Variable",Nx=class{constructor(e,t="float32",n=Sx,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=gx(),n=null==n?Sx:n,this.originalName=ib(n),this.name=ob(this.originalName),this.trainable_=r,this.constraint=a,this.val=gd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Tx(e){return e.map((e=>e.read()))}function _x(e){e.forEach((e=>{e[0].write(e[1])}))}var Cx=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Ex=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=gx(),null!=s&&(this.originalName=ib(s),this.name=ob(this.originalName)),this.rank=t.length}},$x=0,Ax=class{constructor(e,t){this.callArgs=t,this.id=$x++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Fx=0,Rx=class extends zo.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Fx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=vy(e)+"_"+bx(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new py(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new dy(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return by(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return by(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new hy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new hy(`Layer ${this.name} is not connected, no input to return.`);return by(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new hy(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new hy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return by(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=xy(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=xy(this.inputSpec);if(e.length!==t.length)throw new dy(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new dy(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new dy(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new dy(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new dy(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new dy(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new dy(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=xy(e),r=!0;for(let e of n)if(!(e instanceof Ex)){r=!1;break}let a=!0;for(let e of n)if(e instanceof Ex){a=!1;break}if(r===a)throw new dy("Arguments to apply() must be all SymbolicTensors or all Tensors");return sb(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of xy(e))t.push(n.shape);this.build(by(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=xy(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=by(s),null!=this.activityRegularizer)throw new cy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=xy(e);let t=[];for(let n of e)t.push(n.shape);return by(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new Ex(s,n,this,xy(e),t,this.name,r))):new Ex(s,a,this,xy(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new cy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new hy(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new hy(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new py(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ix(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Tx(e?this.trainableWeights:this.weights)}setWeights(e){hl((()=>{let t=this.weights;if(t.length!==e.length)throw new dy(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=Tx(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!ya.arraysEqual(s.shape,o.shape))throw new dy(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}_x(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new dy(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Jb("zeros"));let l=r.apply(t,n),u=new Nx(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=xy(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=xy(e);t=xy(t),n=xy(n),r=xy(r),a=vx(a),s=vx(s);let l=[],u=[],h=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),h.push(e.tensorIndex);new Ax({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function Dx(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=Dx(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var Mx,Ox=class extends Rx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:bx("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new dy("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new dy("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new dy("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new Ex(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ax({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new dy(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function Lx(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new dy("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Ox({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function zx(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];pl(r)}}function Px(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}Ox.className="InputLayer",zo.registerClass(Ox),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Mx||(Mx={}));var Bx=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Wx=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},Vx=class extends Bx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=hl((()=>Il(this.totals[e],Tl(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:hl((()=>{let n=Tl(Nl(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),dl(t[e])})))}},Ux=class extends Bx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},Gx=class extends Bx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||ef,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ya.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():ya.now();return(...s)=>{let i=null!=n?n():ya.now();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await zx(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await zx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await zx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await zx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await zx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):ya.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await zx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await zx(e),await this.trainEnd(e))}};function Hx(e,t){return null==e&&(e={}),e instanceof Bx?[e]:Array.isArray(e)&&e[0]instanceof Bx?e:xy(e).map((e=>new Gx(e,t)))}var jx=class{constructor(){}static registerCallbackConstructor(e,t){ya.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),jx.checkForDuplicate(t),null==jx.constructors[e]&&(jx.constructors[e]=[]),jx.constructors[e].push(t)}static checkForDuplicate(e){for(let t in jx.constructors)jx.constructors[+t].forEach((t=>{if(t===e)throw new dy("Duplicate callback constructor.")}))}static clear(){jx.constructors={}}static createCallbacks(e){let t=[];for(let n in jx.constructors){let r=+n;e>=r&&t.push(...jx.constructors[r])}return t.map((e=>new e))}};function qx(e,t,n,r,a,s,i,o,l){let u=new Ux,h=[new Vx,...jx.createCallbacks(t)];null!=e&&h.push(...e),h.push(u);let p=new Wx(h);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function Kx(e,t={},n=!1){return Ny(e,zo.SerializationMap.getMap().classNameMap,t,"layer",n)}function Xx(e,t){return hl((()=>{"float32"!==e.dtype&&(e=_i(e,"float32"));let n=Th(Tb(e),t,!0),r=Ju(n.shape,uy()),a=Qp(Gh(n,r));return Nl(e,a)}))}function Yx(e,t){return hl((()=>Hh(Tb(Nh(t,e)),-1)))}function Zx(e,t){return hl((()=>Hh(_l(Nh(t,e)),-1)))}function Jx(e,t){return hl((()=>{let n=Nh(e,t),r=bu(_l(e),uy(),Number.MAX_VALUE),a=_l(Nl(n,r));return Tl(100,Hh(a,-1))}))}function Qx(e,t,n=!1){return hl((()=>{if(n)t=qp(t);else{let e=Th(t,t.shape.length-1,!0);t=Nl(t,e)}return t=bu(t,uy(),1-uy()),wh(Th(Tl(_i(e,"float32"),dh(t)),t.shape.length-1))}))}function ev(e,t,n=!1){return hl((()=>{let r=_i(Qu(function(e){let t=[pb(e.shape)];return eu(e,t)}(e)),"int32"),a=(t=bu(t,uy(),1-uy())).shape;return Qx(eu(Yi(r,a[a.length-1]),a),t,n)}))}function tv(e,t){return hl((()=>{let n;return n=bu(t,uy(),1-uy()),n=dh(Nl(n,Nh(1,n))),Hh(function(e,t){if(!ya.arraysEqual(e.shape,t.shape))throw new dy(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return hl((()=>{let n=_p(t),r=wh(_l(t));return Il(Nh(n,Tl(t,e)),ch(qu(r)))}))}(e,n),-1)}))}function nv(e,t){return hl((()=>{let n=Xx(e,-1),r=Xx(t,-1),a=Tl(n,r);return wh(Th(a,-1))}))}jx.constructors={};var rv={meanSquaredError:Yx,meanAbsoluteError:Zx,meanAbsolutePercentageError:Jx,meanSquaredLogarithmicError:function(e,t){return hl((()=>{let n=bu(t,uy(),Number.MAX_VALUE),r=dh(Il(1,n)),a=bu(e,uy(),Number.MAX_VALUE),s=dh(Il(1,a));return Hh(Tb(Nh(r,s)),-1)}))},squaredHinge:function(e,t){return hl((()=>{let n=Gh(0,Nh(1,Tl(e,t)));return Hh(Tb(n),-1)}))},hinge:function(e,t){return hl((()=>{let n=Gh(0,Nh(1,Tl(e,t)));return Hh(n,-1)}))},categoricalHinge:function(e,t){return hl((()=>{let n=Th(Tl(e,t),-1),r=Sh(Tl(Nh(1,e),t),-1);return Gh(0,Il(1,Nh(r,n)))}))},logcosh:function(e,t){return hl((()=>{let n=Math.log(2),r=Nh(t,e),a=Nh(Il(r,kh(Tl(-2,r))),n);return Hh(a,-1)}))},categoricalCrossentropy:Qx,sparseCategoricalCrossentropy:ev,binaryCrossentropy:tv,kullbackLeiblerDivergence:function(e,t){return hl((()=>{let n=bu(e,uy(),1),r=bu(t,uy(),1);return Th(Tl(e,dh(Nl(n,r))),-1)}))},poisson:function(e,t){return hl((()=>{let n=dh(Il(uy(),t));return Hh(Nh(t,Tl(e,n)),-1)}))},cosineProximity:nv};function av(e){if("string"==typeof e){if(e in rv)return rv[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new dy(t)}return e}function sv(e,t){return hl((()=>{let n=Tl(.5,ap(t)),r=mb(th(t,n),e.dtype);return Hh(Pu(e,r),-1)}))}function iv(e,t){return hl((()=>mb(Pu(Rl(e,-1),Rl(t,-1)),"float32")))}function ov(e,t){return hl((()=>_i(Th(Lh(Pu(e,1),Pu(t,1))),"float32")))}function lv(e,t){return hl((()=>{let n=ov(e,t),r=function(e,t){return hl((()=>_i(Th(Lh(Pu(e,0),Pu(t,1))),"float32")))}(e,t),a=Il(n,r);return _i(Bu(th(a,0),Nl(n,a),0),"float32")}))}function uv(e,t){return hl((()=>{let n=ov(e,t),r=function(e,t){return hl((()=>_i(Th(Lh(Pu(e,1),Pu(t,0))),"float32")))}(e,t),a=Il(n,r);return _i(Bu(th(a,0),Nl(n,a),0),"float32")}))}function hv(e,t){return tv(e,t)}function pv(e,t){return e.rank===t.rank&&(e=td(e,[e.rank-1])),(t=Rl(t,-1)).dtype!==e.dtype&&(t=_i(t,e.dtype)),_i(Pu(e,t),"float32")}var dv=Qx,cv=ev,fv={binaryAccuracy:sv,categoricalAccuracy:iv,precision:lv,categoricalCrossentropy:dv,sparseCategoricalCrossentropy:cv,mse:Yx,MSE:Yx,mae:Zx,MAE:Zx,mape:Jx,MAPE:Jx,cosine:nv};function mv(e){if("string"==typeof e&&e in fv)return fv[e];if("string"!=typeof e&&null!=e)return e;throw new dy(`Unknown metric ${e}`)}function gv(e){if(gy(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(rv))if(rv[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(fv))if(fv[n]===e){t=n;break}return void 0!==t?t:e.name}}function yv(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!bv(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function bv(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!bv(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!bv(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function xv(e,t,n,r=console.log){let a,s=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),vv(i,n,r),r("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?wv(o[e],n,r):kv(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function(e){let t;return t=null!=e.collectedTrainableWeights?Ix(e.collectedTrainableWeights):Ix(e.trainableWeights),t}(e),u=Ix(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function vv(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function wv(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}vv([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function kv(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];vv([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)vv(["","","","",i[e]],t,r)}function Iv(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Sv(e,t){if(null===e)return null;if("string"==typeof e)return wy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Iv(t,a,r)?n.push(r):n.push(Sv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=wy(n);t[e]=Sv(r,e)}}return t}}function Nv(e,t){if(null==e)return null;if("string"==typeof e)return vy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Iv(t,a,r)?n.push(r):n.push(Nv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=vy(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?Nv(r,n):r}return t}}var Tv="3.15.0";var _v=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof _v)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new dy(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return _i(t,e.dtype)}catch(n){throw new dy(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ex){if(null==this.id2Value[e.id])throw new dy(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new dy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ex){if(null==this.id2Value[e.id])throw new dy(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new dy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&pl(this.id2Mask)}},Cv={},Ev={};function $v(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let h,p,d=o.join(",")+"|"+t.names().join(",");if(null==Cv[d]){let e=function(e,t){ya.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=Fv(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=Fv(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Av(r)}}(i,t);h=e.sorted,p=e.recipientCounts,Cv[d]=h,Ev[d]=p}h=Cv[d],p={},a||Object.assign(p,Ev[d]);let c=new _v(t);for(let e=0;e<h.length;++e){if(null!=r){let e=ll().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=h[e],i=s.sourceLayer;if(i instanceof Ox)continue;let u=[],d=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),d.push(r),null!=r&&(m=!0),a||(p[e.name]--,0===p[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=d[0]);let g=xy(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,d));let b=Rv(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||pl(f)}return c.disposeMasks(),s?l:l[0]}function Av(e){let t={};for(let n in e)t[n]=e[n].size;return t}function Fv(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function Rv(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var Dv=class extends Rx{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=bx(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],_y(this.inputs).length!==this.inputs.length)throw new dy(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);_y(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;gy(0===n,"input layer has >1 nodes"),gy(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof Ox))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new py(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Dv.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let h=u.inboundLayers.length;for(let e=0;e<h;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let h=i.slice().reverse();for(let e of h){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let p={};for(let e in t){let r=t[e];r in p||(p[r]=[]),p[r].push(n[e])}let d={};for(let e in r){let t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let c=Object.keys(d).map((e=>parseInt(e,10))).sort(Ty);this.layers=[];for(let e of c){let t=d[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof Dv&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,c=Object.keys(p).map((e=>parseInt(e,10))).sort(Ty);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of p[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new py(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=p;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new py(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ax({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new dy("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new dy(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new dy(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new dy(`${e.length} of ${r} weights are not set: ${e}`)}_x(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Tv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Nv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return hl((()=>{e=xy(e);let n=new _v;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return $v(this.outputs,n,t)}))}computeMask(e,t){return hl((()=>{let n;return e=xy(e),n=null==t?my(null,e.length):xy(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=vx(e);if(t.length!==this.inputLayers.length)throw new dy(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ty);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=vx(t.computeOutputShape(by(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];gy(t in n),a.push(n[t])}return by(a)}runInternalGraph(e,t){null==t&&(t=my(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ty);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=xy(t.call(e,u)),l=xy(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=xy(t.call(r,u)),l=xy(t.computeMask(r,i));if(t.activityRegularizer)throw new cy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){gy(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof Dv?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=Dv.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new dy(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new dy("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new dy(`No such layer: ${e}`)}calculateLosses(){return hl((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=Dv.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=Dv.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[Dv.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Dv.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Dv.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let h=a[o];if(h.inboundNodes.length<=l)return void i(e,t);let p=h.inboundNodes[l];r.push(p.outputTensors[u])}r.length>0&&e.apply(by(r),n)}function l(e){let n=e.name,s=Kx(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new dy(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,h=t.layers;for(let e of h)l(e);for(;!Cy(s);)for(let e of h){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let p=[],d=[],c=t.inputLayers;for(let e of c){let t=e[0],n=e[1],r=e[2];gy(t in a);let s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}let f=t.outputLayers;for(let e of f){let t=e[0],n=e[1],r=e[2];gy(t in a);let s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new dy("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){hl((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Mv(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Ov(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=hl((()=>{if(1===e.shape.length)return Ci(e);if(2===e.shape.length){if(e.shape[1]>1)return Rl(e,1);if(1===e.shape[1])return eu(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());pl(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),id(a,"float32")}return null}function Lv(e,t){return Tl(e,t)}function zv(e,t){let n,r,a=t;n=a.xs,r=a.ys,ya.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=Pv("input",e.inputNames,n),i=Pv("output",e.outputNames,r),o=s[0].shape[0];ya.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ya.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)ya.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ya.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Pv(e,t,n){if(n instanceof Xa)return[n];if(Array.isArray(n))return ya.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new dy(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function Bv(e,t,n){let r=null!=n.batchesPerEpoch;if(ya.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ya.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ya.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ya.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ya.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(Wv(n.validationData))ya.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new cy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let h=Hx(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=qx(h,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let h=0,p=0;for(r||(m=await t.iterator());!r||h<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=zv(e,t.value),s={};s.batch=p,s.size=r[0].shape[0],await d.onBatchBegin(p,s);let i=[];if(null!=n.classWeight){let t=Mv(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Ov(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);pl(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,dl(n)}await d.onBatchEnd(p,s),Px(s),p++,h++}if(r?h>=n.batchesPerEpoch:t.done){if(i){let t;t=Wv(n.validationData)?xy(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):xy(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Wv(e){return"function"==typeof e.iterator}function Vv(e){ya.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Uv(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>yb(e,t,n-t))):yb(e,t,n-t)}function Gv(e,t){return hl((()=>null==e?null:Array.isArray(e)?e.map((e=>Gv(e,t))):Nb(e,"int32"===t.dtype?t:_i(t,"int32"))))}function Hv(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function jv(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,h,p,d;e.isTraining=!0;try{let c=null==r.batchSize?32:r.batchSize;Vv(c);let f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,c);a=m[0],s=m[1],d=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new cy("validationData including sample weights is not supported yet."):new dy(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];let t=!0,n=await e.standardizeUserData(l,u,null,null,t,c);h=n[0],p=n[1],g=h.concat(p)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;let e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];h=Uv(a,e,t),i=a,a=Uv(a,0,e),p=Uv(s,e,t),o=s,s=Uv(s,0,e),g=h.concat(p)}else null!=r.validationSteps&&(y=!0);let b=a.concat(s).concat(d);e.checkTrainableWeightsConsistency();let x,v,w=e.makeTrainFunction(),k=e.getDedupedMetricsNames();y?(e.makeTestFunction(),x=e.testFunction,v=k.slice().concat(k.map((e=>"val_"+e)))):(x=null,g=[],v=k.slice());let I=Hx(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,l,u,h,p,d,c,f){null==a&&(a=32),null==s&&(s=1),null==h&&(h=!0),null==d&&(d=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==c))throw new dy("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g,y=e.checkNumSamples(n,a,c,"steps_per_epoch");null!=y&&(g=fb(0,y)),null==i&&(i=1);let{callbackList:b,history:x}=qx(o,i,s,d,y,c,a,m,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);let s={};if(null!=c)throw new cy("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new cy("batch shuffling is not implemneted yet");h&&ya.shuffle(g);let i=id(g),o=Hv(y,a);for(let h=0;h<o.length;++h){let p={};if(await b.onBatchBegin(h,p),hl((()=>{let d=o[h][0],c=o[h][1],f=yb(i,d,c-d);p.batch=h,p.size=c-d;let g=Gv(n,f),y=t(g);for(let e=0;e<r.length;++e){let t=r[e],n=y[e];p[t]=n,dl(n)}if(h===o.length-1&&m){let t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){let n=r[e],a=t[e];dl(a),s["val_"+n]=a}}})),await b.onBatchEnd(h,p),Px(p),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,w,b,k,c,r.epochs,r.verbose,I,x,g,r.shuffle,v,r.initialEpoch,null,null)}finally{e.isTraining=!1,Kv(a,t),Kv(s,n),Kv(i,t),Kv(o,n),Kv(h,l),Kv(p,u),null!=d&&pl(d)}}function qv(e){let t=[];e instanceof Xa&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(gb(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Kv(e,t){if(null==e)return;let n=[];if(t instanceof Xa)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof Xa)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Xv(e){return Array.isArray(e)}function Yv(e){return!function(e){return e instanceof Xa}(e)&&!Xv(e)}function Zv(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Xv(e)&&e.length>0)t=!0;else if(Yv(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new dy(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Yv(e)){s=[];for(let n of t){if(null==e[n])throw new dy(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Xv(e)){if(e.length!==t.length)throw new dy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new dy(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=qv(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new dy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;let s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new dy(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Jv(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new dy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new dy(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new dy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new dy(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var Qv=class extends Dv{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new dy("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");xv(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>Jc.adagrad(.01),Adadelta:()=>Jc.adadelta(1,.95,uy()),Adam:()=>Jc.adam(.001,.9,.999,uy()),Adamax:()=>Jc.adamax(.002,.9,.999,uy(),0),RMSProp:()=>Jc.rmsprop(.001,.9,0,uy()),SGD:()=>Jc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new dy(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Uc))throw new dy("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new dy(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>av(e)))}else{let n=av(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new dy(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(av(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],sb("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};sb("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===tv?-1!==["accuracy","acc"].indexOf(i)?r=sv:-1!==["crossentropy","ce"].indexOf(i)&&(r=hv):this.lossFunctions[e]===ev?-1!==["accuracy","acc"].indexOf(i)?r=pv:-1!==["crossentropy","ce"].indexOf(i)&&(r=cv):-1!==["accuracy","acc"].indexOf(i)?r=iv:-1!==["crossentropy","ce"].indexOf(i)&&(r=dv),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=mv(i),n=""+gv(i);let t;sb(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;Vv(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let e=a[0].concat(a[1]);this.makeTestFunction();let t=this.testFunction;return by(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Kv(a[0],e),Kv(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new cy("Verbose mode is not implemented yet.");ya.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=hl((()=>{if(t.value){let{xs:n,ys:r}=zv(e,t.value),i=n.concat(r),u=hl((()=>a(i)));if(pl(i),0===l)for(let e=0;e<u.length;++e)s.push(Op(0));let h=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=hl((()=>Il(s[e],Tl(h,t)))),l>0&&pl(n)}pl(u),o+=h,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=Nl(s[e],o),pl(t)}return by(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new dy(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new dy(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new dy("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new _v;if(e instanceof Xa&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new dy(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new dy(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=$v(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=my(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new dy(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return hl((()=>{let r=this.checkNumSamples(e);if(n)throw new cy("Verbose predictLoop() is not implemented yet.");let a=Hv(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)hl((()=>{let n=a[t][0],r=a[t][1],s=Uv(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new _v(i);return $v(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return by(s.map((e=>ru(e,0))))}))}predict(e,t={}){let n=qv(e);Jv(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return Vv(e),this.predictLoop(n,e)}finally{Kv(n,e)}}predictOnBatch(e){Jv(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new py("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===ev?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t){let n=_y(e.map((e=>e.shape[0])));n.sort();let r=_y(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new dy(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new dy(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!ya.arraysEqual(n,r))throw new dy(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Zv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Zv(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){let r=[Yx,tv,Qx];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Qx&&1===s.shape[s.shape.length-1])throw new dy(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new dy(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new dy(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=Mv(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Ov(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return hl((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new cy("Verbose mode is not implemented yet.");if(null!=a)throw new cy("steps mode in testLoop() is not implemented yet");{let r=Hv(s,n),a=id(fb(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=yb(a,s,o-s),u=Gv(t,l),h=e(u);if(0===n)for(let e=0;e<h.length;++e)i.push(Op(0));for(let e=0;e<h.length;++e){let t=h[e];i[e]=Il(i[e],Tl(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Nl(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;yy(e,r)>1&&(a+=`_${yy(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new _v(e),l=$v(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=this.lossFunctions[e](r[e],l[e]);null!=a[e]&&(n=Lv(n,a[e]));let s=Hh(n);t.push(s),i=0===e?n:Il(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Hh(t(r[a],l[a]))}dl(n),s.push(n)}return i=Hh(i),this.calculateLosses().forEach((e=>{i=Il(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>hl((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new _v(s),o=$v(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=Hh(r(a[e],o[e]));t=0===e?s:Il(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Hh(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t,n={}){return jv(this,e,t,n)}async fitDataset(e,t){return Bv(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return pl(s),Kv(n[0],e),Kv(n[1],t),by(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=ll().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ll().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=vy(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>vy(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=vy(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[vy(gv(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>vy(gv(e))));{let e={};for(let t in this.metrics)e[t]=vy(gv(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=Kx(Sv(e.optimizer_config));if("string"==typeof e.loss)t=wy(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>wy(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=wy(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>wy(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=wy(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=$i.getSaveHandlers(e);if(0===t.length)throw new dy(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new dy(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new dy("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await $i.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Tv}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await $i.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=$i.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(yv(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){yv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Qv.className="Model",zo.registerClass(Qv);var ew=class extends Qv{};async function tw(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=Kx(Sv(n),t);if(null!=e.weightsManifest){let t=await $i.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),pl(t)}return r}async function nw(e,t){if(null==t&&(t={}),"string"==typeof e){let n=$i.getLoadHandlers(e,t);if(0===n.length)n.push($i.browserHTTPRequest(e,t));else if(n.length>1)throw new dy(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new dy("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Kx(Sv(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new dy("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=$i.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),pl(e),pl(t.map((e=>e.tensor)))}return o}(e,void 0,t)}ew.className="Functional",zo.registerClass(ew);var rw=class extends Qv{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:bx("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new dy(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof rw||e instanceof Qv;if(n){if(t=e,1!==t.outputs.length)throw new dy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new dy("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new dy("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=Lx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new dy(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new dy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Dx(this.outputs[0])}this.inboundNodes=[],new Ax({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:my(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(kx(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Qv({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new py("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new py("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new py("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new py("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new dy("Legacy serialization format not supported yet.");a=t}else ya.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof rw))throw new cy(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=Kx(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new dy("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new dy("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function aw(e){return new Qv(e)}function sw(e){return new rw(e)}function iw(e,t){return null==t&&(t={}),nw(e,t)}function ow(e){return Lx(e)}function lw(e,t){jx.registerCallbackConstructor(e,t)}rw.className="Sequential",zo.registerClass(rw);var uw=class extends zo.Serializable{getConfig(){return{}}},hw=class extends uw{apply(e,t=1){return function(e,t=1){if(1!==t)throw new cy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Hu(e)}(e,t)}};hw.className="elu",zo.registerClass(hw);var pw=class extends uw{apply(e){return Lp(e)}};pw.className="selu",zo.registerClass(pw);var dw=class extends uw{apply(e){return _p(e)}};dw.className="relu",zo.registerClass(dw);var cw=class extends uw{apply(e){return hl((()=>Yh(6,_p(e))))}};cw.className="relu6",zo.registerClass(cw);var fw=class extends uw{apply(e){return e}};fw.className="linear",zo.registerClass(fw);var mw=class extends uw{apply(e){return au(e)}};mw.className="sigmoid",zo.registerClass(mw);var gw=class extends uw{apply(e){return function(e){return hl((()=>{let t=Il(.5,Tl(.2,e));return bu(t,0,1)}))}(e)}};gw.className="hardSigmoid",zo.registerClass(gw);var yw=class extends uw{apply(e){return kh(e)}};yw.className="softplus",zo.registerClass(yw);var bw=class extends uw{apply(e){return function(e){return hl((()=>Nl(e,Il(_l(e),1))))}(e)}};bw.className="softsign",zo.registerClass(bw);var xw=class extends uw{apply(e){return iu(e)}};xw.className="tanh",zo.registerClass(xw);var vw=class extends uw{apply(e,t=-1){return qp(e,t)}};vw.className="softmax",zo.registerClass(vw);var ww=class extends uw{apply(e,t=-1){return _h(e,t)}};ww.className="logSoftmax",zo.registerClass(ww);var kw=class extends uw{apply(e,t=1){return hl((()=>Tl(au(Tl(e,t)),e)))}};kw.className="swish",zo.registerClass(kw);var Iw=class extends uw{apply(e){return hl((()=>Tl(e,iu(kh(e)))))}};function Sw(e){return e.getClassName()}function Nw(e,t={}){return Ny(e,zo.SerializationMap.getMap().classNameMap,t,"activation")}function Tw(e){if(null==e){let e={className:"linear",config:{}};return Nw(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},Nw(t)}return e instanceof uw?e:Nw(e)}function _w(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Iw.className="mish",zo.registerClass(Iw);var Cw=class extends zo.Serializable{},Ew=class extends Cw{constructor(e){super(),_w(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return hl((()=>{let t=jh([1]);return this.hasL1&&(t=Il(t,Th(Tl(this.l1,_l(e))))),this.hasL2&&(t=Il(t,Th(Tl(this.l2,Tb(e))))),eu(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Ew.className="L1L2",zo.registerClass(Ew);var $w={l1l2:"L1L2"};function Aw(e){return Iy(e)}function Fw(e,t={}){return Ny(e,zo.SerializationMap.getMap().classNameMap,t,"regularizer")}function Rw(e){if(null==e)return null;if("string"==typeof e){return Fw({className:e in $w?$w[e]:e,config:{}})}return e instanceof Cw?e:Fw(e)}var Dw=class extends Rx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=wx(e);let n=_p(e);return null!=this.maxValue&&(n=bu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Dw.className="ReLU",zo.registerClass(Dw);var Mw=class extends Rx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=wx(e);return oh(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Mw.className="LeakyReLU",zo.registerClass(Mw);var Ow=class extends Rx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Jb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Rw(e.alphaRegularizer),this.alphaConstraint=Uy(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new dy(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=kx(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Cx({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=wx(e),fp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Zb(this.alphaInitializer),alphaRegularizer:Aw(this.alphaRegularizer),alphaConstraint:Wy(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Ow.className="PReLU",zo.registerClass(Ow);var Lw=class extends Rx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new cy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=wx(e);return Hu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Lw.className="ELU",zo.registerClass(Lw);var zw=class extends Rx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=wx(e);return Tl(n,_i(th(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};zw.className="ThresholdedReLU",zo.registerClass(zw);var Pw=class extends Rx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new vw).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=wx(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Bw(e,t,n){if("number"==typeof e)return my(e,t);if(e.length!==t)throw new dy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!hb(a))throw new dy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Ww(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Vw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+cb([n-t,0]);else{if("same"!==r)throw new dy(`Unsupport padding mode: ${r}.`);e*=t}return e}function Uw(e,t){return hl((()=>(tb(t),"channelsFirst"===t?Zi(e,[0,2,3,1]):e)))}function Gw(e,t){return hl((()=>(tb(t),"channelsFirst"===t?Zi(e,[0,2,3,4,1]):e)))}function Hw(e,t,n,r=[1,1],a="valid",s,i,o=null){return hl((()=>{if(null==s&&(s="channelsLast"),tb(s),3!==e.rank&&4!==e.rank)throw new dy(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new dy(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Uw(e,s);if("causal"===a)throw new cy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=$d.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Zi(l,[0,3,1,2])),l}))}Pw.className="Softmax",zo.registerClass(Pw);var jw=class extends Rx{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",jw.verifyArgs(t),this.rank=e,Ay(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new cy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Bw(t.kernelSize,e,"kernelSize"),this.strides=Bw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,nb(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,tb(this.dataFormat),this.activation=Tw(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Jb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Uy(t.biasConstraint),this.biasRegularizer=Rw(t.biasRegularizer),this.activityRegularizer=Rw(t.activityRegularizer),this.dilationRate=Bw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new dy(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new dy(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new dy(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(gy("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!$y(e.kernelSize,"number",1,3))throw new dy(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Sw(this.activation),useBias:this.useBias,biasInitializer:Zb(this.biasInitializer),biasRegularizer:Aw(this.biasRegularizer),activityRegularizer:Aw(this.activityRegularizer),biasConstraint:Wy(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},qw=class extends jw{constructor(e,t){super(e,t),this.kernel=null,qw.verifyArgs(t),this.filters=t.filters,Ay(this.filters,"filters"),this.kernelInitializer=Jb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Uy(t.kernelConstraint),this.kernelRegularizer=Rw(t.kernelRegularizer)}build(e){e=kx(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new dy(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return hl((()=>{e=wx(e);let t,n=null==this.bias?null:this.bias.read(),r=Ry(this.activation.getClassName());if(null!=r&&2===this.rank)t=Hw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return hl((()=>{if(null==s&&(s="channelsLast"),tb(s),3!==e.shape.length)throw new dy(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new dy(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new dy(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Zi(e,[0,2,1])),"causal"===a)throw new cy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Su(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Cb(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Hw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new cy("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return hl((()=>{if(null==s&&(s="channelsLast"),tb(s),4!==e.rank&&5!==e.rank)throw new dy(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new dy(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Gw(e,s);if("causal"===a)throw new cy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=_u(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Cb(o,n)),"channelsFirst"===s&&(o=Zi(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=kx(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=Ww(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Zb(this.kernelInitializer),kernelRegularizer:Aw(this.kernelRegularizer),kernelConstraint:Wy(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new dy(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Kw=class extends qw{constructor(e){super(2,e),Kw.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!$y(e.kernelSize,"number",1,2))throw new dy(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Kw.className="Conv2D",zo.registerClass(Kw);var Xw=class extends qw{constructor(e){super(3,e),Xw.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new dy(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Xw.className="Conv3D",zo.registerClass(Xw);var Yw=class extends Kw{constructor(e){if(super(e),this.inputSpec=[new Cx({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new dy(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=kx(e)).length)throw new dy("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new dy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Cx({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return hl((()=>{let t=wx(e);if(4!==t.shape.length)throw new dy(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=[s,Vw(i,h,l,this.padding),Vw(o,p,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Zi(t,[0,2,3,1]));let c=Tu(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=Zi(c,[0,3,1,2])),null!=this.bias&&(c=Cb(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=kx(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=Vw(a[n],o,s,this.padding),a[r]=Vw(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Yw.className="Conv2DTranspose",zo.registerClass(Yw);var Zw=class extends Xw{constructor(e){if(super(e),this.inputSpec=[new Cx({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new dy(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=kx(e)).length)throw new dy("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new dy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Cx({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return hl((()=>{let t=wx(e);if(5!==t.shape.length)throw new dy(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],h=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,Vw(o,c,h,this.padding),Vw(l,f,p,this.padding),Vw(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Zi(t,[0,2,3,4,1]));let y=Eu(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Zi(y,[0,4,1,2,3])),null!==this.bias&&(y=Cb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,r,a,s=(e=kx(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],p=this.strides[2];return s[t]=this.filters,s[n]=Vw(s[n],u,i,this.padding),s[r]=Vw(s[r],h,o,this.padding),s[a]=Vw(s[a],p,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Zw.className="Conv3DTranspose",zo.registerClass(Zw);var Jw=class extends qw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new dy("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new dy("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new dy(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Jb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Rw(t.depthwiseRegularizer),this.depthwiseConstraint=Uy(t.depthwiseConstraint),this.pointwiseInitializer=Jb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Rw(t.pointwiseRegularizer),this.pointwiseConstraint=Uy(t.pointwiseConstraint)}build(e){if((e=kx(e)).length<this.rank+2)throw new dy(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new dy(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Cx({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return hl((()=>{let t;if(e=wx(e),1===this.rank)throw new cy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Zi(e,[0,2,3,1])),t=zp(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Cb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Zi(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Zb(this.depthwiseInitializer),e.pointwiseInitializer=Zb(this.pointwiseInitializer),e.depthwiseRegularizer=Aw(this.depthwiseRegularizer),e.pointwiseRegularizer=Aw(this.pointwiseRegularizer),e.depthwiseConstraint=Wy(this.depthwiseConstraint),e.pointwiseConstraint=Wy(this.pointwiseConstraint),e}};Jw.className="SeparableConv";var Qw=class extends Jw{constructor(e){super(2,e)}};Qw.className="SeparableConv2D",zo.registerClass(Qw);var ek=class extends qw{constructor(e){super(1,e),ek.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!$y(e.kernelSize,"number",1,1))throw new dy(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};ek.className="Conv1D",zo.registerClass(ek);var tk=class extends Rx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return hl((()=>{if(e=wx(e),"channelsLast"===this.dataFormat){let t=xb(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return xb(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=xb(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return xb(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};tk.className="Cropping2D",zo.registerClass(tk);var nk=class extends Rx{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tb(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){Ey(Yy,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return hl((()=>{let t=wx(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=Zi(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?zc.resizeNearestNeighbor(t,[e,r]):zc.resizeBilinear(t,[e,r]);return Zi(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?zc.resizeNearestNeighbor(t,[e,r]):zc.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};nk.className="UpSampling2D",zo.registerClass(nk);var rk=class extends jw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Jb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Uy(e.depthwiseConstraint),this.depthwiseRegularizer=Rw(e.depthwiseRegularizer)}build(e){if((e=kx(e)).length<4)throw new dy(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new dy(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hl((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return hl((()=>{null==a&&(a="channelsLast"),tb(a);let i=Uw(e,a);if(4!==e.rank)throw new dy(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new dy(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Ou(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Zi(i,[0,3,1,2])),i}))}(e=wx(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Cb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=kx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Ww(t,this.kernelSize[0],this.padding,this.strides[0]),s=Ww(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Zb(this.depthwiseInitializer),e.depthwiseRegularizer=Aw(this.depthwiseRegularizer),e.depthwiseConstraint=Wy(this.depthwiseRegularizer),e}};function ak(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new dy("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function sk(e,t,n,r=!1,a,s,i=!1,o=!1){return hl((()=>{let l=t.shape.length;if(l<3)throw new dy(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(fb(2,l));if(t=Zi(t,u),null!=s)throw new cy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=_i(_i(a,"bool"),"float32")).rank===l-1&&(a=Ku(a,-1)),a=Zi(a,u)),r&&(t=Ep(t,0),null!=a&&(a=Ep(a,0)));let h,p,d,c=[],f=n,m=t.shape[0],g=md(t);null!=a&&(p=md(a));for(let t=0;t<m;++t){let n=g[t],r=hl((()=>e(n,f)));if(null==a)h=r[0],f=r[1];else{let e=hl((()=>{let e=p[t],n=Nh(ap(e),e);return{output:Il(Tl(r[0],e),Tl(f[0],n)),newStates:f.map(((t,a)=>Il(Tl(r[1][a],e),Tl(t,n))))}}));h=e.output,f=e.newStates}o&&c.push(h)}return o&&(d=nd(c,1)),[h,d,f]}))}rk.className="DepthwiseConv2D",zo.registerClass(rk);var ik=class extends Rx{constructor(e){let t;if(super(e),null==e.cell)throw new dy("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new fk({cells:e.cell}):e.cell,null==t.stateSize)throw new dy("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Cx({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return fb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){xx(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return hl((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new cy("Constants support is not implemented in RNN yet.");xx(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Cx({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ya.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new dy(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Cx({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){hl((()=>{if(!this.stateful)throw new hy("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new dy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>jh([n,e]))):this.states_=[jh([n,this.cell.stateSize])];else if(null==e)pl(this.states_),null!=this.keptStates&&(pl(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>jh([n,e]))):this.states_[0]=jh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new dy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):pl(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!ya.arraysEqual(r.shape,s))throw new dy(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>dl(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=ak(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new Cx({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Ex){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return hl((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=wx(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new dy(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=sk(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(h):p}))}getInitialState(e){return hl((()=>{let t=jh(e.shape);return t=Th(t,[1,2]),t=gb(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?kb(t,[1,e]):t)):this.cell.stateSize>1?[kb(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===ik.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let r=Kx(t.cell,n);return new e(Object.assign(t,{cell:r}))}};ik.className="RNN",zo.registerClass(ik);var ok=class extends Rx{},lk=class extends ok{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ay(this.units,"units"),this.activation=Tw(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Rw(e.kernelRegularizer),this.recurrentRegularizer=Rw(e.recurrentRegularizer),this.biasRegularizer=Rw(e.biasRegularizer),this.kernelConstraint=Uy(e.kernelConstraint),this.recurrentConstraint=Uy(e.recurrentConstraint),this.biasConstraint=Uy(e.biasConstraint),this.dropout=db([1,cb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=db([1,cb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=kx(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hl((()=>{if(2!==e.length)throw new dy(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mk({ones:()=>ap(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mk({ones:()=>ap(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=Sb(null!=s?Tl(e,s):e,this.kernel.read()),null!=this.bias&&(a=Cb(a,this.bias.read())),null!=i&&(n=Tl(n,i));let o=Il(a,Sb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Sw(this.activation),useBias:this.useBias,kernelInitializer:Zb(this.kernelInitializer),recurrentInitializer:Zb(this.recurrentInitializer),biasInitializer:Zb(this.biasInitializer),kernelRegularizer:Aw(this.kernelRegularizer),recurrentRegularizer:Aw(this.recurrentRegularizer),biasRegularizer:Aw(this.biasRegularizer),activityRegularizer:Aw(this.activityRegularizer),kernelConstraint:Wy(this.kernelConstraint),recurrentConstraint:Wy(this.recurrentConstraint),biasConstraint:Wy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};lk.className="SimpleRNNCell",zo.registerClass(lk);var uk=class extends ik{constructor(e){e.cell=new lk(e),super(e)}call(e,t){return hl((()=>{null!=this.cell.dropoutMask&&(pl(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(pl(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};uk.className="SimpleRNN",zo.registerClass(uk);var hk=class extends ok{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new dy("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ay(this.units,"units"),this.activation=Tw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Tw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Rw(e.kernelRegularizer),this.recurrentRegularizer=Rw(e.recurrentRegularizer),this.biasRegularizer=Rw(e.biasRegularizer),this.kernelConstraint=Uy(e.kernelConstraint),this.recurrentConstraint=Uy(e.recurrentConstraint),this.biasConstraint=Uy(e.biasConstraint),this.dropout=db([1,cb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=db([1,cb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=kx(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hl((()=>{if(2!==e.length)throw new dy(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mk({ones:()=>ap(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mk({ones:()=>ap(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Tl(e,o[0]));let u=Sb(e,this.kernel.read());this.useBias&&(u=Cb(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Tl(r,l[0]));let h=this.recurrentKernel.read(),[p,d]=Zp(h,[2*this.units,this.units],h.rank-1),c=Sb(r,p),[f,m,g]=Zp(u,3,u.rank-1),[y,b]=Zp(c,2,c.rank-1);a=this.recurrentActivation.apply(Il(f,y)),s=this.recurrentActivation.apply(Il(m,b));let x=Sb(Tl(s,r),d);i=this.activation.apply(Il(g,x));let v=Il(Tl(a,r),Tl(Il(1,wh(a)),i));return[v,v]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Sw(this.activation),recurrentActivation:Sw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Zb(this.kernelInitializer),recurrentInitializer:Zb(this.recurrentInitializer),biasInitializer:Zb(this.biasInitializer),kernelRegularizer:Aw(this.kernelRegularizer),recurrentRegularizer:Aw(this.recurrentRegularizer),biasRegularizer:Aw(this.biasRegularizer),activityRegularizer:Aw(this.activityRegularizer),kernelConstraint:Wy(this.kernelConstraint),recurrentConstraint:Wy(this.recurrentConstraint),biasConstraint:Wy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};hk.className="GRUCell",zo.registerClass(hk);var pk=class extends ik{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new hk(e),super(e)}call(e,t){return hl((()=>{null!=this.cell.dropoutMask&&(pl(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(pl(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};pk.className="GRU",zo.registerClass(pk);var dk=class extends ok{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ay(this.units,"units"),this.activation=Tw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Tw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Rw(e.kernelRegularizer),this.recurrentRegularizer=Rw(e.recurrentRegularizer),this.biasRegularizer=Rw(e.biasRegularizer),this.kernelConstraint=Uy(e.kernelConstraint),this.recurrentConstraint=Uy(e.recurrentConstraint),this.biasConstraint=Uy(e.biasConstraint),this.dropout=db([1,cb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=db([1,cb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=kx(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends Rb{apply(t,n){let a=e.apply([r]),s=(new Mb).apply([r]),i=e.apply([2*r]);return wb(wb(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return hl((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new dy(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mk({ones:()=>ap(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mk({ones:()=>ap(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,h=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Tl(e,u[0]));let p=Sb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Tl(r,h[0])),p=Il(p,Sb(r,this.recurrentKernel.read())),this.useBias&&(p=Cb(p,this.bias.read()));let[d,c,f,m]=Zp(p,4,p.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=Il(Tl(i,a),Tl(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=Tl(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Sw(this.activation),recurrentActivation:Sw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Zb(this.kernelInitializer),recurrentInitializer:Zb(this.recurrentInitializer),biasInitializer:Zb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Aw(this.kernelRegularizer),recurrentRegularizer:Aw(this.recurrentRegularizer),biasRegularizer:Aw(this.biasRegularizer),activityRegularizer:Aw(this.activityRegularizer),kernelConstraint:Wy(this.kernelConstraint),recurrentConstraint:Wy(this.recurrentConstraint),biasConstraint:Wy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};dk.className="LSTMCell",zo.registerClass(dk);var ck=class extends ik{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new dk(e),super(e)}call(e,t){return hl((()=>{null!=this.cell.dropoutMask&&(pl(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(pl(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};ck.className="LSTM",zo.registerClass(ck);var fk=class extends ok{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return hl((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;xx(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{sb(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(Kx(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Tx(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}_x(t)}};function mk(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):Eb(t(),n),o=()=>$b(i,t,r);return!a||a<=1?dl(o().clone()):Array(a).fill(void 0).map(o).map((e=>dl(e.clone())))}fk.className="StackedRNNCells",zo.registerClass(fk);var gk=class extends ik{constructor(e){if(e.unroll)throw new cy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new cy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Cx({ndim:5})]}call(e,t){return hl((()=>{if(null!=this.cell.dropoutMask&&(pl(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(pl(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new dy("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return hl((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=jh([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){hl((()=>{if(!this.stateful)throw new hy("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new dy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>jh(a))):this.states_=[jh(a)];else if(null==e)pl(this.states_),null!=this.keptStates&&(pl(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>jh(a))):this.states_[0]=jh(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new dy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):pl(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!ya.arraysEqual(n.shape,r))throw new dy(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>dl(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],h=Ww(l,r[0],a,s[0],i[0]),p=Ww(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,h,p]:[h,p,n]]}};gk.className="ConvRNN2D";var yk=class extends dk{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Ay(this.filters,"filters"),this.kernelSize=Bw(n,2,"kernelSize"),this.kernelSize.forEach((e=>Ay(e,"kernelSize"))),this.strides=Bw(r||1,2,"strides"),this.strides.forEach((e=>Ay(e,"strides"))),this.padding=a||"valid",nb(this.padding),this.dataFormat=s||"channelsLast",tb(this.dataFormat),this.dilationRate=Bw(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Ay(e,"dilationRate")))}build(e){var t;e=kx(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new dy(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends Rb{apply(e,t){return vb([n.apply([r]),qh([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return hl((()=>{if(3!==e.length)throw new dy(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mk({ones:()=>ap(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Tl(t[n],e):e,l=o(r,i,0),u=o(r,i,1),h=o(r,i,2),p=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mk({ones:()=>ap(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,c=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3),[y,b,x,v]=Zp(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?Zp(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),h=this.inputConv(h,x,I,this.padding),p=this.inputConv(p,v,S,this.padding);let[N,T,_,C]=Zp(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,_),g=this.recurrentConv(g,C);let E=this.recurrentActivation.apply(Il(l,c)),$=this.recurrentActivation.apply(Il(u,f)),A=Il(Tl($,s),Tl(E,this.activation.apply(Il(h,m)))),F=Tl(this.recurrentActivation.apply(Il(p,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){let a=Iu(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Cb(a,n,this.dataFormat):a}recurrentConv(e,t){return Iu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};yk.className="ConvLSTM2DCell",zo.registerClass(yk);var bk=class extends gk{constructor(e){let t=new yk(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};bk.className="ConvLSTM2D",zo.registerClass(bk);var xk=class extends Rx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=wx(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return $b((()=>Eb(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};xk.className="Dropout",zo.registerClass(xk);var vk=class extends xk{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};vk.className="SpatialDropout1D",zo.registerClass(vk);var wk=class extends Rx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ay(this.units,"units"),this.activation=Tw(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Uy(e.kernelConstraint),this.biasConstraint=Uy(e.biasConstraint),this.kernelRegularizer=Rw(e.kernelRegularizer),this.biasRegularizer=Rw(e.biasRegularizer),this.activityRegularizer=Rw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=kx(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=kx(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n,r=wx(e),a=Ry(this.activation.getClassName());return null!=a?n=Sb(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=Sb(r,this.kernel.read()),null!=this.bias&&(n=Cb(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:Sw(this.activation),useBias:this.useBias,kernelInitializer:Zb(this.kernelInitializer),biasInitializer:Zb(this.biasInitializer),kernelRegularizer:Aw(this.kernelRegularizer),biasRegularizer:Aw(this.biasRegularizer),activityRegularizer:Aw(this.activityRegularizer),kernelConstraint:Wy(this.kernelConstraint),biasConstraint:Wy(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};wk.className="Dense",zo.registerClass(wk);var kk=class extends Rx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=kx(e);for(let t of e.slice(1))if(null==t)throw new dy(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],pb(e,1)]}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=wx(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Zi(n,e)}return function(e){if(e.rank<=1)throw new dy(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],pb(e.shape,1)];return eu(e,t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};kk.className="Flatten",zo.registerClass(kk);var Ik=class extends Rx{constructor(e){super(e),this.supportsMasking=!0,this.activation=Tw(e.activation)}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=wx(e);return this.activation.apply(n)}))}getConfig(){let e={activation:Sw(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Ik.className="Activation",zo.registerClass(Ik);var Sk=class extends Rx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return hl((()=>function(e,t){return hl((()=>{if(2!==e.shape.length)throw new dy(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return kb(gb(e,1),[1,t,1])}))}(e=wx(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Sk.className="RepeatVector",zo.registerClass(Sk);var Nk=class extends Rx{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new dy("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=pb(e);if(null!==s){if(0===a||i%a!=0)throw new dy(n);r[s]=i/a}else if(i!==a)throw new dy(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=wx(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return eu(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Nk.className="Reshape",zo.registerClass(Nk);var Tk=class extends Rx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=fb(1,e.dims.length+1);if(!ya.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Cx({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=kx(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Zi(wx(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Tk.className="Permute",zo.registerClass(Tk);var _k=class extends Rx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=wx(e);return Fl(rp(n,this.maskValue),-1)}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=wx(e),r=Fl(rp(n,this.maskValue),-1,!0);return Tl(n,_i(r,n.dtype))}))}};_k.className="Masking",zo.registerClass(_k);var Ck=class extends Rx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(xy(e.inputLength))}this.inputDim=e.inputDim,Ay(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ay(this.outputDim,"outputDim"),this.embeddingsInitializer=Jb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Rw(e.embeddingsRegularizer),this.activityRegularizer=Rw(e.activityRegularizer),this.embeddingsConstraint=Uy(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return hl((()=>this.maskZero?(e=wx(e),rp(e,Wu(e))):null))}computeOutputShape(e){if(e=kx(e),null==this.inputLength)return[...e,this.outputDim];let t=xy(this.inputLength);if(t.length!==e.length-1)throw new dy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new dy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=wx(e);"int32"!==n.dtype&&(n=mb(n,"int32"));let r=Nb(this.embeddings.read(),eu(n,[n.size]));return eu(r,kx(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Zb(this.embeddingsInitializer),embeddingsRegularizer:Aw(this.embeddingsRegularizer),activityRegularizer:Aw(this.activityRegularizer),embeddingsConstraint:Wy(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Ck.className="Embedding",zo.registerClass(Ck);var Ek=class extends Rx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new cy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new dy("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[kx(e)]),e.length<2)throw new dy(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=_y(t),t.length>1)throw new dy(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===_y(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return hl((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=cb(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=gb(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=eu(r,[a].concat(pb(e.slice(1))));i=Zi(i,[1,0]),i=eu(i,s),t.push(i),n=!0}else if(e>1){let a=fb(1,e).concat([0]);t.push(Zi(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=eu(Zi(eu(r,[-1,t]),[1,0]),n)}else if(a>1){let e=[a-1].concat(fb(0,a-1));r=Zi(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=_y(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return hl((()=>{if(null==t)return null;if(!Array.isArray(t))throw new dy("`mask` should be an Array");if(!Array.isArray(e))throw new dy("`inputs` should be an Array");if(t.length!==e.length)throw new dy(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Ku(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Lh(n,t[e]);return n}))}},$k=class extends Ek{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Il(t,e[n]);return t}))}};$k.className="Add",zo.registerClass($k);var Ak=class extends Ek{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Tl(t,e[n]);return t}))}};Ak.className="Multiply",zo.registerClass(Ak);var Fk=class extends Ek{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Il(t,e[n]);return Tl(1/e.length,t)}))}};Fk.className="Average",zo.registerClass(Fk);var Rk=class extends Ek{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Gh(t,e[n]);return t}))}};Rk.className="Maximum",zo.registerClass(Rk);var Dk=class extends Ek{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Yh(t,e[n]);return t}))}};Dk.className="Minimum",zo.registerClass(Dk);var Mk=class extends Ek{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new dy("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(ya.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new dy("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return hl((()=>vb(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new dy("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new dy("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new dy("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new dy(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return hl((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(_i(ap(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Ku(t[n],-1)):r.push(t[n]);let a=ru(r,this.axis);return Al(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Ok(e,t){for(;e<0;)e+=t;return e}Mk.className="Concatenate",zo.registerClass(Mk);var Lk=class extends Ek{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ya.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new cy("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new dy(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new dy(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Ok(t,e[n].shape.length))):[Ok(this.axes,n.shape.length),Ok(this.axes,r.shape.length)],this.normalize&&(n=Xx(n,t[0]),r=Xx(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new cy("batchDot is not implemented for tensors of 4D or higher rank yet");if(ya.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ya.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new cy("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return hl((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=eu(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=eu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?Th(Tl(e,t),s[0]):Th(Tl(Zi(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Xi(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=td(i,t)}return 1===i.shape.length&&(i=Ku(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Ok(this.axes,e.length),Ok(this.axes,t.length)],n}computeOutputShape(e){ya.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new cy("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Lk.className="Dot",zo.registerClass(Lk);var zk=class extends Rx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=wx(e);return $b((()=>Il(Ib(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};zk.className="GaussianNoise",zo.registerClass(zk);var Pk=class extends Rx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=wx(e);return this.rate>0&&this.rate<1?$b((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return Tl(n,Ib(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};Pk.className="GaussianDropout",zo.registerClass(Pk);var Bk=class extends Rx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||wx(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return hl((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return $b((()=>{let t=wx(e),r=-1.7580993408473766,a=nh(Ip(n),this.rate);a=mb(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=Il(Tl(t,a),Tl(Il(a,-1),r));return Il(Tl(o,s),i)}),(()=>wx(e)),t.training||!1)}return e}))}};function Wk(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=pu(e,t,n,r,a,s);else if(3===e.rank)i=du(e,t,n,r,a,s);else{if(4!==e.rank)throw new cy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=cu(e,t,n,r,a,s)}return i}function Vk(e,t,n,r,a=.001){return ya.arraysEqual(r.slice().sort(),fb(0,e.rank-1))?function(e,t,n,r,a=.001){return hl((()=>{let s=ep(e,r),i=s.mean,o=s.variance;return[Wk(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return hl((()=>{let s=ep(e,r),i=s.mean,o=s.variance,l=[];for(let t of fb(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=eu(i,l),h=eu(o,l),p=null==t?null:eu(t,l),d=null==n?null:eu(n,l);return[Wk(e,u,h,d,p,a),i,o]}))}(e,t,n,r,a)}Bk.className="AlphaDropout",zo.registerClass(Bk);var Uk=class extends Rx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Jb(e.betaInitializer||"zeros"),this.gammaInitializer=Jb(e.gammaInitializer||"ones"),this.movingMeanInitializer=Jb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Jb(e.movingVarianceInitializer||"ones"),this.betaConstraint=Uy(e.betaConstraint),this.gammaConstraint=Uy(e.gammaConstraint),this.betaRegularizer=Rw(e.betaRegularizer),this.gammaRegularizer=Rw(e.gammaRegularizer)}build(e){e=kx(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new dy(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Cx({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return hl((()=>{let n=null!=t.training&&t.training,r=wx(e),a=r.shape,s=a.length,i=fb(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=my(1,s);l[o]=a[o];let u=i.slice();u.sort();let h=!ya.arraysEqual(u,fb(0,s).slice(0,s-1));if(!n)return(()=>{if(h){let e=eu(this.movingMean.read(),l),t=eu(this.movingVariance.read(),l),n=this.center?eu(this.beta.read(),l):null,a=this.scale?eu(this.gamma.read(),l):null;return Wk(r,e,t,n,a,this.epsilon)}return Wk(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[p,d,c]=Vk(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{hl((()=>{let r=1-n,a=e.read(),s=Tl(Nh(a,t),r);e.write(Nh(a,s))}))};return f(this.movingMean,d,this.momentum),f(this.movingVariance,c,this.momentum),p}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Zb(this.betaInitializer),gammaInitializer:Zb(this.gammaInitializer),movingMeanInitializer:Zb(this.movingMeanInitializer),movingVarianceInitializer:Zb(this.movingVarianceInitializer),betaRegularizer:Aw(this.betaRegularizer),gammaRegularizer:Aw(this.gammaRegularizer),betaConstraint:Wy(this.betaConstraint),gammaConstraint:Wy(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Uk.className="BatchNormalization",zo.registerClass(Uk);var Gk=class extends Rx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Jb(e.betaInitializer||"zeros"),this.gammaInitializer=Jb(e.gammaInitializer||"ones"),this.betaRegularizer=Rw(e.betaRegularizer),this.gammaRegularizer=Rw(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=kx(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==_y(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=wx(e),r=n.shape,a=r.length;return hl((()=>{let{mean:e,variance:t}=ep(n,this.axis,!0),s=my(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?eu(e,s):e,o=i(this.gamma.read()),l=i(this.beta.read()),u=[],h=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),h.push(1)):(u.push(1),h.push(r[e]));return e=Yu(e,u),t=Yu(t,u),o=Yu(o,h),l=Yu(l,h),Wk(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Zb(this.betaInitializer),gammaInitializer:Zb(this.gammaInitializer),betaRegularizer:Aw(this.betaRegularizer),gammaRegularizer:Aw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Gk.className="LayerNormalization",zo.registerClass(Gk);var Hk=class extends Rx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new dy(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new dy(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new dy(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Cx({ndim:4})]}computeOutputShape(e){let t,n;return e=kx(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return hl((()=>function(e,t,n){return hl((()=>{if(4!==e.rank)throw new dy(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new dy("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new dy(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],ip(e,r)}))}(wx(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function jk(e,t,n,r,a,s){return hl((()=>{tb(a),rb(s),nb(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Uw(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Wh(e,t,n,o):tu(e,t,n,o),"channelsFirst"===a&&(i=Zi(i,[0,3,1,2])),i}))}function qk(e,t,n,r,a,s){return hl((()=>{tb(a),rb(s),nb(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Gw(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Vh(e,t,n,o):nu(e,t,n,o),"channelsFirst"===a&&(i=Zi(i,[0,4,1,2,3])),i}))}Hk.className="ZeroPadding2D",zo.registerClass(Hk);var Kk=class extends Rx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new dy(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ay(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new dy(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ay(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,nb(this.padding),this.inputSpec=[new Cx({ndim:3})]}computeOutputShape(e){let t=Ww((e=kx(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return hl((()=>{this.invokeCallHook(e,t),e=gb(wx(e),2);let n=this.poolingFunction(wx(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return td(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Xk=class extends Kk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return tb(a),nb(r),jk(e,t,n,r,a,"max")}};Xk.className="MaxPooling1D",zo.registerClass(Xk);var Yk=class extends Kk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return tb(a),nb(r),jk(e,t,n,r,a,"avg")}};Yk.className="AveragePooling1D",zo.registerClass(Yk);var Zk=class extends Rx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new dy(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ay(this.poolSize,"poolSize"),Ay(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tb(this.dataFormat),nb(this.padding),this.inputSpec=[new Cx({ndim:4})]}computeOutputShape(e){e=kx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Ww(t,this.poolSize[0],this.padding,this.strides[0]),n=Ww(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return hl((()=>(this.invokeCallHook(e,t),this.poolingFunction(wx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Jk=class extends Zk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return tb(a),nb(r),jk(e,t,n,r,a,"max")}};Jk.className="MaxPooling2D",zo.registerClass(Jk);var Qk=class extends Zk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return tb(a),nb(r),jk(e,t,n,r,a,"avg")}};Qk.className="AveragePooling2D",zo.registerClass(Qk);var eI=class extends Rx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new dy(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ay(this.poolSize,"poolSize"),Ay(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tb(this.dataFormat),nb(this.padding),this.inputSpec=[new Cx({ndim:5})]}computeOutputShape(e){e=kx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Ww(t,this.poolSize[0],this.padding,this.strides[0]),n=Ww(n,this.poolSize[1],this.padding,this.strides[1]),r=Ww(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return hl((()=>(this.invokeCallHook(e,t),this.poolingFunction(wx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},tI=class extends eI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return tb(a),nb(r),qk(e,t,n,r,a,"max")}};tI.className="MaxPooling3D",zo.registerClass(tI);var nI=class extends eI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return tb(a),nb(r),qk(e,t,n,r,a,"avg")}};nI.className="AveragePooling3D",zo.registerClass(nI);var rI=class extends Rx{constructor(e){super(e),this.inputSpec=[new Cx({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new cy}},aI=class extends rI{constructor(e){super(e||{})}call(e,t){return hl((()=>{let t=wx(e);return Hh(t,1)}))}};aI.className="GlobalAveragePooling1D",zo.registerClass(aI);var sI=class extends rI{constructor(e){super(e||{})}call(e,t){return hl((()=>{let t=wx(e);return Sh(t,1)}))}};sI.className="GlobalMaxPooling1D",zo.registerClass(sI);var iI=class extends Rx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tb(this.dataFormat),this.inputSpec=[new Cx({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new cy}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},oI=class extends iI{call(e,t){return hl((()=>{let t=wx(e);return"channelsLast"===this.dataFormat?Hh(t,[1,2]):Hh(t,[2,3])}))}};oI.className="GlobalAveragePooling2D",zo.registerClass(oI);var lI=class extends iI{call(e,t){return hl((()=>{let t=wx(e);return"channelsLast"===this.dataFormat?Sh(t,[1,2]):Sh(t,[2,3])}))}};lI.className="GlobalMaxPooling2D",zo.registerClass(lI);var uI=class extends Rx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=Kx(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},hI=class extends uI{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=kx(e)).length<3)throw new dy(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=kx(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return hl((()=>sk(((e,n)=>[wx(this.layer.call(e,t)),[]]),e=wx(e),[],!1,null,null,!1,!0)[1]))}};hI.className="TimeDistributed",zo.registerClass(hI);var pI=class extends uI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Kx(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Kx(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){Ey(Qy,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new cy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):by(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=ak(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new dy("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new Cx({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new cy("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Ex;for(let e of s)if(e instanceof Ex!==o)throw new dy("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return hl((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=Ep(r,1)),"concat"===this.mergeMode?s=vb([n,r]):"sum"===this.mergeMode?s=Il(n,r):"ave"===this.mergeMode?s=Tl(.5,Il(n,r)):"mul"===this.mergeMode?s=Tl(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){sb(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),sb(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Kx(t.layer);if(delete t.layer,null!=t.numConstants)throw new cy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};function dI(e){return new Ox(e)}function cI(e){return new Lw(e)}function fI(e){return new Dw(e)}function mI(e){return new Mw(e)}function gI(e){return new Ow(e)}function yI(e){return new Pw(e)}function bI(e){return new zw(e)}function xI(e){return new ek(e)}function vI(e){return new Kw(e)}function wI(e){return new Yw(e)}function kI(e){return new Xw(e)}function II(e){return new Zw(e)}function SI(e){return new Qw(e)}function NI(e){return new tk(e)}function TI(e){return new nk(e)}function _I(e){return new rk(e)}function CI(e){return new Ik(e)}function EI(e){return new wk(e)}function $I(e){return new xk(e)}function AI(e){return new vk(e)}function FI(e){return new kk(e)}function RI(e){return new Sk(e)}function DI(e){return new Nk(e)}function MI(e){return new Tk(e)}function OI(e){return new Ck(e)}function LI(e){return new $k(e)}function zI(e){return new Fk(e)}function PI(e){return new Mk(e)}function BI(e){return new Rk(e)}function WI(e){return new Dk(e)}function VI(e){return new Ak(e)}function UI(e){return new Lk(e)}function GI(e){return new Uk(e)}function HI(e){return new Gk(e)}function jI(e){return new Hk(e)}function qI(e){return new Yk(e)}function KI(e){return qI(e)}function XI(e){return qI(e)}function YI(e){return new Qk(e)}function ZI(e){return YI(e)}function JI(e){return YI(e)}function QI(e){return new nI(e)}function eS(e){return QI(e)}function tS(e){return QI(e)}function nS(e){return new aI(e)}function rS(e){return new oI(e)}function aS(e){return new sI(e)}function sS(e){return new lI(e)}function iS(e){return new Xk(e)}function oS(e){return new Jk(e)}function lS(e){return new tI(e)}function uS(e){return new pk(e)}function hS(e){return new hk(e)}function pS(e){return new ck(e)}function dS(e){return new dk(e)}function cS(e){return new uk(e)}function fS(e){return new lk(e)}function mS(e){return new bk(e)}function gS(e){return new yk(e)}function yS(e){return new ik(e)}function bS(e){return new fk(e)}function xS(e){return new pI(e)}function vS(e){return new hI(e)}pI.className="Bidirectional",zo.registerClass(pI);var wS=aS,kS=sS,IS=iS,SS=oS;function NS(e){return new zk(e)}function TS(e){return new Pk(e)}function _S(e){return new Bk(e)}function CS(e){return new _k(e)}var ES={};function $S(e,t){return sv(e,t)}function AS(e,t){return hv(e,t)}function FS(e,t){return pv(e,t)}function RS(e,t){return iv(e,t)}function DS(e,t){return dv(e,t)}function MS(e,t){return lv(e,t)}function OS(e,t){return uv(e,t)}function LS(e,t){return nv(e,t)}function zS(e,t){return Zx(e,t)}function PS(e,t){return Jx(e,t)}function BS(e,t){return Jx(e,t)}function WS(e,t){return Jx(e,t)}function VS(e,t){return Yx(e,t)}function US(e,t){return Yx(e,t)}function GS(e,t){return Yx(e,t)}g(ES,{MAPE:()=>BS,MSE:()=>US,binaryAccuracy:()=>$S,binaryCrossentropy:()=>AS,categoricalAccuracy:()=>RS,categoricalCrossentropy:()=>DS,cosineProximity:()=>LS,mape:()=>WS,meanAbsoluteError:()=>zS,meanAbsolutePercentageError:()=>PS,meanSquaredError:()=>VS,mse:()=>GS,precision:()=>MS,recall:()=>OS,sparseCategoricalAccuracy:()=>FS});var HS={};g(HS,{modelFromJSON:()=>tw});var jS={};function qS(e){return new Ew(e)}function KS(e){return function(e){return _w(e),new Ew({l1:null!=e?e.l1:null,l2:0})}(e)}function XS(e){return function(e){return _w(e),new Ew({l2:null!=e?e.l2:null,l1:0})}(e)}g(jS,{l1:()=>KS,l1l2:()=>qS,l2:()=>XS});var YS=class extends Bx{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Qv))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function ZS(e,t){return e<t}function JS(e,t){return e>t}var QS=class extends YS{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new cy("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=ZS:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=JS:this.monitorFunc=ZS,this.monitorFunc===ZS&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===ZS?1/0:-1/0}async onEpochEnd(e,t){await zx(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};var eN,tN,nN={earlyStopping:function(e){return new QS(e)}};je().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(eN||(eN={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(tN||(tN={}));var rN={};function aN(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};rN[e]=n}function sN(e){return rN[e]}function iN(e){delete rN[e]}function oN(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return lN(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>lN(e,n,r,a)));let o=lN(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:ya.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function lN(e,t,n,r){let[a,s]=pN(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[hN(a,e)]));return void 0!==i?t[hN(a,i)][s]:void 0}function uN(e,t){let[n,r,a]=pN(e);return[hN(n,t&&t.currentContextId),r,a]}function hN(e,t){return t?`${e}-${t}`:e}function pN(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function dN(e,t,n){let r=oN("pad",e,t,n);if("explicit"===r){r=oN("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function cN(e){return e.kept?e:Ci(e)}var fN={};g(fN,{json:()=>mN});var mN=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],gN={};g(gN,{json:()=>yN});var yN=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bN={};g(bN,{json:()=>xN});var xN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],vN={};g(vN,{json:()=>wN});var wN=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],kN={};g(kN,{json:()=>IN});var IN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],SN={};g(SN,{json:()=>NN});var NN=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],TN={};g(TN,{json:()=>_N});var _N=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],CN={};g(CN,{json:()=>EN});var EN=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],$N={};g($N,{json:()=>AN});var AN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],FN={};g(FN,{json:()=>RN});var RN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],DN={};g(DN,{json:()=>MN});var MN=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ON={};g(ON,{json:()=>LN});var LN=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],zN={};g(zN,{json:()=>PN});var PN=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],BN={};g(BN,{json:()=>WN});var WN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],VN={};g(VN,{json:()=>UN});var UN=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],GN={};g(GN,{json:()=>HN});var HN=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],jN={};g(jN,{json:()=>qN});var qN=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],KN={};g(KN,{json:()=>XN});var XN=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],YN={};g(YN,{json:()=>ZN});var ZN=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],JN=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[fN,gN,bN,vN,kN,SN,TN,CN,$N,FN,DN,ON,zN,BN,VN,GN,jN,KN,YN].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},h={};null!=t&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=uN(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(h).length?p.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(h).forEach((e=>{let[t]=uN(e),n=i[t];null!=n&&(n.signatureKey=h[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=uN(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=sN(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=eT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=eT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=hT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=hT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=nT(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=nT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=uT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=uT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=tT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=tT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=dT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=dT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=lT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=lT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=pT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=sT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=sT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=iT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=iT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=aT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=aT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=uN(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:rT(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach(((e,n)=>{let[a,,s]=uN(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=uN(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function QN(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=je().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function eT(e,t,n,r=!1){let a=e[t];return null!=a?QN(a.s,r):n}function tT(e,t,n){let r=e[t];return r?r.b:n}function nT(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function rT(e){switch("string"==typeof e&&(e=eN[e]),e){case eN.DT_FLOAT:case eN.DT_HALF:return"float32";case eN.DT_INT32:case eN.DT_INT64:case eN.DT_INT8:case eN.DT_UINT8:return"int32";case eN.DT_BOOL:return"bool";case eN.DT_DOUBLE:return"float32";case eN.DT_STRING:return"string";default:return null}}function aT(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function sT(e,t,n){let r=e[t];return r&&r.type?rT(r.type):n}function iT(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>rT(e))):n}function oT(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function lT(e,t,n){let r=e[t];return r&&r.shape?oT(r.shape):n}function uT(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function hT(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>QN(e,r))):n}function pT(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>oT(e))):n}function dT(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var cT=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return lN(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return lN(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return nT(this.node.rawAttrs,e,t);if(null!=n.s)return eT(this.node.rawAttrs,e,t);if(null!=n.b)return tT(this.node.rawAttrs,e,t);if(null!=n.shape)return lT(this.node.rawAttrs,e,t);if(null!=n.type)return sT(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return uT(this.node.rawAttrs,e,t);if(null!=n.list.s)return hT(this.node.rawAttrs,e,t);if(null!=n.list.shape)return pT(this.node.rawAttrs,e,t);if(null!=n.list.b)return dT(this.node.rawAttrs,e,t);if(null!=n.list.type)return iT(this.node.rawAttrs,e,t)}return t}};function fT(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ya.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];ya.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function mT(e){return!("number"==typeof e||e.some((e=>e<0)))}function gT(e,t,n){let r=yT(e,n),a=!mT(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=yT(e.shape,r)})),!mT(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function yT(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var bT=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Op(0),dl(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),fT(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,dl(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Rs([],[0].concat(this.elementShape));let n=this.readMany(e);return fT(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),nd(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Rs([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return fT(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ru(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,md(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];hl((()=>{t=eu(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=eu(su(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}},xT=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);fT(t,e.shape,"TensorList shape mismatch: "),dl(e)})),this.idTensor=Op(0),this.maxNumElements=r,dl(this.idTensor)}get id(){return this.idTensor.id}copy(){return new xT([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);fT(e,this.elementShape,"TensorList shape mismatch: ");let r=gT(this.elementShape,this.tensors,e);return hl((()=>{let e=this.tensors.map((e=>eu(e,r)));return nd(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=gT(this.elementShape,this.tensors,e),r=this.tensors.pop();return fT(r.shape,e,"TensorList shape mismatch: "),eu(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(fT(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");dl(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);fT(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=gT(this.elementShape,this.tensors,t);return eu(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);fT(this.elementShape,t.shape,"TensorList shape mismatch: "),dl(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);fT(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=gT(this.elementShape,this.tensors,n);return 0===e.length?Rs([],[0].concat(r)):hl((()=>{let t=e.map((e=>eu(this.tensors[e],r)));return nd(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);fT(this.elementShape,t,"TensorList shape mismatch: ");let n=gT(this.elementShape,this.tensors,t);return 0===this.size()?Rs([],[0].concat(n)):hl((()=>{let e=this.tensors.map((e=>eu(e,n)));return ru(e,0)}))}};var vT=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=oN("thenBranch",e,t,n),a=oN("elseBranch",e,t,n),s=oN("cond",e,t,n),i=oN("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=oN("body",e,t,n),a=oN("cond",e,t,n),s=oN("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[cN(oN("pred",e,t,n))];case"Switch":{let r=oN("pred",e,t,n),a=oN("data",e,t,n);return a.kept||(a=cN(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==lN(e,t,n)));if(r){return[cN(lN(r,t,n))]}return}case"Enter":{let r=oN("frameName",e,t,n),a=oN("tensor",e,t,n);return n.enterFrame(r),[cN(a)]}case"Exit":{let r=oN("tensor",e,t,n);return n.exitFrame(),[cN(r)]}case"NextIteration":{let r=oN("tensor",e,t,n);return n.nextIteration(),[cN(r)]}case"TensorArrayV3":{let r=oN("size",e,t,n),a=oN("dtype",e,t,n),s=oN("elementShape",e,t,n),i=oN("dynamicSize",e,t,n),o=oN("clearAfterRead",e,t,n),l=oN("identicalElementShapes",e,t,n),u=oN("name",e,t,n),h=new bT(u,a,r,s,l,i,o);return n.addTensorArray(h),[h.idTensor,Op(1)]}case"TensorArrayWriteV3":{let r=oN("tensorArrayId",e,t,n),a=oN("index",e,t,n),s=oN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=oN("tensorArrayId",e,t,n),a=oN("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=oN("tensorArrayId",e,t,n),a=oN("indices",e,t,n),s=oN("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=oN("tensorArrayId",e,t,n),a=oN("indices",e,t,n),s=oN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=oN("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=oN("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=oN("tensorArrayId",e,t,n),a=oN("tensor",e,t,n),s=oN("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=oN("tensorArrayId",e,t,n);return[Op(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=oN("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=oN("tensorListId",e,t,n),a=oN("index",e,t,n),s=oN("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=oN("tensorListId",e,t,n),a=oN("index",e,t,n),s=oN("elementShape",e,t,n),i=oN("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=oN("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new xT([],n,e.dtype,r),i=md(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(oN("tensor",e,t,n),r,oN("elementShape",e,t,n),oN("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=oN("elementShape",e,t,n),s=oN("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=function(e,t,n){return new xT([],e,t,n)}(a,s,oN(r,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=oN("tensorListId",e,t,n),a=oN("indices",e,t,n),s=oN("elementShape",e,t,n),i=oN("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=oN("tensorListId",e,t,n),a=oN("elementShape",e,t,n),s=oN("elementDType",e,t,n),i=oN("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);fT(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=md(e);return new xT(a,t,r)}(oN("tensor",e,t,n),oN("elementShape",e,t,n),oN("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{let r=oN("tensorListId",e,t,n),a=n.getTensorList(r.id),s=oN("dtype",e,t,n),i=oN("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=oN("tensorListId",e,t,n),a=oN("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=oN("tensorListId",e,t,n),a=oN("elementShape",e,t,n),s=oN("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=oN("tensor",e,t,n),a=oN("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=yT(e.shape.slice(1),n),i=0===r?0:e.size/r,o=hl((()=>{let n=[];e=eu(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=eu(su(e,o,l),s)}return e.dispose(),n})),l=new xT([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,oN("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function wT(e,t,n){let[r,a]=oN("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=oN("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let h=oN("strides",e,t,n),p=dN(e,t,n),d=oN("dataFormat",e,t,n).toUpperCase(),c=oN("dilations",e,t,n),[f,m]=oN("args",e,t,n);return i&&(m=f,f=void 0),{stride:h,pad:p,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:oN("leakyreluAlpha",e,t,n)}}function kT(e,t,n){return{boxes:oN("boxes",e,t,n),scores:oN("scores",e,t,n),maxOutputSize:oN("maxOutputSize",e,t,n),iouThreshold:oN("iouThreshold",e,t,n),scoreThreshold:oN("scoreThreshold",e,t,n),softNmsSigma:oN("softNmsSigma",e,t,n)}}var IT=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Op(0),this.tensorMap=new Map,dl(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Op(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),hl((()=>{let e=md(t),r=n.length,a=e.length;ya.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];dl(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return hl((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return nd(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};function ST(e,t,n,r){let a=((e,t,n)=>{switch(e.category){case"arithmetic":return hl((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Il(oN("a",e,t,n),oN("b",e,t,n))];case"AddN":return[$l(oN("tensors",e,t,n))];case"FloorMod":case"Mod":return[Jh(oN("a",e,t,n),oN("b",e,t,n))];case"Mul":return[Tl(oN("a",e,t,n),oN("b",e,t,n))];case"RealDiv":case"Div":return[Nl(oN("a",e,t,n),oN("b",e,t,n))];case"DivNoNan":return[Vu(oN("a",e,t,n),oN("b",e,t,n))];case"FloorDiv":return[Sl(oN("a",e,t,n),oN("b",e,t,n))];case"Sub":return[Nh(oN("a",e,t,n),oN("b",e,t,n))];case"Minimum":return[Yh(oN("a",e,t,n),oN("b",e,t,n))];case"Maximum":return[Gh(oN("a",e,t,n),oN("b",e,t,n))];case"Pow":return[cp(oN("a",e,t,n),oN("b",e,t,n))];case"SquaredDifference":return[ed(oN("a",e,t,n),oN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return hl((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[_l(oN("x",e,t,n))];case"Acos":return[Cl(oN("x",e,t,n))];case"Acosh":return[El(oN("x",e,t,n))];case"Asin":return[Ml(oN("x",e,t,n))];case"Asinh":return[Ol(oN("x",e,t,n))];case"Atan":return[Ll(oN("x",e,t,n))];case"Atan2":return[zl(oN("x",e,t,n),oN("y",e,t,n))];case"Atanh":return[Pl(oN("x",e,t,n))];case"Ceil":return[yu(oN("x",e,t,n))];case"Complex":return[As(oN("real",e,t,n),oN("imag",e,t,n))];case"Cos":return[$u(oN("x",e,t,n))];case"Cosh":return[Au(oN("x",e,t,n))];case"Elu":return[Hu(oN("x",e,t,n))];case"Erf":return[ju(oN("x",e,t,n))];case"Exp":return[qu(oN("x",e,t,n))];case"Expm1":return[Xu(oN("x",e,t,n))];case"Floor":return[Qu(oN("x",e,t,n))];case"Log":return[dh(oN("x",e,t,n))];case"Log1p":return[ch(oN("x",e,t,n))];case"Imag":return[rh(oN("x",e,t,n))];case"Neg":return[wh(oN("x",e,t,n))];case"Reciprocal":return[Tp(oN("x",e,t,n))];case"Real":return[Np(oN("x",e,t,n))];case"Relu":return[_p(oN("x",e,t,n))];case"Round":return[Dp(oN("x",e,t,n))];case"Selu":return[Lp(oN("x",e,t,n))];case"Sigmoid":return[au(oN("x",e,t,n))];case"Sin":return[Wp(oN("x",e,t,n))];case"Sign":return[Bp(oN("x",e,t,n))];case"Sinh":return[Vp(oN("x",e,t,n))];case"Softplus":return[kh(oN("x",e,t,n))];case"Sqrt":return[Qp(oN("x",e,t,n))];case"Square":return[Qh(oN("x",e,t,n))];case"Tanh":return[iu(oN("x",e,t,n))];case"Tan":return[sd(oN("x",e,t,n))];case"ClipByValue":return[bu(oN("x",e,t,n),oN("clipValueMin",e,t,n),oN("clipValueMax",e,t,n))];case"Relu6":return[Cp(oN("x",e,t,n))];case"Rsqrt":return[Mp(lN(e.inputNames[0],t,n))];case"Prod":return[mp(oN("x",e,t,n),oN("axes",e,t,n))];case"LeakyRelu":return[oh(oN("x",e,t,n),oN("alpha",e,t,n))];case"Prelu":return[fp(oN("x",e,t,n),oN("alpha",e,t,n))];case"IsNan":return[ih(lN(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return vT(e,t,n);case"convolution":return hl((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{let r=oN("stride",e,t,n),a=oN("pad",e,t,n),s=oN("dataFormat",e,t,n).toUpperCase(),i=oN("dilation",e,t,n);return[Su(oN("x",e,t,n),oN("filter",e,t,n),r,a,s,i)]}case"Conv2D":{let r=oN("strides",e,t,n),a=dN(e,t,n),s=oN("dataFormat",e,t,n).toUpperCase(),i=oN("dilations",e,t,n);return[Iu(oN("x",e,t,n),oN("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:h}=wT(e,t,n);return[$d.conv2d({x:oN("x",e,t,n),filter:oN("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:h}=wT(e,t,n);return[$d.depthwiseConv2d({x:oN("x",e,t,n),filter:oN("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=oN("outputShape",e,t,n),a=oN("strides",e,t,n),s=dN(e,t,n);return[Tu(oN("x",e,t,n),oN("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=oN("strides",e,t,n),a=dN(e,t,n),s=oN("dilations",e,t,n),i=oN("dataFormat",e,t,n).toUpperCase();return[Ou(oN("input",e,t,n),oN("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{let r=oN("strides",e,t,n),a=oN("pad",e,t,n),s=oN("dataFormat",e,t,n).toUpperCase(),i=oN("dilations",e,t,n);return[_u(oN("x",e,t,n),oN("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{let r=oN("strides",e,t,n),a=oN("pad",e,t,n),s=oN("kernelSize",e,t,n);return[tu(oN("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=oN("strides",e,t,n),a=oN("pad",e,t,n),s=oN("kernelSize",e,t,n);return[Wh(oN("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=oN("strides",e,t,n),a=oN("pad",e,t,n),s=oN("kernelSize",e,t,n),i=oN("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Uh(oN("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{let r=oN("strides",e,t,n),a=oN("pad",e,t,n),s=oN("kernelSize",e,t,n);return[nu(oN("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=oN("strides",e,t,n),a=oN("pad",e,t,n),s=oN("kernelSize",e,t,n);return[Vh(oN("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=oN("strides",e,t,n),a=oN("pad",e,t,n),s=oN("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[zu(oN("x",e,t,n),oN("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return hl((()=>((e,t,n)=>{switch(e.op){case"Fill":{let r=oN("shape",e,t,n),a=oN("dtype",e,t,n);return[Ju(r,oN("value",e,t,n),a)]}case"LinSpace":return[hh(oN("start",e,t,n),oN("stop",e,t,n),oN("num",e,t,n))];case"Multinomial":{let r=oN("logits",e,t,n),a=oN("numSamples",e,t,n),s=oN("seed",e,t,n);return[np(r,a,s)]}case"OneHot":{let r=oN("indices",e,t,n),a=oN("depth",e,t,n),s=oN("onValue",e,t,n),i=oN("offValue",e,t,n);return[Yi(r,a,s,i)]}case"Ones":return[qh(oN("shape",e,t,n),oN("dtype",e,t,n))];case"OnesLike":return[ap(oN("x",e,t,n))];case"RandomUniform":return[Ip(oN("shape",e,t,n),oN("minval",e,t,n),oN("maxval",e,t,n),oN("dtype",e,t,n))];case"Range":return[Sp(oN("start",e,t,n),oN("stop",e,t,n),oN("step",e,t,n),oN("dtype",e,t,n))];case"TruncatedNormal":{let r=oN("shape",e,t,n),a=oN("mean",e,t,n),s=oN("stdDev",e,t,n),i=oN("seed",e,t,n);return[dd(r,a,s,oN("dtype",e,t,n),i)]}case"Zeros":return[jh(oN("shape",e,t,n),oN("dtype",e,t,n))];case"ZerosLike":return[Wu(oN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=kT(e,t,n),u=await zc.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=kT(e,t,n),l=oN("padToMaxOutputSize",e,t,n),u=await zc.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=kT(e,t,n);return[await zc.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{let r=_i(oN("condition",e,t,n),"bool"),a=[await bd(r)];return r.dispose(),a}case"ListDiff":return Pp(oN("x",e,t,n),oN("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return hl((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{let r=oN("x",e,t,n),a=oN("k",e,t,n),s=oN("sorted",e,t,n),i=pd(r,a,s);return[i.values,i.indices]}case"Unique":{let r=oN("x",e,t,n),a=cd(r);return[a.values,a.indices]}case"UniqueV2":{let r=oN("x",e,t,n),a=oN("axis",e,t,n),s=cd(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return hl((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=oN("images",e,t,n),a=oN("size",e,t,n),s=oN("alignCorners",e,t,n),i=oN("halfPixelCenters",e,t,n);return[zc.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{let r=oN("images",e,t,n),a=oN("size",e,t,n),s=oN("alignCorners",e,t,n),i=oN("halfPixelCenters",e,t,n);return[zc.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{let r=oN("image",e,t,n),a=oN("boxes",e,t,n),s=oN("boxInd",e,t,n),i=oN("cropSize",e,t,n),o=oN("method",e,t,n),l=oN("extrapolationValue",e,t,n);return[zc.cropAndResize(r,a,s,i,o,l)]}case"ImageProjectiveTransformV3":{let r=oN("images",e,t,n),a=oN("transforms",e,t,n),s=oN("outputShape",e,t,n),i=oN("fillValue",e,t,n),o=oN("interpolation",e,t,n),l=oN("fillMode",e,t,n);return[zc.transform(r,a,o.toLowerCase(),l.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return hl((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=oN("default",e,t,n);return[lN(e.name,t,n)||r];case"Placeholder":return[lN(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[cN(oN("x",e,t,n))];case"IdentityN":return oN("x",e,t,n).map((e=>cN(e)));case"Shape":return[id(oN("x",e,t,n).shape,"int32")];case"ShapeN":return oN("x",e,t,n).map((e=>id(e.shape)));case"Size":return[Op(oN("x",e,t,n).size,"int32")];case"Rank":return[Op(oN("x",e,t,n).rank,"int32")];case"NoOp":return[Op(1)];case"Print":let a=oN("x",e,t,n),s=oN("data",e,t,n),i=oN("message",e,t,n),o=oN("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return hl((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Pu(oN("a",e,t,n),oN("b",e,t,n))];case"NotEqual":return[rp(oN("a",e,t,n),oN("b",e,t,n))];case"Greater":return[th(oN("a",e,t,n),oN("b",e,t,n))];case"GreaterEqual":return[nh(oN("a",e,t,n),oN("b",e,t,n))];case"Less":return[lh(oN("a",e,t,n),oN("b",e,t,n))];case"LessEqual":return[uh(oN("a",e,t,n),oN("b",e,t,n))];case"LogicalAnd":return[Lh(oN("a",e,t,n),oN("b",e,t,n))];case"LogicalNot":return[zh(oN("a",e,t,n))];case"LogicalOr":return[Ph(oN("a",e,t,n),oN("b",e,t,n))];case"Select":case"SelectV2":return[Bu(oN("condition",e,t,n),oN("a",e,t,n),oN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return hl((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Xi(oN("a",e,t,n),oN("b",e,t,n),oN("transposeA",e,t,n),oN("transposeB",e,t,n))];case"Einsum":return[Gu(oN("equation",e,t,n),...oN("tensors",e,t,n))];case"Transpose":return[Zi(oN("x",e,t,n),oN("perm",e,t,n))];case"_FusedMatMul":let[r,a]=oN("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=oN("numArgs",e,t,n),l=oN("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,h]=oN("args",e,t,n);return[$d.matMul({a:oN("a",e,t,n),b:oN("b",e,t,n),transposeA:oN("transposeA",e,t,n),transposeB:oN("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return hl((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[hu(oN("x",e,t,n),oN("mean",e,t,n),oN("variance",e,t,n),oN("offset",e,t,n),oN("scale",e,t,n),oN("epsilon",e,t,n))];case"LRN":return[ph(oN("x",e,t,n),oN("radius",e,t,n),oN("bias",e,t,n),oN("alpha",e,t,n),oN("beta",e,t,n))];case"Softmax":return[qp(oN("x",e,t,n))];case"LogSoftmax":return[_h(oN("x",e,t,n))];case"SparseToDense":return[Sd(oN("sparseIndices",e,t,n),oN("outputShape",e,t,n),oN("sparseValues",e,t,n),oN("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return hl((()=>((e,t,n)=>{switch(e.op){case"Max":{let r=oN("axis",e,t,n),a=oN("keepDims",e,t,n);return[Sh(oN("x",e,t,n),r,a)]}case"Mean":{let r=oN("axis",e,t,n),a=oN("keepDims",e,t,n);return[Hh(oN("x",e,t,n),r,a)]}case"Min":{let r=oN("axis",e,t,n),a=oN("keepDims",e,t,n);return[Xh(oN("x",e,t,n),r,a)]}case"Sum":{let r=oN("axis",e,t,n),a=oN("keepDims",e,t,n);return[Th(oN("x",e,t,n),r,a)]}case"All":{let r=oN("axis",e,t,n),a=oN("keepDims",e,t,n);return[Al(oN("x",e,t,n),r,a)]}case"Any":{let r=oN("axis",e,t,n),a=oN("keepDims",e,t,n);return[Fl(oN("x",e,t,n),r,a)]}case"ArgMax":{let r=oN("axis",e,t,n);return[Rl(oN("x",e,t,n),r)]}case"ArgMin":{let r=oN("axis",e,t,n);return[Dl(oN("x",e,t,n),r)]}case"Prod":{let r=oN("axis",e,t,n),a=oN("keepDims",e,t,n);return[mp(oN("x",e,t,n),r,a)]}case"Cumprod":{let r=oN("axis",e,t,n),a=oN("exclusive",e,t,n),s=oN("reverse",e,t,n);return[Fu(oN("x",e,t,n),r,a,s)]}case"Cumsum":{let r=oN("axis",e,t,n),a=oN("exclusive",e,t,n),s=oN("reverse",e,t,n);return[Ru(oN("x",e,t,n),r,a,s)]}case"Bincount":let r=oN("x",e,t,n),a=oN("weights",e,t,n),s=oN("size",e,t,n);return[fu(r,a,s)];case"DenseBincount":{let r=oN("x",e,t,n),a=oN("weights",e,t,n),s=oN("size",e,t,n),i=oN("binaryOutput",e,t,n);return[Du(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return hl((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=oN("n",e,t,n),a=oN("axis",e,t,n),s=oN("tensors",e,t,n);return s=s.slice(0,r),[ru(s,a)]}case"Gather":{let r=oN("x",e,t,n),a=oN("indices",e,t,n);return[eh(r,_i(a,"int32"),0)]}case"GatherV2":{let r=oN("axis",e,t,n),a=oN("batchDims",e,t,n),s=oN("x",e,t,n),i=oN("indices",e,t,n);return[eh(s,_i(i,"int32"),r,a)]}case"Reverse":{let r=oN("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);let s=oN("x",e,t,n);return[Ep(s,a)]}case"ReverseV2":{let r=oN("axis",e,t,n),a=oN("x",e,t,n);return[Ep(a,r)]}case"Slice":{let r=oN("begin",e,t,n),a=oN("size",e,t,n);return[su(oN("x",e,t,n),r,a)]}case"StridedSlice":{let r=oN("begin",e,t,n),a=oN("end",e,t,n),s=oN("strides",e,t,n),i=oN("beginMask",e,t,n),o=oN("endMask",e,t,n),l=oN("ellipsisMask",e,t,n),u=oN("newAxisMask",e,t,n),h=oN("shrinkAxisMask",e,t,n),p=oN("x",e,t,n);return[ad(p,r,a,s,i,o,l,u,h)]}case"Pack":return hl((()=>{let r=oN("axis",e,t,n),a=oN("tensors",e,t,n),s=a[0].shape,i=td(a[0]).shape,o=a.map((e=>{let t=ya.arraysEqual(e.shape,s);if(!t&&!ya.arraysEqual(td(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:eu(e,s)}));return[nd(o,r)]}));case"Unpack":{let r=oN("axis",e,t,n),a=oN("tensor",e,t,n);return md(a,r)}case"Tile":{let r=oN("reps",e,t,n);return[Yu(oN("x",e,t,n),r)]}case"Split":case"SplitV":{let r=oN("axis",e,t,n),a=oN("numOrSizeSplits",e,t,n),s=oN("x",e,t,n);return Zp(s,a,r)}case"ScatterNd":{let r=oN("indices",e,t,n),a=oN("values",e,t,n),s=oN("shape",e,t,n);return[Id(r,a,s)]}case"GatherNd":{let r=oN("x",e,t,n),a=oN("indices",e,t,n);return[Nd(r,a)]}case"SparseToDense":{let r=oN("sparseIndices",e,t,n),a=oN("outputShape",e,t,n),s=oN("sparseValues",e,t,n),i=oN("defaultValue",e,t,n);return[Sd(r,s,a,s.dtype===i.dtype?i:_i(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return hl((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Wc.sparseFillEmptyRows(oN("indices",e,t,n),oN("values",e,t,n),oN("denseShape",e,t,n),oN("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{let{outputIndices:r,outputShape:a}=Wc.sparseReshape(oN("inputIndices",e,t,n),oN("inputShape",e,t,n),oN("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Wc.sparseSegmentMean(oN("data",e,t,n),oN("indices",e,t,n),oN("segmentIds",e,t,n))];case"SparseSegmentSum":return[Wc.sparseSegmentSum(oN("data",e,t,n),oN("indices",e,t,n),oN("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return hl((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Kp(oN("x",e,t,n))];case"IFFT":return[Xp(oN("x",e,t,n))];case"RFFT":return[Jp(oN("x",e,t,n))];case"IRFFT":return[Yp(oN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return hl((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:a}=Vc.stringNGrams(oN("data",e,t,n),oN("dataSplits",e,t,n),oN("separator",e,t,n),oN("nGramWidths",e,t,n),oN("leftPad",e,t,n),oN("rightPad",e,t,n),oN("padWidth",e,t,n),oN("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{let{indices:r,values:a,shape:s}=Vc.stringSplit(oN("input",e,t,n),oN("delimiter",e,t,n),oN("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Vc.stringToHashBucketFast(oN("input",e,t,n),oN("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return hl((()=>((e,t,n)=>{switch(e.op){case"Cast":return[_i(oN("x",e,t,n),oN("dtype",e,t,n))];case"ExpandDims":{let r=oN("axis",e,t,n);return[Ku(oN("x",e,t,n),r)]}case"Squeeze":{let r=oN("axis",e,t,n);return[td(oN("x",e,t,n),r)]}case"Reshape":return[eu(oN("x",e,t,n),oN("shape",e,t,n))];case"MirrorPad":return[Zh(oN("x",e,t,n),oN("padding",e,t,n),oN("mode",e,t,n))];case"PadV2":case"Pad":return[ip(oN("x",e,t,n),oN("padding",e,t,n),oN("constantValue",e,t,n))];case"SpaceToBatchND":{let r=oN("blockShape",e,t,n),a=oN("paddings",e,t,n);return[pp(oN("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=oN("blockShape",e,t,n),a=oN("crops",e,t,n);return[lu(oN("x",e,t,n),r,a)]}case"DepthToSpace":{let r=oN("blockSize",e,t,n),a=oN("dataFormat",e,t,n).toUpperCase();return[Mu(oN("x",e,t,n),r,a)]}case"BroadcastTo":return[gu(oN("x",e,t,n),oN("shape",e,t,n))];case"BroadcastArgs":return[mu(oN("s0",e,t,n),oN("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=oN("keyDType",e,t,n),s=oN("valueDType",e,t,n),i=new IT(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=oN("tableHandle",e,t,n,r),s=oN("keys",e,t,n),i=oN("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=oN("tableHandle",e,t,n,r),s=oN("keys",e,t,n),i=oN("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=oN("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":let a=sN(e.op);if(a&&a.customExecutor)return a.customExecutor(new cT(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return ya.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var NT=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function TT(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>pN(e)[0])),h=[];null!=r&&(h=r.map((e=>pN(e.name)[0])));let p=[...t];for(;p.length>0;){let e=p.pop();if(($T(e)||AT(e)||FT(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===h.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),p.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var _T=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],CT=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ET=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function $T(e){return _T.indexOf(e.op)>=0}function AT(e){return CT.indexOf(e.op)>=0}function FT(e){return ET.indexOf(e.op)>=0}var RT=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new RT(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=TT(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>pN(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[pN(e)[0]])),a=t.map((e=>pN(e)[0])),s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return hl((()=>{let n=new NT(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,a]=pN(t),s=[];s[a]=e[t],r[n]=s}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=ST(t,r,n,this._resourceManager);if(ya.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>lN(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let s=function(e,t,n){return t[hN(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){let n=i[e.id];if(1===n){if(this.keepTensorForDebug){let[n,a]=uN(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{e&&!e.kept&&!e.isDisposed&&!this.keepIds.has(e.id)&&e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=je().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();let s=new NT(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);let i=t.map((e=>lN(e,this.tensorsMap,s))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[pN(e)[0]])),i=n.map((e=>pN(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:p}=TT(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,r]=pN(t),a=[];a[r]=e[t],c[n]=a}));let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let e=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(e)}null==h&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter((e=>!$T(e)&&!lN(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&oN("isConstant",e.node,r,n)&&([h]=uN(e.node.name,n)),null==r[e.node.name]){let p=ST(e.node,r,n,this._resourceManager);h||([h]=uN(e.node.name,n));let d=n.currentContext;ya.isPromise(p)?u.push(p.then((u=>(r[h]=u,n.currentContext=d,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[h]=p,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=uN(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!lN(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!lN(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=pN(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));ya.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&ya.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){let t={};for(let n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=pN(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{let[t]=pN(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},DT=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},MT="?tfjs-format=file",OT="model.json",LT=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new DT}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=$i.browserHTTPRequest(e,this.loadOptions);else{let t=$i.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push($i.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t,n=this.artifacts.modelTopology;t=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=t,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;let r=$i.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new RT(JN.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=JN.Instance.transformGraph(e.modelInitializer);this.initializer=new RT(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){let t=$i.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Xa||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function zT(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${OT}${MT}`);let n=new LT(e,t);return await n.load(),n}var PT="3.15.0",BT={};g(BT,{CSVDataset:()=>F_,Dataset:()=>x_,FileDataSource:()=>H_,TextLineDataset:()=>N_,URLDataSource:()=>j_,array:()=>w_,csv:()=>q_,func:()=>K_,generator:()=>X_,microphone:()=>Z_,version_data:()=>J_,webcam:()=>Y_,zip:()=>k_});var WT=y(L()),VT=y(L());function UT(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(KT(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=UT(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function GT(e,t=jT){return HT(e,t)}function HT(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(KT(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=HT(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function jT(e){return null===e?null:KT(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function qT(e,t){let n=new Map;UT(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(ya.isPromise(t)){let r=await t;n.set(e,r)}}return UT(e,t,n)}function KT(e){let t=!1;if(je().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=z();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Xa)&&!(e instanceof Promise)&&!t)}function XT(e){return function(e,t){return UT(e,t)}(e,YT)}function YT(e){return e instanceof Xa?{value:e.clone(),recurse:!1}:KT(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var ZT=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},JT=class extends ZT{constructor(){super(JT.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function QT(e){return new r_(e)}function e_(e){return new a_(e)}JT.INITIAL_CAPACITY=32;var t_,n_=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new p_(this,e)}filter(e){return new u_(this,e)}map(e){return new h_(this,e)}mapAsync(e){return new d_(this,e)}serialMapAsync(e){return new d_(this,e).serial()}flatmap(e){return new f_(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new l_(this,e,t)}columnMajorBatch(e,t=!0,n=jT){return this.rowMajorBatch(e,t).map((e=>GT(e,n)))}concatenate(e,t){return new m_(QT([this,e]),t)}take(e){return e<0||null==e?this:new o_(this,e)}skip(e){return e<0||null==e?this:new i_(this,e)}prefetch(e){return new y_(this,e)}shuffle(e,t){return new b_(this,e,t)}serial(){return new s_(this)}},r_=class extends n_{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:XT(e),done:!1}}},a_=class extends n_{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},s_=class extends n_{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},i_=class extends n_{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;pl(e.value)}return this.upstream.next()}},o_=class extends n_{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},l_=class extends n_{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},u_=class extends n_{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;pl(e.value)}}},h_=class extends n_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=rs.getTensorsInContainer(e.value),n=this.transform(e.value),r=rs.getTensorsInContainer(n);for(let e of t)rs.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},p_=class extends n_{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},d_=class extends n_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=rs.getTensorsInContainer(e.value),n=await this.transform(e.value),r=rs.getTensorsInContainer(n);for(let e of t)rs.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},c_=class extends n_{constructor(){super(),this.outputQueue=new JT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},f_=class extends c_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=rs.getTensorsInContainer(e.value),n=this.transform(e.value),r=rs.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)rs.isTensorInList(e,r)||e.dispose();return!0}},m_=class extends n_{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(t_||(t_={}));var g_=class extends n_{constructor(e,t=t_.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;let r=await qT(this.iterators,(function(e){return e instanceof n_?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case t_.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case t_.SHORTEST:return{value:null,done:!0};case t_.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},y_=class extends n_{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new ZT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},b_=class extends y_{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=VT.alea(n||ya.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},x_=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return ya.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),v_((async()=>(await r.iterator()).columnMajorBatch(e,t,I_)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,v_((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,v_((async()=>(await n.iterator()).filter((t=>hl((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return v_((async()=>(await t.iterator()).map((t=>hl((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return v_((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return v_((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,v_((async()=>function(e,t){return new m_(e,t)}(e_((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,v_((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=WT.alea(t||ya.now().toString());return v_((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,v_((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function v_(e,t=null){return new class extends x_{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function w_(e){return v_((async()=>QT(e)),e.length)}function k_(e){if(!KT(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return v_((async()=>function(e,t=t_.FAIL){return new g_(e,t)}(await qT(e,(e=>{if(e instanceof x_)return{value:e.iterator(),recurse:!1};if(KT(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),t_.SHORTEST)),t)}function I_(e){if(null===e)return null;return function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof Xa||ya.isTypedArray(e)}(e[0])?{value:S_(e),recurse:!1}:{value:null,recurse:!0}}function S_(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Xa?nd(e):Rs(e)}x_.MAX_BUFFER_SIZE=1e4;var N_=class extends x_{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},T_='"',__=Symbol("out"),C_=Symbol("field"),E_=Symbol("quote"),$_=Symbol("quoteafterquote"),A_=Symbol("quoteinquote"),F_=class extends x_{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new N_(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ya.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ya.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(ya.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=__;for(let t=0;t<a;t++)switch(s){case __:switch(e.charAt(t)){case T_:r=t+1,s=E_;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=__;break;default:s=C_,r=t}break;case C_:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),s=__,r=t+1;break;case E_:if(e.charAt(t)===T_)s=$_;break;case $_:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=__,r=t+1;break;case T_:s=E_;break;default:s=A_}break;case A_:if(e.charAt(t)===T_)s=E_}if(s===$_?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},R_=class extends n_{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!je().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new R_(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(ya.sizeFromShape(t));return n.set(e,n.length-e.length),Rs(n,t)}},D_=class extends n_{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=id([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=od([r,n,s,a],[1,4])}else this.cropBox=od([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!je().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new D_(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ya.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=ao.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return hl((()=>{let t,n=Ku(_i(e,"float32"),0);t=zc.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return eu(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},M_=class{},O_=class extends n_{split(e){return new L_(this,e)}},L_=class extends O_{constructor(e,t){super(),this.upstream=e,this.impl=new z_(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},z_=class extends c_{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},P_=class extends n_{decodeUTF8(){return new B_(this)}},B_=class extends O_{constructor(e){super(),this.upstream=e,this.impl=new W_(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},W_=class extends c_{constructor(e){if(super(),this.upstream=e,je().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=z();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=je().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},V_=class extends P_{constructor(e,t={}){super(),this.file=e,this.options=t,ya.assert(e instanceof Uint8Array||!!je().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};var U_=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function G_(e){return"string"==typeof e&&"file://"===e.substr(0,7)}var H_=class extends M_{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(G_(this.input)&&je().get("IS_NODE")){let e=P();this.input=e.readFileSync(this.input.substr(7))}return new V_(this.input,this.options)}},j_=class extends M_{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return G_(this.url)?new H_(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=U_(e));let s=await(n||ya.fetch)(r,a);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new V_(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function q_(e,t={}){return new F_(new j_(e),t)}function K_(e){let t=e_(e);return v_((async()=>t))}function X_(e){return v_((async()=>{let t=await e();return e_((()=>t.next()))}))}async function Y_(e,t){return D_.create(e,t)}async function Z_(e){return R_.create(e)}var J_="3.15.0";function Q_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ya.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var eC=am.whereImpl,tC=class extends q{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new j(this,ol())}nextDataId(){return tC.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,je().get("IS_NODE")&&tf.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ya.isString(n[0])){let a=n.map((e=>ya.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return tf.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>ya.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ti(e.shape,e.dtype,n)}makeOutput(e,t,n){let r=this.write(e,t,n);return ol().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=ya.now();return e(),{kernelMs:ya.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Q_([e],"where");let t=this.readSync(e.dataId);return eC(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};tC.nextDataId=0;var nC={};function rC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}g(nC,{addImpl:()=>yC,bincountImpl:()=>wC,bincountReduceImpl:()=>kC,ceilImpl:()=>TC,concatImpl:()=>EC,equalImpl:()=>$C,expImpl:()=>RC,expm1Impl:()=>OC,floorImpl:()=>PC,gatherNdImpl:()=>VC,gatherV2Impl:()=>UC,greaterEqualImpl:()=>qC,greaterImpl:()=>GC,lessEqualImpl:()=>QC,lessImpl:()=>YC,linSpaceImpl:()=>nE,logImpl:()=>rE,maxImpl:()=>iE,maximumImpl:()=>oE,minimumImpl:()=>hE,multiplyImpl:()=>cE,negImpl:()=>yE,notEqualImpl:()=>xE,prodImpl:()=>NE,rangeImpl:()=>_E,rsqrtImpl:()=>CE,sigmoidImpl:()=>AE,simpleAbsImpl:()=>rC,sliceImpl:()=>DE,sparseFillEmptyRowsImpl:()=>LE,sparseReshapeImpl:()=>zE,sparseSegmentReductionImpl:()=>PE,sqrtImpl:()=>BE,squaredDifferenceImpl:()=>UE,stridedSliceImpl:()=>jE,stringNGramsImpl:()=>KE,stringSplitImpl:()=>YE,stringToHashBucketFastImpl:()=>ZE,subImpl:()=>JE,tileImpl:()=>n$,topKImpl:()=>s$,transposeImpl:()=>kE,uniqueImpl:()=>i$});var aC={kernelName:Ze,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;Q_(t,"abs");let r=new Float32Array(ya.sizeFromShape(t.shape));return r=rC(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function sC(e){return(t,n,r,a,s)=>{let i=tf.assertAndGetBroadcastShape(t,n),o=i.length,l=ya.computeStrides(i),u=ya.sizeFromShape(i),h=ya.getTypedArrayFromDType(s,u),p=t.length,d=n.length,c=ya.computeStrides(t),f=ya.computeStrides(n),m=tf.getBroadcastDims(t,i),g=tf.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){let n=ya.indexToLoc(t,o,l),s=n.slice(-p);m.forEach((e=>s[e]=0));let i=ya.locToIndex(s,p,c),u=n.slice(-d);g.forEach((e=>u[e]=0));let y=ya.locToIndex(u,d,f);h[t]=e(r[i],a[y])}return[h,i]}}function iC(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var oC={kernelName:It,backendName:"cpu",kernelFunc:iC};function lC(e,t,n="float32"){if("complex64"===n){return iC({inputs:{real:lC(e,t,"float32"),imag:lC(e,t,"float32")},backend:e})}let r=ya.makeZerosTypedArray(ya.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function uC(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var hC={kernelName:dn,backendName:"cpu",kernelFunc:uC};function pC(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var dC={kernelName:ar,backendName:"cpu",kernelFunc:pC};function cC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return uC({inputs:{x:a},backend:n});let e=lC(n,a.shape,a.dtype),t=cC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=iC({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=pC({inputs:{input:a},backend:n}),t=cC({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ya.hasEncodingLoss(a.dtype,s)){let e=uC({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){let e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){let e=n.data.get(a.dataId).values,t=ya.toTypedArray([0],a.dtype),[r,s]=sC(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var fC={kernelName:vt,backendName:"cpu",kernelFunc:cC};function mC(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;Q_([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,h="string"===s.dtype?tf.fromUint8ToStringArray(l):l,p="string"===s.dtype?tf.fromUint8ToStringArray(u):u,d=r||s.dtype,[c,f]=t(s.shape,i.shape,h,p,d);return o.makeTensorInfo(f,d,c)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=cC({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,h=cC({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(h.dataId),d=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=iC({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function gC(e){return(t,n,r,a,s,i)=>{let o=tf.assertAndGetBroadcastShape(t,n),l=ya.sizeFromShape(o),u=o.length,h=ya.computeStrides(o),p=ya.getTypedArrayFromDType("float32",l),d=ya.getTypedArrayFromDType("float32",l),c=tf.getBroadcastDims(t,o),f=tf.getBroadcastDims(n,o),m=tf.mergeRealAndImagArrays(r,a),g=tf.mergeRealAndImagArrays(s,i),y=t.length,b=ya.computeStrides(t),x=n.length,v=ya.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<p.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,d[t]=a.imag}else for(let t=0;t<p.length;t++){let n=ya.indexToLoc(t,u,h),r=n.slice(-y);c.forEach((e=>r[e]=0));let a=ya.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));let i=ya.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);p[t]=o.real,d[t]=o.imag}return[p,d,o]}}var yC=sC(((e,t)=>e+t)),bC=gC(((e,t,n,r)=>({real:e+n,imag:t+r}))),xC=mC(et,yC,bC),vC={kernelName:et,backendName:"cpu",kernelFunc:xC};function wC(e,t,n,r,a){let s=ya.sizeFromShape(r),i=ya.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function kC(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Ti([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function IC(e){return(t,n,r)=>{let a=ya.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function SC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(Q_(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=ya.sizeFromShape(i.shape),h=n||i.dtype,p=ya.getArrayFromDType(h,u);for(let e=0;e<u;++e)p[e]=t(l[e],a);return o.makeTensorInfo(i.shape,h,p)}}function NC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(Q_(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,h=t(l,u,a);return o.makeTensorInfo(i.shape,u,h)}}var TC=IC((e=>Math.ceil(e))),_C=NC(wt,TC),CC={kernelName:wt,backendName:"cpu",kernelFunc:_C};function EC(e,t,n,r){let a=ya.getArrayFromDType(n,ya.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=ya.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?tf.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var $C=sC(((e,t)=>e===t?1:0)),AC=mC(Zt,$C,null,"bool"),FC={kernelName:Zt,backendName:"cpu",kernelFunc:AC},RC=IC((e=>Math.exp(e))),DC=NC(Jt,RC,"float32"),MC={kernelName:Jt,backendName:"cpu",kernelFunc:DC},OC=IC((e=>Math.expm1(e))),LC=NC(en,OC),zC={kernelName:en,backendName:"cpu",kernelFunc:LC},PC=IC((e=>Math.floor(e))),BC=NC(an,PC),WC={kernelName:an,backendName:"cpu",kernelFunc:BC};function VC(e,t,n,r,a,s,i,o,l){let u=Ti([r,s],n);for(let n=0;n<r;n++){let r=[],h=0;for(let t=0;t<a;t++){let s=e[n*a+t];h+=s*i[t],r.push(s)}if(h<0||h>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(h*s+e))}return u}function UC(e,t,n){let r=Ti(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}var GC=sC(((e,t)=>e>t?1:0)),HC=mC(hn,GC,null,"bool"),jC={kernelName:hn,backendName:"cpu",kernelFunc:HC},qC=sC(((e,t)=>e>=t?1:0)),KC=mC(pn,qC,null,"bool"),XC={kernelName:pn,backendName:"cpu",kernelFunc:KC},YC=sC(((e,t)=>e<t?1:0)),ZC=mC(xn,YC,null,"bool"),JC={kernelName:xn,backendName:"cpu",kernelFunc:ZC},QC=sC(((e,t)=>e<=t?1:0)),eE=mC(vn,QC,null,"bool"),tE={kernelName:vn,backendName:"cpu",kernelFunc:eE};function nE(e,t,n){let r=(t-e)/(n-1),a=ya.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var rE=IC((e=>Math.log(e))),aE=NC(kn,rE),sE={kernelName:kn,backendName:"cpu",kernelFunc:aE};function iE(e,t,n,r){let a=ya.getTypedArrayFromDType(r,ya.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var oE=sC(((e,t)=>Math.max(e,t))),lE=mC(An,oE),uE={kernelName:An,backendName:"cpu",kernelFunc:lE},hE=sC(((e,t)=>Math.min(e,t))),pE=mC(Pn,hE),dE={kernelName:Pn,backendName:"cpu",kernelFunc:pE},cE=sC(((e,t)=>e*t)),fE=gC(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),mE=mC(Un,cE,fE),gE={kernelName:Un,backendName:"cpu",kernelFunc:mE};function yE(e,t,n){let r=ya.createScalarValue(-1,n);return cE([],t,r,e,n)}var bE={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;Q_(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=yE(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},xE=sC(((e,t)=>e!==t?1:0)),vE=mC(Hn,xE,null,"bool"),wE={kernelName:Hn,backendName:"cpu",kernelFunc:vE};function kE(e,t,n,r,a){let s=t.length,i=ya.sizeFromShape(t),o=ya.computeStrides(t),l=ya.computeStrides(a),u=ya.getTypedArrayFromDType(n,ya.sizeFromShape(a));for(let t=0;t<i;++t){let n=ya.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[ya.locToIndex(a,s,l)]=e[t]}return u}function IE(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;Q_(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=kE(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var SE={kernelName:qr,backendName:"cpu",kernelFunc:IE};function NE(e,t,n,r){let[a,s]=tf.computeOutAndReduceShapes(e,r),i=ss(t,"int32"),o=ya.makeZerosTypedArray(ya.sizeFromShape(a),i),l=ya.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var TE={kernelName:nr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Q_(a,"prod");let o=a.shape.length,l=ya.parseAxisParam(s,a.shape),u=tf.getAxesPermutation(l,o),h=l,p=a,d=[];null!=u&&(p=IE({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(p),h=tf.getInnerMostAxes(h.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=NE(p.shape,p.dtype,c,h),y=m;return i&&(y=tf.expandShapeToKeepDim(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function _E(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ya.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=ya.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var CE=IC((e=>1/Math.sqrt(e))),EE=NC(mr,CE),$E={kernelName:mr,backendName:"cpu",kernelFunc:EE},AE=IC((e=>1/(1+Math.exp(-e)))),FE=SC(Ir,(e=>1/(1+Math.exp(-e)))),RE={kernelName:Ir,backendName:"cpu",kernelFunc:FE};function DE(e,t,n,r,a){let s=bo.isSliceContinous(r,t,n),i=ya.sizeFromShape(n),o=ya.computeStrides(r);if(s){let n=bo.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=Ti(r,a,"string"===a?tf.fromUint8ToStringArray(e):e),u=Ti(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?tf.fromStringArrayToUint8(u.values):u.values}function ME(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;Q_(a,"slice");let[o,l]=bo.parseSliceParams(a,s,i);bo.assertParamsValid(a,o,l);let u=DE(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var OE={kernelName:xr,backendName:"cpu",kernelFunc:ME};function LE(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),h=new Array(o),p=t[1];if(0===l){if(0!==o)throw new Error(tf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[ya.getArrayFromDType(n,0),[0,p],ya.getArrayFromDType(a,0),u,h]}let d=!0,c=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p];if(n<0)throw new Error(tf.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(tf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],d=d&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){let t=e,n=r;for(let e=0;e<o;++e)h[e]=e;return[t,[o,p],n,u,h]}{let t=f[l-1],s=ya.getArrayFromDType(n,t*p),d=ya.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p],a=c[n],i=(0===n?0:f[n-1])+a;c[n]++;for(let n=0;n<p;++n)s[i*p+n]=e[t*p+n];d[i]=r[t],h[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=i}return[s,[t,p],d,u,h]}}function zE(e,t,n,r,a){let s=ya.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,h=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==h)throw new Error(tf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,e));h=e,l.push(1)}else{if(t<0)throw new Error(tf.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==h){if(u<=0)throw new Error(tf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(tf.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[h]=e}if(ya.sizeFromShape(l)!==s)throw new Error(tf.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=ya.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function PE(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],h=o>0?a[o-1]+1:0;if(h<0)throw new Error(tf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=h;let d=p.reduce(((e,t)=>e*t),1),c=ya.getArrayFromDType(n,d);if(0===o)return h>0&&c.fill(i),[c,p];if(h<=0)throw new Error(tf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(tf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=h)throw new Error(tf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,h));y>g&&c.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=r[t];if(n<0||n>=l[0])throw new Error(tf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<h&&c.fill(i,g*u,h*u),[c,p]}var BE=IC((e=>Math.sqrt(e))),WE=SC(Nr,(e=>Math.sqrt(e))),VE={kernelName:Nr,backendName:"cpu",kernelFunc:WE},UE=sC(((e,t)=>{let n=e-t;return n*n})),GE=mC(Mr,UE),HE={kernelName:Mr,backendName:"cpu",kernelFunc:GE};function jE(e,t,n,r){let a=Ti(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}var qE=class{constructor(e,t,n,r,a,s){this.separator=ya.encodeString(e),this.nGramWidths=t,this.leftPad=ya.encodeString(n),this.rightPad=ya.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),h=s-(l+u),p=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let t=0;t<h;++t)d+=e[p+t].length;d+=u*this.rightPad.length,d+=(l+u+h-1)*this.separator.length,n[r+i]=new Uint8Array(d);let c=n[r+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<h-1;++t)m(e[p+t]),m(this.separator);if(h>0){m(e[p+h-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=ya.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=new Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}};function KE(e,t,n,r,a,s,i,o){return new qE(n,r,a,s,i,o).compute(e,t)}function XE(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function YE(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let l=0;l<r;++l){let r=a.length;XE(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=ya.getArrayFromDType("int32",2*s),u=new Array(s),h=[r,i],p=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*p]=e,l[2*p+1]=t,u[p]=a[p],++p;return[l,u,h]}function ZE(e,t){let n=ya.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=ya.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var JE=sC(((e,t)=>e-t)),QE=gC(((e,t,n,r)=>({real:e-n,imag:t-r}))),e$=mC(Wr,JE,QE),t$={kernelName:Wr,backendName:"cpu",kernelFunc:e$};function n$(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=Ti(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var r$=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function a$(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);a$(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}let a=e[t],s=n,i=r;for(ya.swap(e,n,t),r$(e[r],a)>0&&ya.swap(e,n,r);s<i;){for(ya.swap(e,s,i),s++,i--;r$(e[s],a)<0;)s+=1;for(;r$(e[i],a)>0;)i-=1}0===r$(e[n],a)?ya.swap(e,n,i):(i+=1,ya.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function s$(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=ya.getTypedArrayFromDType(n,i*r),u=ya.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(a$(i,r),i=i.slice(0,r)),a&&i.sort(r$);let h=t*r,p=l.subarray(h,h+r),d=u.subarray(h,h+r);for(let e=0;e<r;e++)p[e]=i[e].value,d[e]=i[e].index}let h=t.slice();return h[h.length-1]=r,[Ti(h,n,l),Ti(h,"int32",u)]}function i$(e,t,n,r){let a=ya.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[a]),l=new ja(s,r,e),u=[],h=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new ja(p,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=p[1],{outputValues:d.values,outputShape:c,indices:o}}vl("cpu",(()=>new tC),1);var o$=SC(Kt,(e=>e>=0?e:Math.exp(e)-1)),l$={kernelName:Kt,backendName:"cpu",kernelFunc:o$};function u$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;Q_([a],"leakyRelu");let i=ya.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=ya.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var h$={kernelName:bn,backendName:"cpu",kernelFunc:u$},p$=sC(((e,t)=>e<0?t*e:e));function d$(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;Q_([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=p$(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var c$={kernelName:tr,backendName:"cpu",kernelFunc:d$},f$=SC(ir,(e=>Math.max(0,e))),m$={kernelName:ir,backendName:"cpu",kernelFunc:f$},g$=SC(dr,(e=>Math.min(Math.max(0,e),6))),y$={kernelName:dr,backendName:"cpu",kernelFunc:g$};function b$(e,t,n,r,a){if("linear"===n)return uC({inputs:{x:t},backend:e});if("relu"===n)return f$({inputs:{x:t},backend:e});if("elu"===n)return o$({inputs:{x:t},backend:e});if("relu6"===n)return g$({inputs:{x:t},backend:e});if("prelu"===n)return d$({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return u$({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return FE({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function x$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=ya.sizeFromShape(a.shape),o=ya.inferFromImplicitShape(s,i),l=ya.sizeFromShape(o);ya.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var v$={kernelName:or,backendName:"cpu",kernelFunc:x$};function w$(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;Q_([a,s],"matMul");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ya.sizeFromShape(f),y=ya.sizeFromShape(m),b=Qi.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);ya.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,p]:[y,p,c],v=x$({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),w=x$({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,_=n.data.get(w.dataId).values,C=ya.computeStrides(v.shape),E=ya.computeStrides(w.shape),[$,A,F]=i?[C[0],1,C[1]]:[C[0],C[1],1],[R,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],O=I*S,L=Ti([N,I,S],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=P)for(let n=0;n<S;n+=P)for(let r=0;r<k;r+=P){let a=Math.min(t+P,I),s=Math.min(n+P,S),i=Math.min(r+P,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){let r=Math.min(e,g-1)*$,s=Math.min(e,y-1)*M;n+=T[r+o*A+a*F]*_[a*R+t*D+s]}z[e*O+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}var k$={kernelName:mt,backendName:"cpu",kernelFunc:w$};var I$={kernelName:ta,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=a,{transposeA:p,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=w$({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:d},backend:s}),u&&(n=xC({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=b$(s,t,c,h,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},S$=SC(Je,(e=>Math.acos(e))),N$={kernelName:Je,backendName:"cpu",kernelFunc:S$},T$=SC(Qe,(e=>Math.acosh(e))),_$={kernelName:Qe,backendName:"cpu",kernelFunc:T$};var C$={kernelName:tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;Q_(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=Ti(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var E$={kernelName:nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Q_(a,"all");let o=ya.parseAxisParam(s,a.shape),l=o,u=tf.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=IE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=tf.getInnerMostAxes(l.length,a.shape.length)),tf.assertAxesAreInnerMostDims("all",l,h.shape.length);let[p,d]=tf.computeOutAndReduceShapes(h.shape,l),c=ya.sizeFromShape(d),f=ya.makeZerosTypedArray(ya.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=x$({inputs:{x:g},backend:n,attrs:{shape:tf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var $$={kernelName:rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Q_(a,"any");let o=ya.parseAxisParam(s,a.shape),l=o,u=tf.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=IE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=tf.getInnerMostAxes(l.length,a.shape.length)),tf.assertAxesAreInnerMostDims("any",l,h.shape.length);let[p,d]=tf.computeOutAndReduceShapes(h.shape,l),c=ya.sizeFromShape(d),f=ya.makeZerosTypedArray(ya.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=x$({inputs:{x:g},backend:n,attrs:{shape:tf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var A$={kernelName:at,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Q_(a,"argMax");let i=ya.parseAxisParam(s,a.shape),o=tf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=IE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],tf.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[h,p]=tf.computeOutAndReduceShapes(l.shape,i),d=ya.sizeFromShape(h),c=ya.makeZerosTypedArray(d,"int32"),f=ya.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}};var F$={kernelName:st,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Q_(a,"argMin");let i=ya.parseAxisParam(s,a.shape),o=tf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=IE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],tf.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[h,p]=tf.computeOutAndReduceShapes(l.shape,i),d=ya.sizeFromShape(h),c=ya.makeZerosTypedArray(d,"int32"),f=ya.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}},R$=SC(it,(e=>Math.asin(e))),D$={kernelName:it,backendName:"cpu",kernelFunc:R$},M$=SC(ot,(e=>Math.asinh(e))),O$={kernelName:ot,backendName:"cpu",kernelFunc:M$},L$=SC(lt,(e=>Math.atan(e))),z$={kernelName:lt,backendName:"cpu",kernelFunc:L$},P$=sC(((e,t)=>Math.atan2(e,t))),B$=mC(ht,P$),W$={kernelName:ht,backendName:"cpu",kernelFunc:B$},V$=SC(ut,(e=>Math.atanh(e))),U$={kernelName:ut,backendName:"cpu",kernelFunc:V$};function G$(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ti(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let v=y*i-d,w=Math.max(0,v),k=Math.min(a.inHeight,h+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){let i=n*o-c,h=Math.max(0,i),d=Math.min(a.inWidth,p+i),y=f,b=0,v=0;for(let n=w;n<k;n+=l){let a=m+n*r[1];for(let n=h;n<d;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function H$(e,t,n,r,a=!1,s=!1){let i=Ti(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Ti(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(r.inHeight,p+g);for(let o=0;o<r.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=h;let x=Math.min(r.inWidth,d+p),v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=h){let l=o-p,u=m.get(e,n,o,t);u>v&&(v=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function j$(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ti(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let N=w*i-m,T=N;for(;T<0;)T+=u;let _=Math.min(a.inDepth,d+N),C=n+w*k;for(let n=0;n<a.outHeight;++n){let i=n*o-g,d=i;for(;d<0;)d+=h;let m=Math.min(a.inHeight,c+i),w=C+n*I;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(a.inWidth,f+i),g=w+n*S,k=b,I=0,N=0;for(let n=T;n<_;n+=u){let a=x+n*r[1];for(let n=d;n<m;n+=h){let i=a+n*r[2];for(let n=o;n<c;n+=p){let a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/N:k}}}}return x}var q$={kernelName:pt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Q_(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ya.assert(tf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=tf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&ya.arraysEqual(h.inShape,h.outShape))u=uC({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=ya.computeStrides(a.shape),r=G$(e,a.shape,a.dtype,t,h,"avg");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var K$={kernelName:ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Q_(a,"avgPool3d");let h=tf.computePool3DInfo(a.shape,s,i,1,o,l,u),p=j$(n.data.get(a.dataId).values,a.shape,a.dtype,ya.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};var X$={kernelName:ft,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Q_([a,s],"avgPool3DGrad");let h=tf.computePool3DInfo(s.shape,i,o,1,l,u),p=h.strideDepth,d=h.strideHeight,c=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=v-1-h.padInfo.front,S=k-1-h.padInfo.left,N=w-1-h.padInfo.top,T=Ti(s.shape,"float32"),_=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-I,i=r-N,o=a-S,l=0;for(let n=0;n<v;n+=y){let r=(s+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){let a=(i+n)/d;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=h.outWidth||Math.floor(s)!==s||(l+=C.get(e,r,a,s,t))}}}T.set(l*_,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};var Y$={kernelName:dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Q_([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=tf.computePool2DInfo(i.shape,o,l,1,u),p=h.strideHeight,d=h.strideWidth,c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.effectiveFilterHeight,b=h.effectiveFilterWidth,x=b-1-h.padInfo.left,v=y-1-h.padInfo.top,w=Ti(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,S=Ti(a.shape,"float32",I);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=n-v,s=r-x,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/p;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){let a=(s+n)/d;a<0||a>=h.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var Z$={kernelName:on,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;ya.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ya.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ya.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Q_([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let h=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),g=f.length,y=c.length,b=d.length,x=p.length,v=0,w=0,k=0,I=0;for(let e=0;e<h.length;++e)m[e]=f[v++]+(h[e]-p[w++])*c[k++]/Math.sqrt(d[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var J$={kernelName:gt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Q_([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=tf.getReshaped(a.shape,s,o),u=tf.getPermuted(l.length,s.length),h=tf.getReshapedPermuted(a.shape,s,o),p=tf.getSliceBeginCoords(i,s.length),d=tf.getSliceSize(h,i,s.length),c=x$({inputs:{x:a},backend:n,attrs:{shape:l}}),f=IE({inputs:{x:c},backend:n,attrs:{perm:u}}),m=x$({inputs:{x:f},backend:n,attrs:{shape:h}}),g=ME({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var Q$={kernelName:yt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=wC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};var eA={kernelName:xt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=tf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},tA=SC(kt,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),nA={kernelName:kt,backendName:"cpu",kernelFunc:tA},rA={kernelName:St,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(ya.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function aA(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var sA={kernelName:fn,backendName:"cpu",kernelFunc:aA};function iA(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ya.parseAxisParam(a,t[0].shape)[0],i=tf.computeOutShape(t.map((e=>e.shape)),s);if(0===ya.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>ya.sizeFromShape(e.shape)>0));if(1===o.length)return uC({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));if(tf.assertParamsConsistent(l,s),"complex64"===o[0].dtype){let e=o.map((e=>pC({inputs:{input:e},backend:n}))),t=o.map((e=>aA({inputs:{input:e},backend:n}))),r=iA({inputs:e,backend:n,attrs:{axis:s}}),a=iA({inputs:t,backend:n,attrs:{axis:s}}),i=iC({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=o.map((e=>{let t=ya.sizeFromShape(e.shape.slice(s));return x$({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=tf.computeOutShape(u.map((e=>e.shape)),1);let p=1===u[0].shape[0],d=EC(h,i,t[0].dtype,p),c=tf.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var oA={kernelName:Nt,backendName:"cpu",kernelFunc:iA};function lA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r;Q_([a,s],"conv2d");let p=tf.convertConv2DDataFormat(l),d=tf.computeConv2DInfo(a.shape,s.shape,i,u,o,h,!1,p),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new ja(d.outShape,a.dtype),w=ya.computeStrides(a.shape),k=ya.computeStrides(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],_=v.strides[0],C=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,$=x?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<d.batchSize;++e){let t=e*I,n=e*_;for(let e=0;e<d.outHeight;++e){let r=n+e*C,a=e*d.strideHeight-b;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=d.inHeight)continue;let s=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){let t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=i+r*N,o=s+e*k[1];for(let e=0;e<d.inChannels;++e){let n=A[a+e*T];for(let e=0;e<d.outChannels;++e)R[t+e*$]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var uA={kernelName:Tt,backendName:"cpu",kernelFunc:lA};var hA={kernelName:_t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r;Q_([a,s],"conv2dBackpropFilter");let p=tf.convertConv2DDataFormat(l),d=tf.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new ja(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new ja(a.shape,a.dtype,w),S=new ja(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((v-e)/c)),n=Math.min(d.outHeight,(d.inHeight+v-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let h=t;h<n;++h){let t=e+h*c-v;for(let e=a;e<s;++e){let n=r+e*f-x;l+=y?I.get(u,t,n,i)*S.get(u,h,e,o):I.get(u,i,t,n)*S.get(u,o,h,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var pA={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r;Q_([a,s],"conv2dBackpropInput");let p=ya.computeStrides(s.shape),d=ya.computeStrides(a.shape),c=tf.convertConv2DDataFormat(u),f=tf.computeConv2DInfo(i,s.shape,o,1,l,h,!1,c),m=new ja(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=p,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:_,outChannels:C,outHeight:E,outWidth:$,strideHeight:A,strideWidth:F}=f;c=f.dataFormat;let R=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){let r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(I+r)/A);for(let i=0;i<_;++i){let o=i-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min($,(S+o)/F),h=0;for(let n=a;n<s;++n){let a=n*A-r;for(let r=l;r<u;++r){let s=B*e+W*n+V*r,i=x*(I-1-a)+v*(S-1-(r*F-o))+w*t;for(let e=0;e<C;++e){h+=y[s+U*e]*b[i+e]}}}g[O*e+L*n+z*i+P*t]=h}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var dA={kernelName:Et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;Q_([a,s],"conv3d");let u=tf.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new ja(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=ya.computeStrides(a.shape),N=ya.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*S[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<h;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var cA={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;Q_([a,s],"conv3dBackpropFilterV2");let u=ya.computeStrides(a.shape),h=ya.computeStrides(s.shape),p=tf.computeConv3DInfo(a.shape,l,i,1,o),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new ja(p.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,_,C]=h,E=n.data.get(a.dataId).values,[$,A,F,R]=u,D=p.padInfo.front,M=p.padInfo.left,O=p.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(p.outDepth,(p.inDepth+D-e)/d),r=e*v;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((O-a)/c)),i=Math.min(p.outHeight,(p.inHeight+O-a)/c),o=a*w+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(p.outWidth,(p.inWidth+M-r)/f),h=r*k+o;for(let o=0;o<p.inChannels;++o){let m=o*I+h;for(let h=0;h<p.outChannels;++h){let g=0;for(let m=0;m<p.batchSize;++m){let p=m*$,y=m*N;for(let m=t;m<n;++m){let t=(e+m*d-D)*A+p,n=m*T+y;for(let e=s;e<i;++e){let s=(a+e*c-O)*F+t,i=e*_+n;for(let e=l;e<u;++e){let t=e*C+i;g+=E[(r+e*f-M)*R+s+o]*S[t+h]}}}}x[m+h]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var fA={kernelName:At,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;Q_([a],"conv3dBackpropInputV2");let u=ya.computeStrides(a.shape),h=ya.computeStrides(s.shape),p=tf.computeConv3DInfo(l,s.shape,o,1,i),d=new ja(p.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,I=n.data.get(s.dataId).values,[S,N,T,_]=h,{batchSize:C,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=E-1-p.padInfo.front,G=$-1-p.padInfo.top,H=A-1-p.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){let r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){let o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,($+o)/W);for(let h=0;h<M;++h){let p=h-H,d=Math.max(0,Math.ceil(p/V)),C=Math.min(P,(A+p)/V),F=0;for(let n=a;n<s;++n){let a=n*B-r;for(let r=l;r<u;++r){let s=r*W-o;for(let i=d;i<C;++i){let o=x*e+v*n+w*r+k*i,l=S*(E-1-a)+N*($-1-s)+T*(A-1-(i*V-p))+_*t;for(let e=0;e<O;++e){F+=b[o+e]*I[l+e]}}}}c[f*e+m*n+g*i+y*h+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},mA=SC(Ft,(e=>Math.cos(e))),gA={kernelName:Ft,backendName:"cpu",kernelFunc:mA},yA=SC(Rt,(e=>Math.cosh(e))),bA={kernelName:Rt,backendName:"cpu",kernelFunc:yA};var xA={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[h,p,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=Ti([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=ya.computeStrides(a.shape),k=ya.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=h)continue;let o=m>1?(a-n)*(p-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){let h=m>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(h<0||h>p-1)for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(h),a=Math.ceil(h),o=h-n;for(let l=0;l<g;l++){let h=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(h<0||h>d-1){for(let n=0;n<c;n++){let r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}let p=Math.floor(h),m=Math.ceil(h),b=h-p;for(let r=0;r<c;r++){let s=r+p*w[2]+n*w[1]+i*w[0],u=v[s];s=r+m*w[2]+n*w[1]+i*w[0];let h=v[s];s=r+p*w[2]+a*w[1]+i*w[0];let d=v[s];s=r+m*w[2]+a*w[1]+i*w[0];let c=u+(h-u)*b,f=d+(v[s]-d)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(h);for(let r=0;r<c;r++){let a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var vA={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Q_(a,"cumprod");let l=tf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=IE({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=tf.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=ss(u.dtype,"int32"),d=ya.makeOnesTypedArray(ya.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?1:c[n];else{let r=m(e,t-1);d[n]=i?c[r]*d[r]:c[n]*d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=IE({inputs:{x:g},backend:n,attrs:{perm:tf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var wA={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Q_(a,"cumsum");let l=tf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=IE({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=tf.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=ss(u.dtype,"int32"),d=ya.makeZerosTypedArray(ya.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?0:c[n];else{let r=m(e,t-1);d[n]=i?c[r]+d[r]:c[n]+d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=IE({inputs:{x:g},backend:n,attrs:{perm:tf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var kA={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=wC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=kC(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var IA={kernelName:zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ya.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],h=a.shape[3],p=l*s,d=u*s,c=h/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*d*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){let a=Math.floor(t/s),i=(r*s+t%s)*c;for(let t=0;t<c;++t){let r=t+i+h*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,p,d,c],a.dtype,m)}};function SA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;Q_([a,s],"depthwiseConv2DNative");let h=ya.computeStrides(a.shape),p=ya.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),ya.assert(tf.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let c=tf.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,w=c.outChannels/c.inChannels,k=new ja(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<c.batchSize;++e){let t=e*h[0],n=e*k.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*k.strides[1],a=e*c.strideHeight-v;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*p[0],i=t+n*h[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*p[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var NA={kernelName:Pt,backendName:"cpu",kernelFunc:SA};var TA={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r;Q_([a,s],"depthwiseConv2dNativeBackpropFilter");let p=tf.computeConv2DInfo(a.shape,h,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new ja(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(a.dataId).values,w=new ja(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new ja(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(p.outHeight,(p.inHeight+b-e)/d);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(p.outWidth,(p.inWidth+y-r)/c);for(let i=0;i<p.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<p.batchSize;++l)for(let h=t;h<n;++h){let t=e+h*d-b;for(let e=a;e<s;++e){let n=r+e*c-y;u+=w.get(l,t,n,o)*I.get(l,h,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var _A={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r;Q_([a,s],"depthwiseConv2DNativeBackpropInput");let p=ya.computeStrides(a.shape),d=ya.computeStrides(s.shape),c=tf.computeConv2DInfo(h,s.shape,i,o,l,u,!0),f=new ja(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=p,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:_,filterHeight:C,filterWidth:E,inChannels:$,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=C-1-c.padInfo.top,P=E-1-c.padInfo.left,B=R/$;for(let e=0;e<_;++e)for(let t=0;t<$;++t)for(let n=0;n<A;++n){let r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(C+r)/O);for(let i=0;i<F;++i){let o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(E+o)/L),h=0;for(let n=a;n<s;++n){let a=n*O-r;for(let r=l;r<u;++r){let s=v*e+w*n+k*r,i=S*(C-1-a)+N*(E-1-(r*L-o))+T*t;for(let e=0;e<B;++e){h+=x[s+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=h}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var CA={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=ya.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Ti([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},EA={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,h=r.shape.length,p=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=tf.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),_=ya.sizeFromShape(T),C=T.length,E=ya.getArrayFromDType(r.dtype,_);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*v-x.top;for(let s=0;s<b;++s){let i=s*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){let s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){let c=i+n*N;if(c>=0&&c<m){let i=ya.locToIndex([e,s,c,o],h,ya.computeStrides(r.shape)),f=ya.locToIndex([t,n,o],d,ya.computeStrides(a.shape)),m=u[i]+p[f];m>l&&(l=m)}}}E[ya.locToIndex([e,t,s,o],C,ya.computeStrides(T))]=l}}}return{dataId:l.write(ya.toTypedArray(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},$A={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=ya.toNestedArray(r.shape,u.data.get(r.dataId).values),p=ya.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=tf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);ya.assert(s.rank===N.length,(()=>`Error in ${Ht}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=ya.toNestedArray(N,u.data.get(s.dataId).values),_=ya.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=t,l=n)}}}_[o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(ya.toTypedArray(_,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},AA={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=ya.toNestedArray(r.shape,u.data.get(r.dataId).values),p=ya.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=tf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);ya.assert(s.rank===N.length,(()=>`Error in ${Gt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=ya.toNestedArray(N,u.data.get(s.dataId).values),_=ya.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=r,l=u)}}}_[e][o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(ya.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function FA(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;Q_(s,"sum"),t="bool"===s.dtype?cC({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):uC({inputs:{x:s},backend:r});let l=t.shape.length,u=ya.parseAxisParam(i,t.shape),h=tf.getAxesPermutation(u,l),p=u,d=t;null!=h&&(d=IE({inputs:{x:t},backend:r,attrs:{perm:h}}),p=tf.getInnerMostAxes(p.length,l)),tf.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[c,f]=tf.computeOutAndReduceShapes(d.shape,p),m=lC(r,c,tf.upcastType(d.dtype,"int32")),g=ya.sizeFromShape(f),y=r.data.get(m.dataId).values,b=r.data.get(d.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){let e=m;m=x$({inputs:{x:m},backend:r,attrs:{shape:tf.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=h&&r.disposeIntermediateTensorInfo(d),m}var RA={kernelName:Tr,backendName:"cpu",kernelFunc:FA};var DA={kernelName:qt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=tf.decodeEinsumEquation(a,s.length);tf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=tf.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let e=0;e<p;++e){for(let t of h[e]){let e,{permutationIndices:r,expandDims:a}=tf.getEinsumPermutation(c,l[t]);tf.isIdentityPermutation(r)?e=s[t]:(e=IE({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);ya.arraysEqual(e.shape,i)||(e=x$({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=mE({inputs:{a:e,b:d},backend:n}),f.push(d))}e<p-1&&(u[e]>=0&&(d=FA({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};var MA={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;Q_([r,a],"eluGrad");let s=new Float32Array(ya.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},OA=tf.ERF_P,LA=tf.ERF_A1,zA=tf.ERF_A2,PA=tf.ERF_A3,BA=tf.ERF_A4,WA=tf.ERF_A5,VA=SC(Yt,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+OA*n);return t*(1-((((WA*r+BA)*r+PA)*r+zA)*r+LA)*r*Math.exp(-n*n))})),UA={kernelName:Yt,backendName:"cpu",kernelFunc:VA};function GA(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(ya.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),x$({inputs:{x:a},backend:n,attrs:{shape:o}})}var HA={kernelName:Qt,backendName:"cpu",kernelFunc:GA},jA=sC(((e,t)=>e/t)),qA=mC(jt,jA),KA={kernelName:jt,backendName:"cpu",kernelFunc:qA};function XA(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],h=ya.sizeFromShape(u),p=ya.getTypedArrayFromDType("float32",h),d=ya.getTypedArrayFromDType("float32",h);for(let e=0;e<a;e++){let r=ME({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=ME({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=iC({inputs:{real:r,imag:a},backend:n}),{real:u,imag:h}=YA(i,t,n),c=tf.mergeRealAndImagArrays(u,h);for(let t=0;t<s;t++){let n=tf.getComplexWithIndex(c,t);p[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=iC({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function YA(e,t,n){let r=ya.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return!(e&e-1)}(r)){let a=ZA(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",ya.createScalarValue(r,"float32")),i=uC({inputs:{x:s},backend:n}),l=KA.kernelFunc({inputs:{a:e,b:s},backend:n}),u=KA.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=tf.exponent(a*r,t,n),l=tf.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),tf.assignToTypedArray(r,s,i,a)}return r}(tf.mergeRealAndImagArrays(s,i),r,t);return tf.splitRealAndImagArrays(e)}}function ZA(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=tf.mergeRealAndImagArrays(e,t),i=n/2,o=tf.complexWithEvenIndex(s),l=o.real,u=o.imag,h=[l.length],p=a.makeTensorInfo(h,"float32",l),d=a.makeTensorInfo(h,"float32",u),c=iC({inputs:{real:p,imag:d},backend:a}),f=tf.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=iC({inputs:{real:b,imag:x},backend:a}),w=ZA(l,u,i,r,a),k=w.real,I=w.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),_=iC({inputs:{real:N,imag:T},backend:a}),C=ZA(m,g,i,r,a),E=C.real,$=C.imag,A=[E.length],F=a.makeTensorInfo(A,"float32",E),R=a.makeTensorInfo(A,"float32",$),D=iC({inputs:{real:F,imag:R},backend:a}),M=tf.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=iC({inputs:{real:L,imag:z},backend:a}),B=mE({inputs:{a:P,b:D},backend:a}),W=xC({inputs:{a:_,b:B},backend:a}),V=e$({inputs:{a:_,b:B},backend:a}),U=pC({inputs:{input:W},backend:a}),G=pC({inputs:{input:V},backend:a}),H=aA({inputs:{input:W},backend:a}),j=aA({inputs:{input:V},backend:a}),q=iA({inputs:[U,G],backend:a,attrs:{axis:0}}),K=iA({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var JA={kernelName:tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=ya.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=x$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=XA(i,!1,n),l=x$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function QA(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||ya.inferDtype(a),o=ya.getArrayFromDType(i,ya.sizeFromShape(r));return function(e,t){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var eF={kernelName:nn,backendName:"cpu",kernelFunc:QA};var tF={kernelName:rn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=ya.getTypedArrayFromDType(r.dtype,ya.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,h=a.data.get(r.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let e=0;e<l;e++){let r=e*u;for(let a=0;a<u;a++){let i=Math.round(l-e-1),o=t+n+r+a,p=h[o];if(i>=0&&i<l){p=h[t+n+i*u+a]}s[o]=p}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},nF=sC(((e,t)=>Math.floor(e/t))),rF=mC(sn,nF,null,"int32"),aF={kernelName:sn,backendName:"cpu",kernelFunc:rF};var sF={kernelName:na,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=lA({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=xC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=b$(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var iF={kernelName:ra,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=SA({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=xC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=b$(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var oF={kernelName:un,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=ya.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,h,p]=tf.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=VC(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,h,p,r.shape,s);return n.makeTensorInfo(l,r.dtype,d.values)}};var lF={kernelName:ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;Q_([a,s],"gatherV2");let l=ya.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,h=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];ya.assert(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}let p=o;null==o&&(p=0);let d=ya.sizeFromShape(s.shape),c=tf.segment_util.collectGatherOpShapeInfo(a,s,l,p),f=x$({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=x$({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=UC(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}};var uF={kernelName:cn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=ya.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=x$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=XA(i,!0,n),l=x$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},hF=SC(mn,(e=>Number.isFinite(e)?1:0),"bool"),pF={kernelName:mn,backendName:"cpu",kernelFunc:hF},dF=SC(gn,(e=>Math.abs(e)===1/0?1:0),"bool"),cF={kernelName:gn,backendName:"cpu",kernelFunc:dF},fF=SC(yn,(e=>Number.isNaN(e)?1:0),"bool"),mF={kernelName:yn,backendName:"cpu",kernelFunc:fF};var gF={kernelName:wn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=nE(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},yF=SC(In,(e=>Math.log1p(e))),bF={kernelName:In,backendName:"cpu",kernelFunc:yF},xF=sC(((e,t)=>e&&t)),vF=mC(Sn,xF,null,"bool"),wF={kernelName:Sn,backendName:"cpu",kernelFunc:vF},kF=SC(Nn,(e=>e?0:1),"bool"),IF={kernelName:Nn,backendName:"cpu",kernelFunc:kF},SF=sC(((e,t)=>e||t)),NF=mC(Tn,SF,null,"bool"),TF={kernelName:Tn,backendName:"cpu",kernelFunc:NF};var _F={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;Q_(a,"LRN");let u=a.shape[3],h=u-1,p=n.data.get(a.dataId).values,d=ya.sizeFromShape(a.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,h),a=0;for(;n<=r;n++){let e=p[n];a+=e*e}return a}for(let e=0;e<d;e++){let t=f(e),n=p[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}};var CF={kernelName:En,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r;Q_(i,"LRNGrad");let p=ya.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){let t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*h*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-h)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function EF(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,h=ya.parseAxisParam(s,l),p=h,d=tf.getAxesPermutation(p,u),c=o.data.get(a.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=kE(c,l,a.dtype,d,e),p=tf.getInnerMostAxes(p.length,u),l=e}Q_(a,"max"),tf.assertAxesAreInnerMostDims("max",p,u);let[f,m]=tf.computeOutAndReduceShapes(l,p),g=iE(c,ya.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),b=f;return i&&(b=tf.expandShapeToKeepDim(f,h)),{dataId:y,shape:b,dtype:a.dtype}}var $F={kernelName:$n,backendName:"cpu",kernelFunc:EF};var AF={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Q_(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ya.assert(tf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=tf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&ya.arraysEqual(h.inShape,h.outShape))u=uC({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=ya.computeStrides(a.shape),r=G$(e,a.shape,a.dtype,t,h,"max");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var FF={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Q_(a,"maxPool3d");let h=tf.computePool3DInfo(a.shape,s,i,1,o,l,u),p=j$(n.data.get(a.dataId).values,a.shape,a.dtype,ya.computeStrides(a.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};var RF={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Q_([a,s],"maxPool3DGrad");let h=tf.computePool3DInfo(s.shape,i,o,1,l,u),p=function(e,t){let n=Ti(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let w=Math.min(t.inHeight,h+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,p+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){let n=t-b;for(let r=d;r<w;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*h*p+a*h+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),h),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterDepth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=b-1-h.padInfo.front,k=v-1-h.padInfo.left,I=x-1-h.padInfo.top,S=Ti(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-w,i=r-I,o=a-k,l=0;for(let n=0;n<b;n+=m){let r=(s+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){let u=(o+i)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;let d=b*x*v-1-p.get(e,r,s,u,t)===n*x*v+a*v+i?1:0;0!==d&&(l+=N.get(e,r,s,u,t)*d)}}}S.set(l,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};var DF={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Q_([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=tf.computePool2DInfo(o.shape,l,u,1,h,p),c=n.data.get(o.dataId).values,f=Ti(d.outShape,o.dtype,H$(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ti(o.shape,"float32"),S=n.data.get(a.dataId).values,N=Ti(a.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-k,s=r-w,i=0;for(let n=0;n<x;n+=y){let r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){let o=(s+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var MF={kernelName:On,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;Q_(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,h=tf.computePool2DInfo(r.shape,a,s,[1,1],i),[p,d]=function(e,t,n,r,a){let s=G$(e,0,n,ya.computeStrides(t),a,"max"),i=H$(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,h),c=l.write(p,h.outShape,r.dtype),f=l.write(d,h.outShape,r.dtype);return[{dataId:c,shape:h.outShape,dtype:r.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}};var OF={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=ya.parseAxisParam(s,a.shape),l=tf.computeOutAndReduceShapes(a.shape,o)[1],u=ya.sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(p);let d=cC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(d);let c=qA({inputs:{a:d,b:p},backend:n});h.push(c);let f=FA({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var LF={kernelName:zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Q_(a,"min");let o=ya.parseAxisParam(s,a.shape),l=o,u=tf.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=IE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=tf.getInnerMostAxes(l.length,a.shape.length)),tf.assertAxesAreInnerMostDims("min",l,h.shape.length);let[p,d]=tf.computeOutAndReduceShapes(h.shape,l),c=ya.sizeFromShape(d),f=ya.makeZerosTypedArray(ya.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=x$({inputs:{x:g},backend:n,attrs:{shape:tf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var zF={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;Q_(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),h="reflect"===i?0:1,p=n.data.get(a.dataId).values,d=a.shape.length,c=ya.computeStrides(a.shape),f=ya.sizeFromShape(o),m=o.length,g=ya.computeStrides(o),y=ya.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=ya.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+h);t=t.map(((e,t)=>e-l[t]));let n=ya.locToIndex(t,d,c);y[e]=p[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},PF=sC(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),BF=mC(Wn,PF),WF={kernelName:Wn,backendName:"cpu",kernelFunc:BF},VF=y(E());function UF(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=ya.parseAxisParam([o],a.shape),u=EF({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=tf.expandShapeToKeepDim(u.shape,l),p=x$({inputs:{x:u},backend:n,attrs:{shape:h}}),d=e$({inputs:{a:a,b:p},backend:n}),c=DC({inputs:{x:d},backend:n}),f=FA({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=x$({inputs:{x:f},backend:n,attrs:{shape:h}}),g=qA({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var GF={kernelName:Er,backendName:"cpu",kernelFunc:UF};var HF={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;Q_(a,"multinomial");let l=o?a:UF({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],c=ya.makeZerosTypedArray(ya.sizeFromShape(d),"int32");for(let e=0;e<u;++e){let t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];let r=VF.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}},jF=am.nonMaxSuppressionV3Impl;var qF={kernelName:jn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Q_(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p}=jF(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},KF=am.nonMaxSuppressionV4Impl;var XF={kernelName:qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Q_(a,"NonMaxSuppressionPadded");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=KF(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},YF=am.nonMaxSuppressionV5Impl;var ZF={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Q_(a,"NonMaxSuppressionWithScore");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=YF(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var JF={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;Q_(a,"oneHot");let l=ya.sizeFromShape(a.shape),u=new Float32Array(l*s);u.fill(o);let h=n.data.get(a.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<s&&(u[e*s+h[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function QF(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=pC({inputs:{input:r},backend:n}),t=QF({inputs:{x:e},backend:n}),a=aA({inputs:{input:r},backend:n}),s=QF({inputs:{x:a},backend:n}),i=iC({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return QA({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var eR={kernelName:Zr,backendName:"cpu",kernelFunc:QF};var tR={kernelName:Xn,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=pC({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=aA({inputs:{input:a},backend:r}),i=QF({inputs:{x:s},backend:r}),o=iC({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return QA({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function nR(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return GA({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ya.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ya.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=iA({inputs:t.map((e=>{let t=GA({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var rR={kernelName:Zn,backendName:"cpu",kernelFunc:nR};var aR={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;Q_(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,h=ya.sizeFromShape(a.shape),p=a.shape.length,d=ya.computeStrides(a.shape),c=ya.sizeFromShape(o),f=o.length,m=ya.computeStrides(o),g=ya.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<h;e++){let t=ya.indexToLoc(e,p,d).map(((e,t)=>e+l[t]));g[ya.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},sR=sC(((e,t)=>Math.pow(e,t))),iR=mC(er,sR),oR={kernelName:er,backendName:"cpu",kernelFunc:iR};var lR={kernelName:rr,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=_E(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},uR=SC(sr,(e=>1/e)),hR={kernelName:sr,backendName:"cpu",kernelFunc:uR};var pR={kernelName:hr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Q_(a,"resizeBilinear");let l=ya.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(ya.sizeFromShape([p,u,h,f])),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=0,v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<h;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(c-1,Math.ceil(t)),h=o+n*l[2],p=u+n*l[2],d=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[h+e],n=m[p+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([p,u,h,f],"float32",g)}};var dR={kernelName:pr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Q_([s,a],"resizeBilinearGrad");let o=ya.computeStrides(a.shape),[l,u,h,p]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*h*p),m=[i&&d>1?u-1:u,i&&c>1?h-1:h],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*u,k=d*a,I=l*u,S=l*a;for(let e=0;e<p;e++){let t=x[v++];f[c+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,h,u,p],"float32",f)}};var cR={kernelName:lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Q_(a,"resizeNearestNeighbor");let l=ya.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*u*h*f),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=y[0]/b[0],v=y[1]/b[1],w=0;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?x*(e+.5):x*e,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<h;e++){let t=i?v*(e+.5):v*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([p,u,h,f],a.dtype,g)}};var fR={kernelName:ur,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Q_([s,a],"resizeNearestNeighborGrad");let o=ya.computeStrides(a.shape),l=ya.computeStrides(s.shape),[u,h,p,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*h*p*d),g=n.data.get(s.dataId).values,y=[i&&c>1?h-1:h,i&&f>1?p-1:p],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<p;r++){let s=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){let u=s+a;if(u<0||u>=c)continue;let d=t+u*l[1],m=u*x;if(e===Math.min(h-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){let t=e+y;if(t<0||t>=f)continue;let a=d+t*l[2],s=t*v;r===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var mR={kernelName:cr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;Q_(a,"reverse");let i=a.shape.length,o=ya.parseAxisParam(s,a.shape);if(0===i)return uC({inputs:{x:a},backend:n});let l=new ja(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},gR={kernelName:ea,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=ya.getTypedArrayFromDType(r.dtype,ya.sizeFromShape(r.shape)),[u,h,p,d]=r.shape,[c,f]=tf.getImageCenter(i,h,p),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=e*p*h*d;for(let e=0;e<h;e++){let n=e*(p*d);for(let r=0;r<p;r++){let a=r*d;for(let i=0;i<d;i++){let o=[u,e,r,i],b=o[2],x=o[1],v=(b-c)*g-(x-f)*m,w=(b-c)*m+(x-f)*g;v=Math.round(v+c),w=Math.round(w+f);let k=s;if("number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<p&&w>=0&&w<h){k=y[t+w*(p*d)+v*d+i]}l[t+n+a+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},yR=SC(fr,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),bR={kernelName:fr,backendName:"cpu",kernelFunc:yR};function xR(e,t,n,r,a,s,i,o,l,u){let h=[r/a,a],p=e.values,d=t.values;if(0===r)return Ti(n,t.dtype);let c=Ti(h,t.dtype);c.values.fill(l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=p[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[l*a+n]+=d[e*a+n]:c.values[l*a+n]=0===t.rank?d[0]:d[e*a+n]}return c}var vR={kernelName:gr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=tf.calculateShapes(s,a,i),d=xR(n.bufferSync(a),n.bufferSync(s),i,p,u,l,o,h,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};var wR={kernelName:yr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;Q_([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=ss(a.dtype,s.dtype),p=ya.makeZerosTypedArray(ya.sizeFromShape(a.shape),h),d=0,c=0===i||i>1||1===a.shape.length?1:ya.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?p[d++]=l[e]:p[d++]=u[e];return n.makeTensorInfo(a.shape,h,p)}},kR=tf.SELU_SCALEALPHA,IR=tf.SELU_SCALE,SR=SC(br,(e=>e>=0?IR*e:kR*(Math.exp(e)-1))),NR={kernelName:br,backendName:"cpu",kernelFunc:SR},TR=SC(kr,(e=>e<0?-1:e>0?1:0)),_R={kernelName:kr,backendName:"cpu",kernelFunc:TR},CR=SC(vr,(e=>Math.sin(e))),ER={kernelName:vr,backendName:"cpu",kernelFunc:CR},$R=SC(wr,(e=>Math.sinh(e))),AR={kernelName:wr,backendName:"cpu",kernelFunc:$R},FR=Math.log(1.1920928955078125e-7)+2,RR=SC(Sr,(e=>{let t,n=e>-FR,r=e<FR,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),DR={kernelName:Sr,backendName:"cpu",kernelFunc:RR};var MR={kernelName:_r,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Q_([a],"spaceToBatchND");let o=ya.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=aR.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=tf.getReshaped(u.shape,s,o,!1),p=tf.getPermuted(h.length,s.length,!1),d=tf.getReshapedPermuted(u.shape,s,o,!1),c=x$({inputs:{x:u},backend:n,attrs:{shape:h}}),f=IE({inputs:{x:c},backend:n,attrs:{perm:p}}),m=x$({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}};var OR={kernelName:$r,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values[0],[p,d,c,f,m]=LE(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var LR={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,h,p]=zE(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};var zR={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=PE(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}};var PR={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=PE(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}};var BR={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=tf.calculateShapes(s,a,o),c=xR(n.bufferSync(a),n.bufferSync(s),o,d,h,u,l,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,c.dtype,c.values)}};var WR={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ya.parseAxisParam(i,a.shape)[0],l=tf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=ME({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},VR={kernelName:Or,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;Q_(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},UR=SC(Jr,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),GR={kernelName:Jr,backendName:"cpu",kernelFunc:UR};var HR={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r;Q_(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=bo.sliceInfo(a.shape,s,i,o,l,u,h,p,d);if(g)c=x$({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){ya.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=bo.computeOutShape(x,v,w),t=ME({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});c=x$({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=jE(f,n.bufferSync(a),w,x);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}};var jR={kernelName:zr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.data.get(h.dataId).values,c=n.data.get(p.dataId).values,[f,m]=KE(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var qR={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,h,p]=YE(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var KR={kernelName:Br,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=ZE(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},XR=SC(Vr,(e=>Math.tan(e))),YR={kernelName:Vr,backendName:"cpu",kernelFunc:XR},ZR=SC(Ur,(e=>Math.tanh(e)));var JR={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;Q_(a,"tile");let i=n$(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var QR={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;Q_(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=s$(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var eD={kernelName:jr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=ya.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=ya.getTypedArrayFromDType(a.dtype,ya.sizeFromShape(g));w.fill(l);let k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<h;++e){let t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let h=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,f=tD(h,d,o),m=tD(c,p,o);switch(i){case"nearest":s=rD(k,p,d,b,x,v,e,m,f,a,l);break;case"bilinear":s=aD(k,p,d,b,x,v,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function tD(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ya.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return ya.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ya.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function nD(e,t,n,r,a,s,i,o,l,u,h){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:h}function rD(e,t,n,r,a,s,i,o,l,u,h){return nD(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,h)}function aD(e,t,n,r,a,s,i,o,l,u,h){let p=Math.floor(o),d=Math.floor(l),c=p+1,f=d+1;return(c-o)*((f-l)*nD(e,t,n,r,a,s,i,p,d,u,h)+(l-d)*nD(e,t,n,r,a,s,i,p,f,u,h))+(o-p)*((f-l)*nD(e,t,n,r,a,s,i,c,d,u,h)+(l-d)*nD(e,t,n,r,a,s,i,c,f,u,h))}var sD={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Q_(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=i$(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var iD={kernelName:Xr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i).fill(0),p=a.shape.slice();p[s]=1;let d=new Array(o);for(let e=0;e<d.length;e++){h[s]=e;let t=ME({inputs:{x:a},backend:n,attrs:{begin:h,size:p}});d[e]=x$({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}};var oD={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;Q_(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,h=s;for(let e=0;e<u;++e){let t=GA({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,l.push(t)}for(let e=0;e<i;++e){let t=ya.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=AC({inputs:{a:r,b:h},backend:n}),i=cC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=mE({inputs:{a:i,b:a},backend:n}),p=FA({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),l.push(r),l.push(s),l.push(i),l.push(u),l.push(p)}let p=nR({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},lD=[I$,aC,N$,_$,vC,C$,E$,$$,A$,F$,D$,O$,z$,W$,U$,q$,K$,X$,Y$,k$,Z$,J$,Q$,eA,fC,CC,nA,oC,rA,oA,uA,hA,pA,dA,cA,fA,gA,bA,xA,vA,wA,kA,IA,NA,TA,_A,CA,EA,$A,AA,DA,l$,MA,FC,UA,MC,HA,zC,JA,eF,tF,WC,aF,sF,iF,oF,lF,jC,XC,hC,uF,sA,pF,cF,mF,h$,JC,tE,gF,sE,bF,wF,IF,TF,_F,CF,$F,uE,AF,FF,RF,DF,MF,OF,LF,dE,zF,WF,HF,gE,bE,qF,XF,ZF,wE,JF,tR,rR,aR,oR,c$,TE,lR,dC,KA,hR,m$,y$,v$,pR,dR,cR,fR,mR,gR,bR,$E,vR,wR,NR,RE,_R,ER,AR,OE,GF,DR,MR,OR,LR,zR,PR,BR,WR,VE,VR,HE,GR,HR,jR,qR,KR,t$,RA,YR,{kernelName:Ur,backendName:"cpu",kernelFunc:ZR},JR,QR,eD,SE,sD,iD,oD,eR];for(let e of lD)pa(e);var uD={};g(uD,{assertNotComplex:()=>bM,bindCanvasToFramebuffer:()=>KD,bindColorTextureToFramebuffer:()=>XD,bindTextureToProgramUniformSampler:()=>qD,bindTextureUnit:()=>UD,bindVertexBufferToProgramAttribute:()=>VD,callAndCheck:()=>wD,canBeRepresented:()=>SD,createFragmentShader:()=>CD,createFramebuffer:()=>WD,createProgram:()=>RD,createStaticIndexBuffer:()=>LD,createStaticVertexBuffer:()=>OD,createTexture:()=>PD,createVertexShader:()=>_D,getBatchDim:()=>tM,getExtensionOrThrow:()=>TD,getFramebufferErrorMessage:()=>JD,getMaxTexturesInShader:()=>hM,getNumChannels:()=>zD,getProgramUniformLocation:()=>jD,getProgramUniformLocationOrThrow:()=>HD,getRowsCols:()=>nM,getShapeAs3D:()=>rM,getTextureShapeFromLogicalShape:()=>aM,getWebGLDisjointQueryTimerVersion:()=>pM,getWebGLErrorMessage:()=>ND,getWebGLMaxTextureSize:()=>oM,hasExtension:()=>dM,isCapableOfRenderingToFloatTexture:()=>fM,isDownloadFloatTextureEnabled:()=>mM,isReshapeFree:()=>iM,isWebGLFenceEnabled:()=>yM,isWebGLVersionEnabled:()=>cM,linkProgram:()=>DD,logShaderSourceAndInfoLog:()=>FD,resetMaxTextureSize:()=>lM,resetMaxTexturesInShader:()=>uM,unbindColorTextureFromFramebuffer:()=>YD,unbindTextureUnit:()=>GD,validateFramebuffer:()=>ZD,validateProgram:()=>MD,validateTextureSize:()=>BD});var hD,pD,dD,cD={},fD={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function mD(e,t){cD[e]=t}function gD(e,t){if(!(e in cD)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete cD[e]}),!1),1===e?n.getContext("webgl",fD)||n.getContext("experimental-webgl",fD):n.getContext("webgl2",fD)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;cD[e]=n}let n=cD[e];return null==n||n.isContextLost()?(delete cD[e],gD(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),cD[e])}function yD(e,t){return[t,e]}function bD(e){let t=ya.sizeFromShape(e),n=Math.ceil(t/4);return ya.sizeToSquarishShape(n)}function xD(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function vD(e,t){let n,r,a,s,i,o,l,u,h,p,d=e;return 2===je().getNumber("WEBGL_VERSION")?(n=d.R32F,r=d.R16F,a=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,h=d.HALF_FLOAT,p=d.FLOAT,o=d.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function wD(e,t){let n=t();return je().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+ND(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(hD||(hD={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(pD||(pD={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(dD||(dD={}));var kD=5.96e-8,ID=65504;function SD(e){return!!(je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||kD<Math.abs(e)&&Math.abs(e)<ID)}function ND(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function TD(e,t){return QD(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function _D(e,t){let n=QD(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(wD(e,(()=>e.shaderSource(n,t))),wD(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function CD(e,t){let n=QD(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(wD(e,(()=>e.shaderSource(n,t))),wD(e,(()=>e.compileShader(n))),je().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw FD(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var ED,$D,AD=/ERROR: [0-9]+:([0-9]+):/g;function FD(e,t){let n=AD.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>ya.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),h=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ya.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function RD(e){return QD(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function DD(e,t){if(wD(e,(()=>e.linkProgram(t))),!je().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function MD(e,t){if(wD(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function OD(e,t){let n=QD(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return wD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),wD(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function LD(e,t){let n=QD(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return wD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),wD(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function zD(){return 2===je().getNumber("WEBGL_VERSION")?1:4}function PD(e){return QD(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function BD(e,t){let n=je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function WD(e){return QD(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function VD(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(wD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),wD(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),wD(e,(()=>e.enableVertexAttribArray(o))),!0)}function UD(e,t,n){eM(e,n),wD(e,(()=>e.activeTexture(e.TEXTURE0+n))),wD(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function GD(e,t){eM(e,t),wD(e,(()=>e.activeTexture(e.TEXTURE0+t))),wD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function HD(e,t,n){return QD(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function jD(e,t,n){return e.getUniformLocation(t,n)}function qD(e,t,n,r){wD(e,(()=>UD(e,t,r))),wD(e,(()=>e.uniform1i(n,r)))}function KD(e){wD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),wD(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),wD(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function XD(e,t,n){wD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),wD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function YD(e,t){wD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),wD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function ZD(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+JD(e,t))}function JD(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function QD(e,t,n){let r=wD(e,(()=>t()));if(null==r)throw new Error(n);return r}function eM(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function tM(e,t=2){return ya.sizeFromShape(e.slice(0,e.length-t))}function nM(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function rM(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[tM(e),...nM(e)]),t}function aM(e,t=!1){let n=je().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?ya.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=ya.squeezeShape(e).newShape);let r=ya.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let t=tM(e),n=2,a=2;return e.length&&([n,a]=nM(e)),r=t*(n/2)*(a/2),ya.sizeToSquarishShape(r).map((e=>2*e))}return ya.sizeToSquarishShape(r)}function sM(e){return e%2==0}function iM(e,t){if(e=e.slice(-2),t=t.slice(-2),ya.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||sM(n)&&sM(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&sM(e[0])&&sM(t[0])}function oM(e){if(null==ED){let t=gD(e);ED=t.getParameter(t.MAX_TEXTURE_SIZE)}return ED}function lM(){ED=null}function uM(){$D=null}function hM(e){if(null==$D){let t=gD(e);$D=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$D)}function pM(e){if(0===e)return 0;let t,n=gD(e);return t=dM(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:dM(n,"EXT_disjoint_timer_query")?1:0,t}function dM(e,t){return null!=e.getExtension(t)}function cM(e){try{if(null!=gD(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function fM(e){if(0===e)return!1;let t=gD(e);if(1===e){if(!dM(t,"OES_texture_float"))return!1}else if(!dM(t,"EXT_color_buffer_float"))return!1;return gM(t)}function mM(e){if(0===e)return!1;let t=gD(e);if(1!==e){if(dM(t,"EXT_color_buffer_float"))return gM(t);let e="EXT_color_buffer_half_float";if(dM(t,e)){let n=t.getExtension(e);return function(e,t){let n=vD(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}return!(!dM(t,"OES_texture_float")||!dM(t,"WEBGL_color_buffer_float"))&&gM(t)}function gM(e){let t=vD(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function yM(e){return 2===e&&null!=gD(e).fenceSync}function bM(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ya.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var xM=je();function vM(){let e,t,n,r,a,s,i,o,l,u;return 2===je().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function wM(e,t,n="index"){let r=ya.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function kM(e,t,n="index"){let r=ya.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function IM(e,t,n="index"){let r=function(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function SM(e){let t=ya.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}xM.registerFlag("HAS_WEBGL",(()=>xM.getNumber("WEBGL_VERSION")>0)),xM.registerFlag("WEBGL_VERSION",(()=>cM(2)?2:cM(1)?1:0)),xM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),xM.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===xM.get("WEBGL_VERSION"))),xM.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),xM.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),xM.registerFlag("WEBGL_PACK",(()=>xM.getBool("HAS_WEBGL"))),xM.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_CLIP",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_REDUCE",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_LAZILY_UNPACK",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_CONV_IM2COL",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>oM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>hM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=xM.getNumber("WEBGL_VERSION");return 0===e?0:pM(e)})),xM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>xM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!xs.isMobile())),xM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>fM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!xM.getBool("WEBGL_FORCE_F16_TEXTURES")&&xM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),xM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>mM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>yM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>xM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),xM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),xM.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>xs.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),xM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),xM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),xM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),xM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var NM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:TM}=tf;function _M(e,t,n){let r=[];if(e.forEach((e=>{let t=ya.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=zM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?EM(e,r):CM(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=TM(e.shapeInfo.logicalShape,t.logicalShape),u=LM(o),h=o-i,p=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");let c="return outputValue;",f=1===ya.sizeFromShape(e.shapeInfo.logicalShape),m=1===ya.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${d});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ya.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,h=LM(l),p=TM(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${c[e+d]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${h} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=vM(),h=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${$M}\n    ${AM}\n    ${FM}\n  `}(u);return t.isPacked?(a=function(e,t,n){switch(e.length){case 0:return DM();case 1:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ya.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(a=function(e,t,n){switch(e.length){case 0:return DM();case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ya.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${kM(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=wM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${kM(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=wM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=wM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=wM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=RM),[p,h,s,i,a,o,n.userCode].join("\n")}function CM(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=MM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${OM(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=MM(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&ya.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=ya.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${CM(PM(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${BM(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${OM(e)}\n      }\n    `;let u=s[0],h=s[1],p=MM(r);return 1===h?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${u}, ${h}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=ya.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${CM(PM(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${BM(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${OM(e)}\n      }\n    `;let h=e.shapeInfo.texShape,p=h[0],d=h[1],c=e.shapeInfo.flatOffset;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=MM(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=ya.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${CM(PM(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${BM(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${OM(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=MM(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=ya.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${CM(PM(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${BM(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${OM(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1];if(c===o&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=MM(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=ya.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${CM(PM(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${BM(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,h=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${OM(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===h&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=MM(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function EM(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=vM();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=vM();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=vM();if(null!=s&&ya.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],h=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=[1,2],s=["b","row","col"];return`\n        ${EM(PM(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${BM(s,r)});\n        }\n      `}let o=vM();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],h=Math.ceil(n[2]/2),p=h*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${p}, ${h}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=vM();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],p=Math.ceil(s[i-1]/2),d=p*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var $M="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",FM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",RM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function DM(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function MM(e){return`offset${e}`}function OM(e){let t=e.name,n=ya.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function LM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function zM(e,t,n){let{newShape:r,keptDims:a}=ya.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!ya.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function PM(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function BM(e,t){return t.map((t=>e[t])).join(", ")}function WM(e,t,n){let r,a,s,i={},o={},l={},u=[],h=null,p=null;p=e.getUniformLocation(n,"NAN",!1),1===je().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let r=0;r<t.variableNames.length;r++){let a=t.variableNames[r];i[a]=e.getUniformLocation(n,a,d),i[`offset${a}`]=e.getUniformLocation(n,`offset${a}`,d),t.enableShapeUniforms&&(o[`${a}Shape`]=e.getUniformLocation(n,`${a}Shape`,d),l[`${a}TexShape`]=e.getUniformLocation(n,`${a}TexShape`,d))}return t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",d),s=e.getUniformLocation(n,"outShapeStrides",d),a=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{u[r]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:i,customUniformLocations:u,infLoc:h,nanLoc:p,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function VM(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!ya.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ya.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function UM(e){return je().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var GM=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=hD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=vM();this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?kM(["r","c","d"],e):wM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},HM=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=hD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=vM();this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?kM(["r","c","d"],e):wM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},jM=class{constructor(e){this.variableNames=["A"],this.outTexUsage=pD.DOWNLOAD;let t=vM();this.outputShape=e,this.userCode=`\n      ${NM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},qM=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=pD.DOWNLOAD;let t=vM();this.outputShape=e,this.userCode=`\n      ${NM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},KM=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=vM();this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":SM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}},XM=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=vM();this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":SM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}},YM={};function ZM(e){let t=vM();return _D(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function JM(e){return OD(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function QM(e){return LD(e,new Uint16Array([0,1,2,2,1,3]))}function eO(e,t,n,r,a,s){BD(t,n);let i=PD(e),o=e.TEXTURE_2D;return wD(e,(()=>e.bindTexture(o,i))),wD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),wD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),wD(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),wD(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===je().getNumber("WEBGL_VERSION")?wD(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):wD(e,(()=>e.texStorage2D(o,1,r,t,n))),wD(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function tO(e){return e.internalFormatFloat}function nO(e,t,n,r){let[a,s]=yD(t,n);return eO(e,a,s,tO(r),r.textureFormatFloat,e.FLOAT)}function rO(e){return e.internalFormatHalfFloat}function aO(e,t,n,r){let[a,s]=yD(t,n);return eO(e,a,s,rO(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function sO(e){return e.downloadTextureFormat}function iO(e,t,n,r){let[a,s]=yD(t,n);return eO(e,a,s,sO(r),e.RGBA,e.UNSIGNED_BYTE)}function oO(e){return e.internalFormatPackedFloat}function lO(e,t,n,r){let[a,s]=xD(t,n);return eO(e,a,s,oO(r),e.RGBA,e.FLOAT)}function uO(e){return e.internalFormatPackedHalfFloat}function hO(e,t,n,r){let[a,s]=xD(t,n);return eO(e,a,s,uO(r),e.RGBA,r.textureTypeHalfFloat)}function pO(e,t,n){return wD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),VD(e,t,"clipSpacePos",n,3,20,0)&&VD(e,t,"uv",n,2,20,12)}function dO(e,t,n,r,a,s){let i,o,l;wD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===je().getNumber("WEBGL_VERSION")?wD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):wD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),wD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function cO(e,t,n){wD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===je().getNumber("WEBGL_VERSION")?wD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):wD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===je().getNumber("WEBGL_VERSION")?wD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):wD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),wD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function fO(e,t,n,r){let a=e.createBuffer();wD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return wD(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),wD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),wD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function mO(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function gO(e,t,n,r){let[a,s]=yD(t,n),i=new Uint8Array(function(e,t){return e*t}(t*n,4));return wD(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function yO(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=xD(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function bO(e,t,n){let r=new Float32Array(t*n*4);return wD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}g(YM,{bindVertexProgramAttributeStreams:()=>pO,createBufferFromOutputTexture:()=>fO,createFloat16MatrixTexture:()=>aO,createFloat16PackedMatrixTexture:()=>hO,createFloat32MatrixTexture:()=>nO,createIndexBuffer:()=>QM,createPackedMatrixTexture:()=>lO,createUnsignedBytesMatrixTexture:()=>iO,createVertexBuffer:()=>JM,createVertexShader:()=>ZM,downloadByteEncodedFloatMatrixFromOutputTexture:()=>gO,downloadFloat32MatrixFromBuffer:()=>mO,downloadMatrixFromPackedOutputTexture:()=>bO,downloadPackedMatrixFromBuffer:()=>yO,getInternalFormatForFloat16MatrixTexture:()=>rO,getInternalFormatForFloat16PackedMatrixTexture:()=>uO,getInternalFormatForFloat32MatrixTexture:()=>tO,getInternalFormatForPackedMatrixTexture:()=>oO,getInternalFormatForUnsignedBytesMatrixTexture:()=>sO,uploadDenseMatrixToTexture:()=>dO,uploadPixelDataToTexture:()=>cO});var xO=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=je().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,mD(t,e)):this.gl=gD(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===je().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=TD(this.gl,e),dM(this.gl,t))this.textureHalfFloatExtension=TD(this.gl,t);else if(je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),dM(this.gl,r))this.colorBufferHalfFloatExtension=TD(this.gl,r);else if(je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",dM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!dM(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=JM(this.gl),this.indexBuffer=QM(this.gl),this.framebuffer=WD(this.gl),this.textureConfig=vD(this.gl,this.textureHalfFloatExtension)}get debug(){return je().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;wD(e,(()=>e.finish())),wD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),wD(e,(()=>e.deleteFramebuffer(this.framebuffer))),wD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),wD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),wD(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),nO(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),aO(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),iO(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),cO(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),dO(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),hO(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),lO(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(YD(this.gl,this.framebuffer),this.outputTexture=null),wD(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>gO(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return yO(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return mO(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=fO(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(je().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>bO(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=ZM(t));let n=RD(t);return wD(t,(()=>t.attachShader(n,this.vertexShader))),wD(t,(()=>t.attachShader(n,e))),DD(t,n),this.debug&&MD(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=pO(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&wD(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&MD(this.gl,this.program),wD(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?HD(this.gl,e,t):jD(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),wD(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),qD(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=xD(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&MD(this.gl,this.program),ZD(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),wD(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),wD(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=TD(this.gl,2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ya.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&ya.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),XD(this.gl,e,this.framebuffer),this.debug&&ZD(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(XD(this.gl,this.outputTexture,this.framebuffer),this.debug&&ZD(this.gl)):YD(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;XD(r,e,this.framebuffer),this.debug&&ZD(r),this.outputTexture=e,wD(r,(()=>r.viewport(0,0,t,n))),wD(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),wD(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};var{addImpl:vO,bincountImpl:wO,bincountReduceImpl:kO,ceilImpl:IO,concatImpl:SO,equalImpl:NO,expImpl:TO,expm1Impl:_O,floorImpl:CO,gatherNdImpl:EO,gatherV2Impl:$O,greaterImpl:AO,greaterEqualImpl:FO,lessImpl:RO,lessEqualImpl:DO,linSpaceImpl:MO,logImpl:OO,maxImpl:LO,maximumImpl:zO,minimumImpl:PO,multiplyImpl:BO,negImpl:WO,notEqualImpl:VO,prodImpl:UO,rangeImpl:GO,rsqrtImpl:HO,sigmoidImpl:jO,simpleAbsImpl:qO,sliceImpl:KO,sparseFillEmptyRowsImpl:XO,sparseReshapeImpl:YO,sparseSegmentReductionImpl:ZO,sqrtImpl:JO,stridedSliceImpl:QO,stringNGramsImpl:eL,stringSplitImpl:tL,stringToHashBucketFastImpl:nL,subImpl:rL,tileImpl:aL,topKImpl:sL,transposeImpl:iL,uniqueImpl:oL}=nC;function lL(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function uL(e,t){return 1===t?[e]:lL(e,t)}var hL=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=UM(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=uL("rc",this.rank),t=LM(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},pL=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?IM(["r","c","d"],"inputShape"):wM(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":SM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};var dL=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=fL(t,n),a=mL(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=cL(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return r===dD.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===dD.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===dD.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===dD.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===dD.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=fL(n,r),s=mL(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=cL(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=je().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function cL(e,t,n,r,a){let s,i=function(e,t){switch(e){case dD.PACKED_2X2_FLOAT32:return oO(t);case dD.PACKED_2X2_FLOAT16:return uO(t);case dD.UNPACKED_FLOAT32:return tO(t);case dD.UNPACKED_FLOAT16:return rO(t);case dD.PACKED_4X1_UNSIGNED_BYTE:return sO(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=xD(e[0],e[1]);s=t*n}else{let[t,n]=yD(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function fL(e,t){if(e===pD.UPLOAD)return dD.PACKED_2X2_FLOAT32;if(e===pD.RENDER||null==e)return function(e){return je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?dD.PACKED_2X2_FLOAT32:dD.UNPACKED_FLOAT32:e?dD.PACKED_2X2_FLOAT16:dD.UNPACKED_FLOAT16}(t);if(e===pD.DOWNLOAD||e===pD.PIXELS)return dD.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function mL(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var gL=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},yL="if (isnan(x)) return x;",bL="return abs(x);",xL=yL+"\n  return (x < 0.0) ? 0.0 : x;\n",vL=yL+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",wL="return x;",kL=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},IL=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let t=e.length,n=uL("rc",t),r=LM(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},SL=am.whereImpl,NL={};var TL=je().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");var _L=class extends q{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!je().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof xO)t=e;else{let n=gD(je().getNumber("WEBGL_VERSION"),e);t=new xO(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=gD(je().getNumber("WEBGL_VERSION"));t=new xO(e),this.binaryCache=function(e){return e in NL||(NL[e]={}),NL[e]}(je().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new dL(this.gpgpu),this.numMBBeforeWarning=null==je().global.screen?1024:je().global.screen.height*je().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new j(this,ol())}nextDataId(){return _L.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((je().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||je().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:pD.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(je().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:pD.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new kL(i,wL):new gL(i,wL);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,h=null!=this.activeTimers;if(h&&(l=ya.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=tf.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return h&&(this.downloadWaitMs+=ya.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new kL(r,wL):new gL(r,wL);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(je().getBool("DEBUG")&&!je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===je().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==s&&je().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture.texture,...bD(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=tf.mergeRealAndImagArrays(t,n)}else if(null==h)u=this.getValuesFromTexture(e);else{let e=ya.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){let e=this.gpgpu.gl;wD(e,(()=>e.deleteBuffer(h)))}let p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ol().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new kL(a,wL):new gL(a,wL);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),h=ol().makeTensorFromDataId(u.dataId,u.shape,u.dtype),p=this.texData.get(u.dataId);return Object.assign({tensorRef:h},p.texture)}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>ya.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ti(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!SD(n))throw je().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=ya.sizeFromShape(t);if(je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...bD(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=je().getBool("WEBGL_PACK")&&!0===r,i=s?rM(t):t,o=s?new qM(i):new jM(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=ya.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ya.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=ya.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ya.now(),endMs:null}}endTimer(e){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ya.now(),e)}async getQueryTime(e){if(je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=TL){return je().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ya.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){tf.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return SL(e.shape,t)}packedUnaryOp(e,t,n){let r=new kL(e.shape,t),a=this.compileAndRun(r,[e],n);return ol().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=qO(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(je().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,bL,e.dtype);let t=new gL(e.shape,bL),n=this.compileAndRun(t,[e]);return ol().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ya.isString(n[0])){let a=n.map((e=>ya.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:r}=this.makeTensorInfo(e,t,n);return ol().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new IL(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new hL(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[tM(e.shape),...nM(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[tM(t),...nM(t)],s=new pL(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=ya.sizeFromShape(a),n=t[0]*t[1]*4;ya.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=rM(a);i=r?new HM(o):new GM(o);let l=[null!=t?t:bD(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===hD.DENSE){let t=null!=s?s:bD(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ya.sizeFromShape(i.shape))return o.values=ya.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ya.sizeFromShape(t.shape)<=je().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!iM(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let h,p={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=zM(e.packedInputs,t.shape,s),u="",h="",p="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=ya.computeStrides(o);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;let d=t.shape.length,c=2===o.length&&ya.arraysEqual(t.shape,s),f=1===ya.sizeFromShape(t.shape),m=tf.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&ya.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${h}_${p}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${je().getNumber("WEBGL_VERSION")}`,s}(e,u,p),c=this.getAndSaveBinary(d,(()=>function(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=_M(a,i,t),l=CD(e.gl,o),u=e.createProgram(l);return je().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},WM(e,t,u))}(this.gpgpu,e,u,p))),f=null!=this.activeTimers;f&&(h=this.startTimer()),je().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(VM(t.inShapeInfos,n),VM([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===je().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){let{uniformShape:r}=zM(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(ya.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}}));let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=ya.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{let s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,c,u,p,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let m=je().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=ya.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!je().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(je().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=hl((()=>{if(!je().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=je().getBool("DEBUG");je().set("DEBUG",!1);let t=this.abs(Op(1e-8)).dataSync()[0];if(je().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=ya.now());let h=t.texShape;if(null==h&&(h=aM(n,o),t.texShape=h),null!=a){let e,s=rM(n),i=h[1],p=h[0],d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!d)&&([i,p]=xD(h[0],h[1])),e=o?new XM(s,d):new KM(s,d);let c=d?[p,i]:h,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=d?pD.PIXELS:pD.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,a);let g=[[p,i]],y=!0,b=this.runWebGLProgram(e,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,je().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=ya.now()-l)}else{let e=this.acquireTexture(h,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ya.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await ef(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(FD(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=WM(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}};_L.nextDataId=0;var CL="3.15.0";function EL(){je().set("WEBGL_FORCE_F16_TEXTURES",!0)}xs.isBrowser()&&vl("webgl",(()=>new _L),2);var $L={forceHalfFloat:EL},AL="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",FL=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=tf.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},RL="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n",DL=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=tf.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=UM(a);let s="";if(r)if(0===a||1===ya.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${LM(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=uL("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function ML(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var OL={kernelName:dn,backendName:"webgl",kernelFunc:ML};function LL(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=ML({inputs:{x:r},backend:n}),l=ML({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var zL={kernelName:It,backendName:"webgl",kernelFunc:LL},PL="return (a < 0.) ? b * a : a;",BL="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var WL={kernelName:bn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",ya.createScalarValue(s,"float32")),o=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DL(BL,a.shape,i.shape):new FL(PL,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},VL="return (a < 0.) ? b * a : a;",UL="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var GL={kernelName:tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DL(UL,r.shape,a.shape):new FL(VL,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},HL="if (isnan(x)) return x;";function jL({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=s,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new kL(o.shape,t):new gL(o.shape,e),l.runWebGLProgram(i,[o],u)}}function qL({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,h=o;if(r&&"complex64"===l.dtype){let t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new FL(e,l.shape,u.shape);return h.runWebGLProgram(i,[a,s],ss(n.dtype,r.dtype))})),s=LL({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p,d=s||ss(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=a){let e=h.texData.get(l.dataId).values,t=h.texData.get(u.dataId).values,n="string"===l.dtype?tf.fromUint8ToStringArray(e):e,r="string"===l.dtype?tf.fromUint8ToStringArray(t):t,[s,i]=a(l.shape,u.shape,n,r,d),o=h.makeTensorInfo(i,d);return h.texData.get(o.dataId).values=s,o}return p=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new DL(t,l.shape,u.shape,n):new FL(e,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function KL(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":xL;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":vL;if("prelu"===e)return t?UL:VL;if("leakyrelu"===e)return t?BL:PL;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var XL=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=UM(this.outputShape.length);let u=r?e[1]:e[2],h=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},YL="return areal * breal - aimag * bimag;",ZL="return areal * bimag + aimag * breal;",JL=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=tf.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},QL="return a * b;";function ez(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=tf.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new JL(YL,a.shape,s.shape),i=new JL(ZL,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),h=LL({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),h}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=BO(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DL(QL,a.shape,s.shape):new FL(QL,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var tz={kernelName:Un,backendName:"webgl",kernelFunc:ez};function nz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=ya.sizeFromShape(a.shape),l=ya.inferFromImplicitShape(s,o),u=ya.sizeFromShape(l);ya.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let h=i.texData.get(a.dataId);return!h.isPacked||iM(a.shape,l)||null!==h.texture&&iM(h.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[tM(e.shape),...nM(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[tM(t),...nM(t)],i=new pL(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}var rz={kernelName:or,backendName:"webgl",kernelFunc:nz},az=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${ya.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},sz=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),h=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function iz(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=tf.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:h,outSize:p}=a[i];o="mean"===n?0===i?new az({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},u):new az({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p}):new sz({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}var oz=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=LM(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}};var lz=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=LM(this.rank),a=lL("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function uz(e,t,n){let r=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lz(e.shape,t):new oz(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function hz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=ya.parseAxisParam(a,e.shape),o=i,l=tf.getAxesPermutation(o,s),u=null!=l,h=e;u&&(h=uz(e,l,r),o=tf.getInnerMostAxes(o.length,s)),tf.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=tf.computeOutAndReduceShapes(h.shape,o),c=p;n&&(c=tf.expandShapeToKeepDim(p,i));let f=ya.sizeFromShape(d),m=nz({inputs:{x:h},attrs:{shape:[ya.sizeFromShape(e.shape)/f,f]},backend:r}),g=iz(m,is(e.dtype),"sum",r),y=nz({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(h),y}(a,s,i,n)}var pz={kernelName:Tr,backendName:"webgl",kernelFunc:hz};function dz(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=iL(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=uz(s,i,o);return t}var cz={kernelName:qr,backendName:"webgl",kernelFunc:dz};function fz({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,h=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[h-1]:t.shape[h-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[h-2]:t.shape[h-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ya.sizeFromShape(m),b=ya.sizeFromShape(g),x=Qi.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);ya.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let v,w=n?[y,p,c]:[y,c,p],k=r?[b,f,d]:[b,d,f],I=nz({inputs:{x:e},backend:a,attrs:{shape:w}}),S=nz({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(y,b),_=n?I.shape[1]:I.shape[2],C=null!=s,E=null!=i,$="leakyrelu"===l,A=null!=l?KL(l,!0):null;if((1===c||1===f)&&_>1e3&&!1===(C||E||$||null!=A)){let e=I,t=S;n&&(e=dz({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=dz({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));let s=1===f,i=e;1!==f&&(i=nz({inputs:{x:e},backend:a,attrs:{shape:[T,_,1]}}),N.push(i));let o=1===f?2:1,l=t;s&&(l=nz({inputs:{x:t},backend:a,attrs:{shape:[T,1,_]}}),N.push(l));let u=ez({inputs:{a:i,b:l},backend:a});v=hz({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{let l=ss(e.dtype,t.dtype),u=new XL(w,k,[T,c,f],n,r,C,A,E,$),h=[I,S];if(null!=s&&h.push(s),E&&h.push(i),$){let e=a.makeTensorInfo([],"float32",ya.createScalarValue(o,"float32"));h.push(e),N.push(e)}v=a.runWebGLProgram(u,h,l)}let F=nz({inputs:{x:v},backend:a,attrs:{shape:x}});N.push(v);for(let e of N)a.disposeIntermediateTensorInfo(e);return F}var mz={kernelName:ta,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r;return fz({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:h})}},gz="return abs(x);";var yz={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=qO(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new kL(a.shape,gz):new gL(a.shape,gz),r.runWebGLProgram(t,[a],a.dtype)}},bz=jL({opSnippet:yL+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),xz={kernelName:Je,backendName:"webgl",kernelFunc:bz},vz=jL({opSnippet:yL+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),wz={kernelName:Qe,backendName:"webgl",kernelFunc:vz},kz="return a + b;",Iz=qL({opSnippet:kz,packedOpSnippet:kz,supportsComplex:!0,cpuKernelImpl:vO}),Sz={kernelName:et,backendName:"webgl",kernelFunc:Iz},Nz=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}},Tz=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}};var _z={kernelName:tt,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return ML({inputs:{x:a[0]},backend:r});if(a.length>je().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>ss(e,t))),i=a.map((e=>e.shape)),o=je().getBool("WEBGL_PACK")?new Tz(a[0].shape,i):new Nz(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var Cz={kernelName:nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ya.parseAxisParam(s,a.shape),u=l,h=tf.getAxesPermutation(u,o),p=a;null!=h&&(p=dz({inputs:{x:a},backend:n,attrs:{perm:h}}),u=tf.getInnerMostAxes(u.length,o)),tf.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=tf.computeOutAndReduceShapes(p.shape,u),m=nz({inputs:{x:p},backend:n,attrs:{shape:[-1,ya.sizeFromShape(f)]}}),g=iz(m,m.dtype,"all",n);if(i){d=nz({inputs:{x:g},backend:n,attrs:{shape:tf.expandShapeToKeepDim(c,l)}})}else d=nz({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}};var Ez={kernelName:rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ya.parseAxisParam(s,a.shape),u=l,h=tf.getAxesPermutation(u,o),p=a;null!=h&&(p=dz({inputs:{x:a},backend:n,attrs:{perm:h}}),u=tf.getInnerMostAxes(u.length,o)),tf.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=tf.computeOutAndReduceShapes(p.shape,u),m=nz({inputs:{x:p},backend:n,attrs:{shape:[-1,ya.sizeFromShape(f)]}}),g=iz(m,m.dtype,"any",n);if(i){d=nz({inputs:{x:g},backend:n,attrs:{shape:tf.expandShapeToKeepDim(c,l)}})}else d=nz({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}},$z=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},Az=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ya.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,h=LM(u),p=uL("coords",u);if(1===s){o=u+1;let e=LM(o);i=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,i=`\n        ${h} sourceLocR = coords;\n        ++${p[u-1]};\n        ${h} sourceLocG = coords;\n        ++${p[u-2]};\n        ${h} sourceLocA = coords;\n        --${p[u-1]};\n        ${h} sourceLocB = coords;\n        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map((e=>"int "+e)),m=uL("sourceLocR",o-1).concat("inIdx.r"),g=uL("sourceLocG",o-1).concat("inIdx.g"),y=uL("sourceLocB",o-1).concat("inIdx.b"),b=uL("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${h} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function Fz(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=tf.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new $z(o,n,null==r),u=[t];null!=r&&u.push(r);let h=e.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let p=Fz(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function Rz(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=tf.computeOptimalWindowSize(s),o=new Az(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=Rz(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function Dz(e,t,n,r){let a=[n];if(tf.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!je().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=tf.computeOutAndReduceShapes(i.shape,a),u=ya.sizeFromShape(l),h=nz({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(h);let p=Fz(e,h,r);n.push(p);let d=nz({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return Rz(e,t,r)}var Mz={kernelName:at,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=ya.parseAxisParam(s,a.shape),o=tf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=dz({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),tf.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let h=Dz(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};var Oz={kernelName:st,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=ya.parseAxisParam(s,a.shape),o=tf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=dz({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),tf.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let h=Dz(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Lz=jL({opSnippet:yL+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),zz={kernelName:it,backendName:"webgl",kernelFunc:Lz},Pz=jL({opSnippet:yL+"return log(x + sqrt(x * x + 1.0));"}),Bz={kernelName:ot,backendName:"webgl",kernelFunc:Pz},Wz=jL({opSnippet:yL+"\n  return atan(x);\n"}),Vz={kernelName:lt,backendName:"webgl",kernelFunc:Wz},Uz=qL({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Gz={kernelName:ht,backendName:"webgl",kernelFunc:Uz},Hz=jL({opSnippet:yL+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),jz={kernelName:ut,backendName:"webgl",kernelFunc:Hz},qz=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");let x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},Kz=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");let w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}};var Xz={kernelName:pt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;bM(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ya.assert(tf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=tf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ya.arraysEqual(u.inShape,u.outShape))return ML({inputs:{x:a},backend:n});let h=new qz(u,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};var Yz={kernelName:ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=tf.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),p=new Kz(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}},Zz=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},Jz=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=h-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var Qz={kernelName:ft,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=tf.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new Jz(p);return n.runWebGLProgram(d,[a],i.dtype)}};var eP={kernelName:dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;bM([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=tf.computePool2DInfo(i.shape,o,l,1,u),p=new Zz(h);return n.runWebGLProgram(p,[a],i.dtype)}};var tP={kernelName:mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return fz({a:a,b:s,transposeA:i,transposeB:o,backend:n})}},nP=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],tf.assertAndGetBroadcastShape(e,t),tf.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(tf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(tf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},rP=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],tf.assertAndGetBroadcastShape(e,t),tf.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(tf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(tf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},aP={kernelName:on,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;ya.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ya.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ya.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],h=null;null!=i&&(h=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let d=je().getBool("WEBGL_PACK_NORMALIZATION")?new rP(r.shape,a.shape,s.shape,h,p,l):new nP(r.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,u,u[0].dtype)}},sP=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=LM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return iP.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${iP[t]} = start[${t}] + coords.${iP[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}},iP=["x","y","z","w","u","v"];var oP=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=LM(this.rank),n=uL("coords",this.rank),r=uL("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function lP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=bo.parseSliceParams(a,s,i);if(bo.assertParamsValid(a,o,l),0===ya.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=KO(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),h=bo.isSliceContinous(a.shape,o,l);if(u||!h){let e=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oP(l):new sP(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=bo.computeFlatOffset(t,ya.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var uP={kernelName:xr,backendName:"webgl",kernelFunc:lP},hP={kernelName:gt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ya.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=tf.getReshaped(a.shape,s,o),u=tf.getPermuted(l.length,s.length),h=tf.getReshapedPermuted(a.shape,s,o),p=tf.getSliceBeginCoords(i,s.length),d=tf.getSliceSize(h,i,s.length),c=[],f=nz({inputs:{x:a},backend:n,attrs:{shape:l}}),m=dz({inputs:{x:f},backend:n,attrs:{perm:u}}),g=nz({inputs:{x:m},backend:n,attrs:{shape:h}}),y=lP({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var pP={kernelName:yt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=wO(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}};var dP={kernelName:xt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=tf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},cP=qL({opSnippet:"return float(a != b);",cpuKernelImpl:VO,dtype:"bool"}),fP={kernelName:Hn,backendName:"webgl",kernelFunc:cP};function mP(e){let{inputs:t,backend:n}=e,{input:r}=t;return ML({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var gP={kernelName:ar,backendName:"webgl",kernelFunc:mP};var yP={kernelName:vt,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return ML({inputs:{x:s},backend:r});let t=jh(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=LL({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=mP({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ya.hasEncodingLoss(s.dtype,i)){let e=ML({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new gL(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",ya.getTypedArrayFromDType("bool",1)),t=cP({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},bP="return ceil(x);",xP=jL({opSnippet:bP,packedOpSnippet:bP,cpuKernelImpl:IO}),vP={kernelName:wt,backendName:"webgl",kernelFunc:xP},wP=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},kP=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}};var IP={kernelName:kt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=je().getBool("WEBGL_PACK_CLIP")?new kP(s.shape):new wP(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}},SP=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function NP(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var TP={kernelName:St,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new SP(r.shape),i=[NP(r,a.complexTensorInfos.real),NP(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},_P=class{constructor(e){this.outputShape=[],this.outputShape=tf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},CP=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=tf.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=LM(r),s=uL("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),h=i.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];p+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${EP(i,l,t)}),\n            vec2(${EP(u,l,t)}));\n        }`}let d=o.length,c=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${EP(i,l,c)}),\n          vec2(${EP(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function EP(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function $P(e){let{inputs:t,backend:n}=e,{input:r}=t;return ML({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var AP={kernelName:fn,backendName:"webgl",kernelFunc:$P};function FP(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>mP({inputs:{input:e},backend:n}))),a=e.map((e=>$P({inputs:{input:e},backend:n}))),s=FP(r,t,n),i=FP(a,t,n),o=LL({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=ya.sizeFromShape(e.shape.slice(t));return nz({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=tf.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=SO(s,i,r,o),u=tf.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>je().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let r=Math.floor(e.length/2),a=FP(e.slice(0,r),t,n),s=FP(e.slice(r),t,n),i=FP([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let a=new CP(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}let{tensors2D:s,outShape:i}=function(e,t,n){let r=tf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>nz({inputs:{x:e},attrs:{shape:[-1,ya.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new _P(s.map((e=>e.shape))),l=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));let u=nz({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function RP(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ya.parseAxisParam(a,t[0].shape)[0],i=tf.computeOutShape(t.map((e=>e.shape)),s);if(0===ya.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>ya.sizeFromShape(e.shape)>0));if(1===o.length)return ML({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return tf.assertParamsConsistent(l,s),FP(o,s,n)}var DP={kernelName:Nt,backendName:"webgl",kernelFunc:RP},MP=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}},OP=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},LP=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let{dataFormat:n}=t,r=vM(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}};function zP({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,h=r.texData.get(e.dataId),p=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=!1,g=!1,y=[];if((1!==d&&1!==c||!(p>1e3))&&h.isPacked&&f&&null!=h.texture&&u[2]%2!=0&&ya.arraysEqual(h.shape.slice(-3),u.slice(-3))){let p=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,ya.assert(iM(h.shape,d.shape),(()=>`packed reshape ${h.shape} to ${d.shape} isn't free`));let f=nz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(f);let b=fz({a:d,b:f,backend:r,transposeA:m,transposeB:g,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),x=r.texData.get(b.dataId);ya.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=c,x.shape=n.outShape,l=ML({inputs:{x:b},backend:r}),l.shape=n.outShape,y.push(b)}else{let h=nz({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),p=nz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=fz({a:h,b:p,transposeA:m,transposeB:g,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=nz({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),y.push(h),y.push(p),y.push(d)}for(let e of y)r.disposeIntermediateTensorInfo(e);return l}function PP({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:p,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*h,g=d*p,y=[m,g],b=[],x=nz({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=nz({inputs:{x:t},backend:r,attrs:{shape:[1,m,ya.sizeFromShape(t.shape)/m]}});b.push(x),b.push(v);let w=new LP(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(w,[x],"float32",k),S=nz({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(S);let N=null!=a,T=null!=s,_="leakyrelu"===o,C=o?KL(o,!0):null,E=new XL(S.shape,v.shape,[1,g,n.outChannels],!0,!1,N,C,T,_),$=[S,v];if(a&&$.push(a),T&&$.push(s),_){let e=r.makeTensorInfo([],"float32",ya.createScalarValue(i,"float32"));$.push(e),b.push(e)}let A=r.runWebGLProgram(E,$,"float32"),F=nz({inputs:{x:A},backend:r,attrs:{shape:f?[1,d,p,n.outChannels]:[1,n.outChannels,d,p]}});b.push(A);for(let e of b)r.disposeIntermediateTensorInfo(e);return F}var BP={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:p}=a,d=tf.convertConv2DDataFormat(u),c=tf.computeConv2DInfo(s.shape,i.shape,o,h,l,p,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(je().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=PP({x:s,filter:i,convInfo:c,backend:r});else{let e=new MP(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=zP({x:s,filter:i,convInfo:c,backend:r});let f=nz({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}},WP=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},VP=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,h=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},UP=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},GP=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var HP={kernelName:_t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,p=tf.convertConv2DDataFormat(l),d=tf.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),c=new WP(d);return n.runWebGLProgram(c,[a,s],"float32")}};var jP={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r,p=tf.convertConv2DDataFormat(u),d=tf.computeConv2DInfo(i,s.shape,o,1,l,h,!1,p),c=new VP(d);return n.runWebGLProgram(c,[a,s],"float32")}};var qP={kernelName:Et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=tf.computeConv3DInfo(a.shape,s.shape,i,l,o),h=new OP(u);return n.runWebGLProgram(h,[a,s],"float32")}};var KP={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=tf.computeConv3DInfo(a.shape,l,i,1,o),h=new UP(u);return n.runWebGLProgram(h,[a,s],"float32")}};var XP={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=tf.computeConv3DInfo(l,s.shape,o,1,i),h=new GP(u);return n.runWebGLProgram(h,[a,s],"float32")}},YP=jL({opSnippet:HL+"\n  return cos(x);\n"}),ZP={kernelName:Ft,backendName:"webgl",kernelFunc:YP},JP=jL({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),QP={kernelName:Rt,backendName:"webgl",kernelFunc:JP},eB=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[h,p]=n;this.outputShape=[u,h,p,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},tB={kernelName:Ot,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,h=new eB(a.shape,s.shape,o,l,u);return n.runWebGLProgram(h,[a,s,i],"float32")}},nB=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,a=t?"1.0":`getX(${rB(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${LM(r)} coords = getOutputCoords();\n        int end = ${aB(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${aB(r,"coords")} = idx;\n          val *= getX(${rB(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function rB(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function aB(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}var sB={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=tf.getAxesPermutation([s],l),h=a;null!=u&&(h=dz({inputs:{x:a},backend:n,attrs:{perm:u}}));let p=tf.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let d=h.shape[p],c=ML({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){let t=new nB(h.shape,!1,o),r=[[e]],a=c;c=n.runWebGLProgram(t,[c],c.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new nB(h.shape,i,o),t=c;c=n.runWebGLProgram(e,[c],c.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=dz({inputs:{x:c},backend:n,attrs:{perm:tf.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),e}return c}},iB=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,a=t?"0.0":`getX(${oB(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${LM(r)} coords = getOutputCoords();\n        int end = ${lB(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${lB(r,"coords")} = idx;\n          val += getX(${oB(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function oB(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function lB(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var uB={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=tf.getAxesPermutation([s],l),h=a;null!=u&&(h=dz({inputs:{x:a},backend:n,attrs:{perm:u}}));let p=tf.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let d=h.shape[p],c=ML({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){let t=new iB(h.shape,!1,o),r=[[e]],a=c;c=n.runWebGLProgram(t,[c],c.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new iB(h.shape,i,o),t=c;c=n.runWebGLProgram(e,[c],c.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=dz({inputs:{x:c},backend:n,attrs:{perm:tf.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),e}return c}};var hB={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=wO(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=kO(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},pB=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};var dB={kernelName:zt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,h=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),p=new pB("NHWC"===i?[o,l,u,h]:[o,h,l,u],s,i);return n.runWebGLProgram(p,[a],a.dtype)}},cB=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=UM(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${u}\n        setOutput(result);\n      }\n    `}},fB=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=UM(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,p=h,d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<h;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<h;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){let t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<h&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<h)){let e=i%2==0?ya.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<h&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<h&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<h&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<h&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<h&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};var mB={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,h=l;null==h&&(h=[1,1]),ya.assert(tf.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));let p,d=tf.computeConv2DInfo(a.shape,s.shape,i,h,o,u,!0);p=je().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new fB(d):new cB(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",c)}},gB=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},yB=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var bB={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r,p=tf.computeConv2DInfo(a.shape,h,i,o,l,u,!0),d=new gB(p);return n.runWebGLProgram(d,[a,s],"float32")}};var xB={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r,p=tf.computeConv2DInfo(h,s.shape,i,o,l,u,!0),d=new yB(p);return n.runWebGLProgram(d,[a,s],"float32")}},vB=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}};var wB={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=ya.sizeFromShape(r.shape),i=nz({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new vB(s),l=n.runWebGLProgram(o,[i],i.dtype),u=nz({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},kB=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}};var IB={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,h=tf.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new kB(h);t=r.runWebGLProgram(p,[s,i],"float32");let d=nz({inputs:{x:t},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(t),d}};var SB={kernelName:qt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=tf.decodeEinsumEquation(a,s.length);tf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=tf.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let e=0;e<p;++e){for(let t of h[e]){let e,{permutationIndices:r,expandDims:a}=tf.getEinsumPermutation(c,l[t]);tf.isIdentityPermutation(r)?e=s[t]:(e=dz({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);ya.arraysEqual(e.shape,i)||(e=nz({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=ez({inputs:{a:e,b:d},backend:n}),f.push(d))}e<p-1&&(u[e]>=0&&(d=hz({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},NB=jL({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),TB={kernelName:Kt,backendName:"webgl",kernelFunc:NB},_B={kernelName:Xt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DL("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new FL("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},CB=qL({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:NO}),EB={kernelName:Zt,backendName:"webgl",kernelFunc:CB},$B=jL({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${tf.ERF_P};\n  float a1 = ${tf.ERF_A1};\n  float a2 = ${tf.ERF_A2};\n  float a3 = ${tf.ERF_A3};\n  float a4 = ${tf.ERF_A4};\n  float a5 = ${tf.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),AB={kernelName:Yt,backendName:"webgl",kernelFunc:$B},FB=jL({opSnippet:HL+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:TO,dtype:"float32"}),RB={kernelName:Jt,backendName:"webgl",kernelFunc:FB};function DB(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(ya.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),nz({inputs:{x:s},backend:r,attrs:{shape:o}})}var MB={kernelName:Qt,backendName:"webgl",kernelFunc:DB},OB="return exp(x) - 1.0;",LB=jL({opSnippet:OB,packedOpSnippet:OB,cpuKernelImpl:_O}),zB={kernelName:en,backendName:"webgl",kernelFunc:LB},PB=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function BB(e,t,n){let r=n.texData.get(e.dataId),a=ya.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=nz({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new PB("real",o,t),u=new PB("imag",o,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(u,h,"float32"),c=LL({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);let f=nz({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var WB={kernelName:tn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return BB(r,!1,n)}},VB=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function UB(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||ya.inferDtype(a),"string"===s){let e=ya.getArrayFromDType(s,ya.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new VB(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var GB,HB={kernelName:nn,backendName:"webgl",kernelFunc:UB},jB=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},qB={kernelName:rn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new jB(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},KB="return floor(x);",XB=jL({opSnippet:KB,packedOpSnippet:KB,cpuKernelImpl:CO}),YB={kernelName:an,backendName:"webgl",kernelFunc:XB},ZB=qL({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),JB={kernelName:sn,backendName:"webgl",kernelFunc:ZB},QB=class{constructor(e){this.variableNames=["A"];let t=vM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},eW=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=vM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},tW={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[u,l],p=[u,l,s];(o||i)&&(null==GB&&(GB=document.createElement("canvas").getContext("2d")),GB.canvas.width=l,GB.canvas.height=u,GB.drawImage(a,0,0,l,u),a=GB.canvas);let d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=pD.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=je().getBool("WEBGL_PACK")?new eW(p):new QB(p),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}};var nW={kernelName:na,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dataFormat:p,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=tf.convertConv2DDataFormat(p),y=tf.computeConv2DInfo(s.shape,i.shape,u,d,h,c,!1,g),b=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(je().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=PP({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=null!=o,n=null!=l,a="leakyrelu"===f,u=f?KL(f,!1):null,h=new MP(y,e,u,n,a),p=[s,i];if(o&&p.push(o),l&&p.push(l),a){let e=r.makeTensorInfo([],"float32",ya.createScalarValue(m,"float32"));p.push(e),b.push(e)}t=r.runWebGLProgram(h,p,"float32")}else t=zP({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let x=nz({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach((e=>r.disposeIntermediateTensorInfo(e))),x}};var rW={kernelName:ra,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:c}=r,f=[],m=h;null==m&&(m=[1,1]),ya.assert(tf.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=tf.computeConv2DInfo(a.shape,s.shape,l,m,u,p,!0),b=je().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?KL(d,b):null,v=[a,s],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){let e=n.makeTensorInfo([],"float32",ya.createScalarValue(c,"float32"));v.push(e),f.push(e)}g=b?new fB(y,w,x,k,I):new cB(y,w,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(g,v,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}},aW=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=LM(t.length),a=LM(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}};var sW={kernelName:un,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=ya.sizeFromShape(r.shape),[l,u,h,p]=tf.prepareAndValidate(r,a),d=nz({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=nz({inputs:{x:r},backend:n,attrs:{shape:[ya.sizeFromShape(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=EO(e,t,r.dtype,u,i,h,p,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new aW(i,p,[u,h]),m=n.runWebGLProgram(f,[c,d],c.dtype),g=nz({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}},iW=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=LM(this.rank),r=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}};function oW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=ya.parseAxisParam(i,a.shape)[0];if(je().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];ya.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=tf.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=ya.sizeFromShape(s.shape),p=[],d=nz({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=nz({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});p.push(d),p.push(c);let f=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),r=$O(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new iW(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);p.push(g);let y=nz({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var lW={kernelName:ln,backendName:"webgl",kernelFunc:oW},uW=qL({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:AO,dtype:"bool"}),hW={kernelName:hn,backendName:"webgl",kernelFunc:uW},pW=qL({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:FO}),dW={kernelName:pn,backendName:"webgl",kernelFunc:pW};var cW={kernelName:cn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return BB(r,!0,n)}},fW=jL({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),mW={kernelName:mn,backendName:"webgl",kernelFunc:fW},gW=jL({opSnippet:"return float(isinf(x));",dtype:"bool"}),yW={kernelName:gn,backendName:"webgl",kernelFunc:gW},bW=jL({opSnippet:"return float(isnan(x));",dtype:"bool"}),xW={kernelName:yn,backendName:"webgl",kernelFunc:bW},vW=qL({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:RO,dtype:"bool"}),wW={kernelName:xn,backendName:"webgl",kernelFunc:vW},kW=qL({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:DO,dtype:"bool"}),IW={kernelName:vn,backendName:"webgl",kernelFunc:kW};var SW={kernelName:wn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=MO(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},NW=jL({opSnippet:HL+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:OO}),TW={kernelName:kn,backendName:"webgl",kernelFunc:NW},_W=jL({opSnippet:HL+"\n  return log(1.0 + x);\n"}),CW={kernelName:In,backendName:"webgl",kernelFunc:_W},EW=qL({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),$W={kernelName:Sn,backendName:"webgl",kernelFunc:EW},AW=jL({opSnippet:"return float(!(x >= 1.0));"}),FW={kernelName:Nn,backendName:"webgl",kernelFunc:AW},RW=qL({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),DW={kernelName:Tn,backendName:"webgl",kernelFunc:RW},MW=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},OW=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},LW={kernelName:Cn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=je().getBool("WEBGL_PACK_NORMALIZATION")?new OW(a.shape,s,i,o,l):new MW(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},zW=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},PW={kernelName:En,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r,p=new zW(a.shape,o,l,u,h);return n.runWebGLProgram(p,[a,s,i],a.dtype)}};function BW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=ya.parseAxisParam(s,a.shape),u=l,h=tf.getAxesPermutation(u,o),p=null!=h,d=n.shouldExecuteOnCPU([a]),c=a;if(p){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];let r=iL(e,a.shape,a.dtype,h,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=uz(a,h,n);u=tf.getInnerMostAxes(u.length,o)}tf.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=tf.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=tf.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=LO(e,ya.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=ya.sizeFromShape(t),s=nz({inputs:{x:e},attrs:{shape:[ya.sizeFromShape(e.shape)/a,a]},backend:r}),i=iz(s,e.dtype,"max",r),o=nz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return p&&n.disposeIntermediateTensorInfo(c),f}var WW={kernelName:$n,backendName:"webgl",kernelFunc:BW},VW=qL({opSnippet:AL+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+RL+"\n  return result;\n",cpuKernelImpl:zO}),UW={kernelName:An,backendName:"webgl",kernelFunc:VW};var GW={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;bM(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ya.assert(tf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=tf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ya.arraysEqual(u.inShape,u.outShape))return ML({inputs:{x:a},backend:n});let h=new qz(u,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};var HW={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=tf.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),p=new Kz(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}},jW=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},qW=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var KW={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=tf.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new Kz(p,"max",!0),c=n.runWebGLProgram(d,[i],i.dtype),f=new qW(p),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}};var XW={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;bM([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=tf.computePool2DInfo(o.shape,l,u,1,h,p),c=new qz(d,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new jW(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var YW={kernelName:On,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ya.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];ya.assert(tf.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let h=tf.computePool2DInfo(r.shape,a,s,u,i),[p,d]=function(e,t,n,r){let a=new qz(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new qz(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,h,l);return[p,d]}};var ZW={kernelName:Ln,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=ya.parseAxisParam(s,r.shape),u=l,h=tf.getAxesPermutation(u,o),p=null!=h,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(p){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[h[e]];let n=iL(e,r.shape,r.dtype,h,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=uz(r,h,i);c.push(f),u=tf.getInnerMostAxes(u.length,o)}tf.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=tf.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=tf.expandShapeToKeepDim(m,l));let b=function(e,t,n,r){let a=ya.sizeFromShape(t),s=nz({inputs:{x:e},attrs:{shape:[ya.sizeFromShape(e.shape)/a,a]},backend:r}),i=iz(s,"float32","mean",r),o=nz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(let e of c)i.disposeIntermediateTensorInfo(e);return b}};var JW={kernelName:zn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ya.parseAxisParam(s,a.shape),u=l,h=tf.getAxesPermutation(u,o),p=a;null!=h&&(p=dz({inputs:{x:a},backend:n,attrs:{perm:h}}),u=tf.getInnerMostAxes(u.length,a.shape.length)),tf.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=tf.computeOutAndReduceShapes(p.shape,u),m=nz({inputs:{x:p},backend:n,attrs:{shape:[-1,ya.sizeFromShape(f)]}}),g=iz(m,m.dtype,"min",n);if(i){d=nz({inputs:{x:g},backend:n,attrs:{shape:tf.expandShapeToKeepDim(c,l)}})}else d=nz({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}},QW=qL({opSnippet:AL+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+RL+"\n  return result;\n",cpuKernelImpl:PO}),eV={kernelName:Pn,backendName:"webgl",kernelFunc:QW},tV=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=LM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},nV=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=LM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=uL("rc",r),l=uL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,d="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${h});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}},rV={kernelName:Bn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nV(r.shape,a,s):new tV(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},aV=qL({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+RL+"\n  return result;\n"}),sV={kernelName:Wn,backendName:"webgl",kernelFunc:aV},iV=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},oV=qL({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),lV={kernelName:jt,backendName:"webgl",kernelFunc:oV},uV="return a - b;",hV=qL({opSnippet:uV,packedOpSnippet:uV,supportsComplex:!0,cpuKernelImpl:rL}),pV={kernelName:Wr,backendName:"webgl",kernelFunc:hV};function dV(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ya.parseAxisParam([s],a.shape),o=BW({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=tf.expandShapeToKeepDim(o.shape,i),u=nz({inputs:{x:o},backend:n,attrs:{shape:l}}),h=hV({inputs:{a:a,b:u},backend:n}),p=FB({inputs:{x:h},backend:n}),d=hz({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),c=nz({inputs:{x:d},backend:n,attrs:{shape:l}}),f=oV({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var cV={kernelName:Er,backendName:"webgl",kernelFunc:dV};var fV={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:dV({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],h=l.shape[1],p=new iV(u,h,s),d=[[i]],c=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}},mV=yL+"\n  return -x;\n";var gV={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=WO(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new kL(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new gL(a.shape,mV),r.runWebGLProgram(t,[a],a.dtype)}},yV=am.nonMaxSuppressionV3Impl;var bV={kernelName:jn,backendName:"webgl",kernelFunc:function(e){tf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p}=yV(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},xV=am.nonMaxSuppressionV4Impl;var vV={kernelName:qn,backendName:"webgl",kernelFunc:function(e){tf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=xV(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},wV=am.nonMaxSuppressionV5Impl;var kV={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){tf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=wV(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},IV=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},SV={kernelName:Yn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=ya.sizeFromShape(a.shape),u=new IV(l,s,i,o),h=nz({inputs:{x:a},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(u,[h],a.dtype);n.disposeIntermediateTensorInfo(h);let d=nz({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(p),d}};function NV(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=mP({inputs:{input:r},backend:n}),t=NV({inputs:{x:e},backend:n}),a=$P({inputs:{input:r},backend:n}),s=NV({inputs:{x:a},backend:n}),i=LL({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return UB({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var TV={kernelName:Zr,backendName:"webgl",kernelFunc:NV};var _V={kernelName:Xn,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=mP({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=$P({inputs:{input:a},backend:r}),i=NV({inputs:{x:s},backend:r}),o=LL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return UB({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var CV={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return DB({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ya.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ya.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=RP({inputs:t.map((e=>{let t=DB({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},EV=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=LM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},$V=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=LM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=uL("rc",r),l=uL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`\n        ${p[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},AV=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===ya.sizeFromShape(a.shape)){return UB({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}})}let o=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $V(a.shape,s,i):new EV(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},FV={kernelName:Jn,backendName:"webgl",kernelFunc:AV},RV=qL({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+RL+"\n  return result;\n"}),DV={kernelName:er,backendName:"webgl",kernelFunc:RV};var MV={kernelName:nr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],h=ya.parseAxisParam(i,s.shape),p=h,d=tf.getAxesPermutation(p,l),c=s;if(null!=d&&(c=dz({inputs:{x:s},backend:r,attrs:{perm:d}}),p=tf.getInnerMostAxes(p.length,l),u.push(c)),tf.assertAxesAreInnerMostDims("prod",p,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=UO(c.shape,c.dtype,e,p);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=tf.computeOutAndReduceShapes(c.shape,p),a=ya.sizeFromShape(n),i=nz({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=iz(i,is(s.dtype),"prod",r);t=nz({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=tf.expandShapeToKeepDim(t.shape,h);t=nz({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}},OV=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=GO(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},LV={kernelName:rr,backendName:"webgl",kernelFunc:OV},zV=jL({opSnippet:"return 1.0 / x;"}),PV={kernelName:sr,backendName:"webgl",kernelFunc:zV},BV=jL({opSnippet:yL+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),WV={kernelName:ir,backendName:"webgl",kernelFunc:BV},VV=jL({opSnippet:yL+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),UV={kernelName:dr,backendName:"webgl",kernelFunc:VV},GV=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},HV=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}};var jV={kernelName:hr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new HV(a.shape,l,u,s,i):new GV(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],"float32")}},qV=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var KV={kernelName:pr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new qV(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},XV=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},YV=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}};var ZV={kernelName:lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new YV(a.shape,l,u,s,i):new XV(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],a.dtype)}},JV=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var QV={kernelName:ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new JV(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},eU=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=LM(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}},tU=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=uL("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=LM(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}};var nU={kernelName:cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ya.parseAxisParam(s,a.shape);if(0===i)return ML({inputs:{x:a},backend:n});let l=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tU(a.shape,o):new eU(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},rU=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},aU={kernelName:ea,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new rU(r.shape,s),[u,h]=tf.getImageCenter(i,r.shape[1],r.shape[2]),p=[[u,h,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,p)}},sU=jL({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),iU={kernelName:fr,backendName:"webgl",kernelFunc:sU},oU=jL({opSnippet:"return inversesqrt(x);",cpuKernelImpl:HO}),lU={kernelName:mr,backendName:"webgl",kernelFunc:oU},uU=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=LM(a.length),l=LM(s.length),u="";1===n?u="i":2===n&&(u="i, j");let h=`getIndices(${u})`,p="";1===r?p="i":2===r&&(p="i, coords[1]");let d=`getUpdates(${p})`,c=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${c};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};var hU={kernelName:gr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=tf.calculateShapes(s,a,i),d=[p/u,u];if(0===p)return n.makeTensorInfo(i,a.dtype);let c=nz({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=nz({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new uU(l,o,c.shape.length,f.shape.length,h,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=nz({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}},pU=class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=LM(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}};var dU={kernelName:yr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new pU(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],ss(a.dtype,s.dtype))}},cU=jL({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${tf.SELU_SCALEALPHA};\n  float scale = ${tf.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),fU={kernelName:br,backendName:"webgl",kernelFunc:cU},mU=jL({opSnippet:HL+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:jO}),gU={kernelName:Ir,backendName:"webgl",kernelFunc:mU},yU=jL({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),bU={kernelName:kr,backendName:"webgl",kernelFunc:yU},xU=jL({opSnippet:HL+"\n  return sin(x);\n"}),vU={kernelName:vr,backendName:"webgl",kernelFunc:xU},wU=jL({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),kU={kernelName:wr,backendName:"webgl",kernelFunc:wU},IU=jL({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),SU={kernelName:Sr,backendName:"webgl",kernelFunc:IU},NU={kernelName:_r,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ya.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],h=AV({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=tf.getReshaped(h.shape,s,o,!1),d=tf.getPermuted(p.length,s.length,!1),c=tf.getReshapedPermuted(h.shape,s,o,!1),f=nz({inputs:{x:h},backend:n,attrs:{shape:p}}),m=dz({inputs:{x:f},backend:n,attrs:{perm:d}}),g=nz({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(h),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var TU={kernelName:$r,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),h=n.readSync(i.dataId)[0],[p,d,c,f,m]=XO(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var _U={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,h,p]=YO(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};var CU={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=ZO(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}};var EU={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=ZO(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}};var $U={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:h,outputSize:p}=tf.calculateShapes(s,a,o),d=new uU(u,l,a.shape.length,s.shape.length,h,[p,1],!1),c=n.runWebGLProgram(d,[s,a,i],s.dtype),f=nz({inputs:{x:c},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(c),f}};var AU={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ya.parseAxisParam(i,a.shape)[0],l=tf.prepareSplitSize(a,s,o),u=a.shape.length,h=new Array(u).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let r=lP({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[o]+=e,r}))}},FU="return sqrt(x);",RU=jL({opSnippet:FU,packedOpSnippet:FU,cpuKernelImpl:JO}),DU={kernelName:Nr,backendName:"webgl",kernelFunc:RU},MU=jL({opSnippet:"return x * x;"}),OU={kernelName:Or,backendName:"webgl",kernelFunc:MU},LU="return (a - b) * (a - b);",zU=qL({opSnippet:LU,packedOpSnippet:LU}),PU={kernelName:Mr,backendName:"webgl",kernelFunc:zU};var BU={kernelName:Jr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=yL+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new gL(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}},WU=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=LM(n.length),s=LM(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}};var VU={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=bo.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=nz({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){ya.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=bo.computeOutShape(x,v,w),n=lP({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=nz({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=Ti(s.shape,s.dtype,e),a=QO(f,n,w,x);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new WU(x,w,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=nz({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}};var UU={kernelName:zr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.readSync(h.dataId),c=n.readSync(p.dataId),[f,m]=eL(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var GU={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,h,p]=tL(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var HU={kernelName:Br,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=nL(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},jU=jL({opSnippet:"return tan(x);"}),qU={kernelName:Vr,backendName:"webgl",kernelFunc:jU},KU=jL({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),XU={kernelName:Ur,backendName:"webgl",kernelFunc:KU},YU=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=LM(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}};function ZU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>ya.decodeString(e))):e,r=Ti(a.shape,a.dtype,t),i=aL(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new YU(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var JU={kernelName:Gr,backendName:"webgl",kernelFunc:ZU},QU=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},eG=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function tG(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function nG(e){let t=1;for(;t<e;)t*=2;return t}var rG={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=je().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=je().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([a])||h<o||s>l){let e=n.readSync(a.dataId),[t,r]=sL(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[a,UB({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,c=d?n.unpackTensor(a):a,f=ya.sizeFromShape(u)/h,m=nz({inputs:{x:c},attrs:{shape:[f,h]},backend:n});d&&tG(n,c);let g=nG(s),y=nG(h),b=null,x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{let a=x(),s=new QU(r),i=[[h],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),tG(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=x(),r=new eG([f,e/2]),a=[[h],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),tG(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=lP({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),tG(n,w);let k=oW({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});tG(n,m);let I=u.slice(0,-1);I.push(s),w=b,b=nz({inputs:{x:b},attrs:{shape:I},backend:n}),tG(n,w);let S=k;return k=nz({inputs:{x:k},attrs:{shape:I},backend:n}),tG(n,S),[k,b]}},aG=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}};var sG={kernelName:jr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=new aG(p,d,i,o,l,[h,f,m,c]);return n.runWebGLProgram(g,[a,s],"float32")}};var iG={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;bM(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=oL(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var oG={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),h=0;for(let e=0;e<o;e++)e!==s&&(u[h++]=i.shape[e]);let p=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){d[s]=e;let t=lP({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),r=nz({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},lG=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}};var uG,hG,pG,dG={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,h=tf.getAxesPermutation([u],o),p=a;null!=h&&(p=dz({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),u=tf.getInnerMostAxes(1,o)[0]);let d=tf.segment_util.computeOutShape(p.shape,u,i),c=ya.sizeFromShape([p.shape[u]]),f=nz({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=is(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=tf.segment_util.segOpComputeOptimalWindowSize(o,s),h=new lG({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),p=n.compileAndRun(h,[e,r],a);if(l.push(p),p.shape[1]===s)return p;let d=OV({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),c=ZU({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(c),g(p,t,c,a,s)},y=nz({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}}),b=y;if(null!=h){l.push(y);let e=tf.getUndoAxesPermutation(h);b=dz({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},cG=[mz,yz,xz,wz,Sz,_z,Cz,Ez,Mz,Oz,zz,Bz,Vz,Gz,jz,Xz,Yz,Qz,eP,tP,aP,hP,pP,dP,yP,vP,IP,zL,TP,DP,BP,HP,jP,qP,KP,XP,ZP,QP,tB,sB,uB,hB,dB,mB,bB,xB,wB,IB,SB,TB,_B,EB,AB,RB,MB,zB,WB,HB,qB,YB,JB,tW,nW,rW,sW,lW,hW,dW,OL,cW,AP,mW,yW,xW,WL,wW,IW,SW,TW,CW,$W,FW,DW,LW,PW,WW,UW,GW,HW,KW,XW,YW,ZW,JW,eV,rV,sV,fV,tz,gV,bV,vV,kV,fP,SV,_V,CV,FV,DV,GL,MV,LV,gP,lV,PV,WV,UV,rz,jV,KV,ZV,QV,nU,aU,iU,lU,hU,dU,fU,gU,bU,vU,kU,uP,cV,SU,NU,TU,_U,CU,EU,$U,AU,DU,OU,PU,BU,VU,UU,GU,HU,pV,pz,qU,XU,JU,rG,sG,cz,iG,oG,dG,TV];for(let e of cG)pa(e);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(uG||(uG={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(hG||(hG={}));var fG={kernelName:ta,backendName:"wasm",setupFunc:function(e){pG=e.wasm.cwrap(ta,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=hG[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=Qi.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return pG(d,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,p||0,w),v}};function mG(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===ya.sizeFromShape(i.shape)||n(s,uG[a.dtype],o),i}}}var gG=mG(Ze);function yG(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,h=tf.assertAndGetBroadcastShape(s.shape,i.shape),p=t.makeOutput(h,u);if(0===ya.sizeFromShape(h))return p;let d=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(p.dataId).id;return r(o,d,s.shape.length,l,c,i.shape.length,uG[s.dtype],f),p}}}var bG,xG=yG(et);var vG={kernelName:tt,backendName:"wasm",setupFunc:function(e){bG=e.wasm.cwrap(tt,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===ya.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return bG(s,a.length,uG[r.dtype],i),r}};function wG(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var kG,IG={kernelName:dn,backendName:"wasm",kernelFunc:wG};function SG(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=wG({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),h=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return kG(h,c,l.shape.length,uG[l.dtype],p,d,s.length),u}var NG,TG={kernelName:qr,backendName:"wasm",kernelFunc:SG,setupFunc:function(e){kG=e.wasm.cwrap(qr,null,["number","array","number","number","number","array","number"])}};function _G(e,t,n){let r=e.shape,a=e.shape.length,s=ya.parseAxisParam(t,r),i=s,o=tf.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=tf.getInnerMostAxes(i.length,a),l=SG({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var CG,EG={kernelName:nt,backendName:"wasm",setupFunc:function(e){NG=e.wasm.cwrap(nt,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=_G(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;tf.assertAxesAreInnerMostDims("all",h,c);let[f,m]=tf.computeOutAndReduceShapes(l.shape,h),g=ya.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ya.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;NG(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=tf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}};var $G,AG={kernelName:rt,backendName:"wasm",setupFunc:function(e){CG=e.wasm.cwrap(rt,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=_G(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;tf.assertAxesAreInnerMostDims("any",h,c);let[f,m]=tf.computeOutAndReduceShapes(l.shape,h),g=ya.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ya.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;CG(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=tf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}};var FG,RG={kernelName:at,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:h,inputWasTransposed:p}=_G(s,a,t);if(p){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=ya.sizeFromShape(c.shape),g=l.shape[h[0]];return $G(o,uG[l.dtype],m,g,f),p&&t.disposeData(u.dataId),c},setupFunc:function(e){$G=e.wasm.cwrap(at,null,["number","number","number","number","number"])}};var DG={kernelName:pt,backendName:"wasm",setupFunc:function(e){FG=e.wasm.cwrap(pt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=tf.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.strideHeight,b=h.strideWidth,x=h.inChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);if(1!==h.dilationWidth||1!==h.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${h.dilationHeight}, ${h.dilationWidth}].`);let v=r.makeOutput(h.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return FG(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,w),v}};function MG(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=ya.sizeFromShape(r.shape),i=ya.inferFromImplicitShape(a,s);return ya.assert(s===ya.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var OG,LG={kernelName:or,backendName:"wasm",kernelFunc:MG};var zG={kernelName:mt,backendName:"wasm",setupFunc:function(e){OG=e.wasm.cwrap(mt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ya.sizeFromShape(f),y=ya.sizeFromShape(m),b=Qi.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);ya.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,p]:[y,p,c],v=MG({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),w=MG({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(v.dataId).id,I=n.dataIdMap.get(w.dataId).id,S=i?v.shape[2]:v.shape[1],N=o?w.shape[1]:w.shape[2],T=Math.max(g,y),_=n.makeOutput([T,S,N],v.dtype),C=n.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(v.shape).buffer),$=new Uint8Array(new Int32Array(w.shape).buffer);return OG(k,E,v.shape.length,I,$,w.shape.length,i,o,C),n.disposeData(v.dataId),n.disposeData(w.dataId),_.shape=b,_}};function PG(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=bo.parseSliceParams(t,n,r),o=bo.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),h=ya.computeStrides(t.shape),p=a.dataIdMap.get(u.dataId);if(o){let e=bo.computeFlatOffset(s,h);return"string"===t.dtype?p.stringBytes=l.slice(e,e+ya.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+ya.sizeFromShape(i))),u}if("string"===t.dtype){let e=DE(l,s,i,t.shape,t.dtype);return p.stringBytes=e,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,h[0],d,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],h=o+s[0],p=l+s[1];for(let a=o;a<h;a++)for(let o=l;o<p;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,h[0],h[1],d,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],h=s[2],p=l+i[0],d=u+i[1],c=h+i[2],f=s[3];for(let s=l;s<p;s++)for(let l=u;l<d;l++)for(let u=h;u<c;u++){let h=s*t+l*n+u*r+f;a.set(e.subarray(h,h+i[3]),o),o+=i[3]}}(l,h[0],h[1],h[2],d,s,i);else{let e=DE(l,s,i,t.shape,t.dtype);d.set(e)}return u}var BG={kernelName:xr,backendName:"wasm",kernelFunc:PG};var WG={kernelName:gt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=tf.getReshaped(a.shape,s,o),u=tf.getPermuted(l.length,s.length),h=tf.getReshapedPermuted(a.shape,s,o),p=tf.getSliceBeginCoords(i,s.length),d=tf.getSliceSize(h,i,s.length),c=MG({inputs:{x:a},backend:n,attrs:{shape:l}}),f=SG({inputs:{x:c},backend:n,attrs:{perm:u}}),m=PG({inputs:{x:MG({inputs:{x:f},backend:n,attrs:{shape:h}})},backend:n,attrs:{begin:p,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}};function VG(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var UG,GG={kernelName:vt,backendName:"wasm",kernelFunc:VG},HG=mG(wt);var jG={kernelName:kt,backendName:"wasm",setupFunc:function(e){UG=e.wasm.cwrap(kt,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return UG(o,s,i,u),l}};function qG(e){let{inputs:t,backend:n}=e,r=ya.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=tf.computeOutShape(t.map((e=>e.shape)),r),s=t.filter((e=>ya.sizeFromShape(e.shape)>0));if(1===s.length)return wG({inputs:{x:s[0]},backend:n});let i=n.makeOutput(a,t[0].dtype);if(0===ya.sizeFromShape(a))return i;let o=s.map((e=>e.shape));if(tf.assertParamsConsistent(o,r),"string"===s[0].dtype){let e=s.map((e=>{let t=ya.sizeFromShape(e.shape.slice(r));return MG({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=tf.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=EC(o,a,t[0].dtype,l),h=tf.computeOutShape(s.map((e=>e.shape)),r);return i.shape=h,n.dataIdMap.get(i.dataId).stringBytes=tf.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),i}let l=ya.sizeFromShape(s[0].shape.slice(0,r)),u=0,h=s.map((e=>{let t=ya.sizeFromShape(e.shape.slice(r));return u+=t,t})),p=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<p.length;n++){let r=h[n],a=e*r,s=p[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}var KG,XG={kernelName:Nt,backendName:"wasm",kernelFunc:qG};var YG,ZG={kernelName:Tt,backendName:"wasm",setupFunc:function(e){KG=e.wasm.cwrap(Tt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p,dataFormat:d}=n,c=tf.convertConv2DDataFormat(d),f=tf.computeConv2DInfo(a.shape,s.shape,l,u,h,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return KG(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,_,w,k,I,S,N,T,E),C}};var JG,QG,eH={kernelName:Ct,backendName:"wasm",setupFunc:function(e){YG=e.wasm.cwrap(Ct,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:h}=r,p=tf.convertConv2DDataFormat(l),d=tf.computeConv2DInfo(h,s.shape,i,1,o,u,!1,p),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=d,S=f-1-d.padInfo.top,N=m-1-d.padInfo.left,T="channelsLast"===d.dataFormat,_=ya.computeStrides(d.inShape),C=ya.computeStrides(a.shape),[E,$,A]=ya.computeStrides(s.shape),F=_[0],R=T?_[1]:_[2],D=T?_[2]:1,M=T?1:_[1],O=C[0],L=T?C[1]:C[2],z=T?C[2]:1,P=T?1:C[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return YG(V,U,c,f,m,y,b,g,v,w,x,k,I,S,N,E,$,A,F,R,D,M,O,L,z,P,W),B}},tH=mG(Ft),nH=mG(Rt);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(JG||(JG={}));var rH,aH={kernelName:Ot,backendName:"wasm",setupFunc:function(e){QG=e.wasm.cwrap(Ot,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:h}=r,p=u.shape[0],[d,c]=o,f=[p,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=VG({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(h.dataId).id,x=n.makeOutput(f,"float32"),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return QG(g,y,b,p,w,d,c,JG[s],i,v),null!=t&&n.disposeData(t.dataId),x}};var sH,iH={kernelName:Dt,backendName:"wasm",setupFunc:function(e){rH=e.wasm.cwrap(Dt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;ya.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=tf.getAxesPermutation([s],l),h=a;null!==u&&(h=SG({inputs:{x:a},attrs:{perm:u},backend:n}));let p=tf.getInnerMostAxes(1,l)[0];tf.assertAxesAreInnerMostDims("cumprod",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;rH(f,i?1:0,o?1:0,c,m,uG[a.dtype]);let g=d;if(null!==u){g=SG({inputs:{x:d},attrs:{perm:tf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}};var oH,lH={kernelName:Mt,backendName:"wasm",setupFunc:function(e){sH=e.wasm.cwrap(Mt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;ya.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=tf.getAxesPermutation([s],l),h=a;null!==u&&(h=SG({inputs:{x:a},attrs:{perm:u},backend:n}));let p=tf.getInnerMostAxes(1,l)[0];tf.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;sH(f,i?1:0,o?1:0,c,m,uG[a.dtype]);let g=d;if(null!==u){g=SG({inputs:{x:d},attrs:{perm:tf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}};var uH,hH={kernelName:zt,backendName:"wasm",setupFunc:function(e){oH=e.wasm.cwrap(zt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,h=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),p="NHWC"===i?[o,l,u,h]:[o,h,l,u],d=t.makeOutput(p,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(ya.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(p).buffer),g=new Uint8Array(new Int32Array(ya.computeStrides(p)).buffer),y=t.dataIdMap.get(d.dataId).id;return oH(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,p.length,y),d}};var pH={kernelName:Pt,backendName:"wasm",setupFunc:function(e){uH=e.wasm.cwrap(Pt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p}=n,d=null==u?[1,1]:u,c=tf.computeConv2DInfo(a.shape,s.shape,l,d,h,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,w=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,S=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(_.dataId).id;return uH(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,v,w,k,I,S,N,C),_}},dH=mG(Kt),cH=yG(Zt,0,"bool"),fH=mG(Jt,"float32");function mH(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(ya.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),MG({inputs:{x:a},backend:r,attrs:{shape:o}})}var gH={kernelName:Qt,backendName:"wasm",kernelFunc:mH};function yH(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var bH,xH={kernelName:nn,backendName:"wasm",kernelFunc:yH};var vH,wH={kernelName:rn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,h]=r.shape;return bH(s,o,l,u,h,i),a},setupFunc:function(e){bH=e.wasm.cwrap(rn,null,["number","number","number","number","number","number"])}},kH=mG(an),IH=yG(sn);var SH,NH={kernelName:on,backendName:"wasm",setupFunc:function(e){vH=e.wasm.cwrap(on,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,h=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===ya.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return vH(h,p,d,c,f,a,g),m}};var TH,_H={kernelName:na,backendName:"wasm",setupFunc:function(e){SH=e.wasm.cwrap(na,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=tf.computeConv2DInfo(a.shape,s.shape,l,h,u,d),g=hG[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return SH(y,R,D,M,b,w,k,v,I,S,N,T,F,_,C,E,$,A,x,g,z,f||0,L),O}};var CH,EH={kernelName:ra,backendName:"wasm",setupFunc:function(e){TH=e.wasm.cwrap(ra,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=tf.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!0),g=hG[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return TH(y,R,D,M,b,w,k,v,I,S,N,T,F,_,C,E,$,A,x,g,z,f||0,L),O}};var $H,AH={kernelName:un,backendName:"wasm",setupFunc:function(e){CH=e.wasm.cwrap(un,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=po.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let h=a.shape,p=h[h.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return CH(d,uG[r.dtype],c,i,p,o,f,m),u}};var FH,RH={kernelName:ln,backendName:"wasm",setupFunc:function(e){$H=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=ya.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),h=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];ya.assert(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}let p=tf.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=MG({inputs:{x:a},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),c=ya.sizeFromShape(s.shape),f=MG({inputs:{x:s},attrs:{shape:[p.batchSize,c/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=t.makeOutput(m,a.dtype);if(0===ya.sizeFromShape(a.shape))return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(ya.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(ya.computeStrides(m)).buffer);return $H(b,uG[a.dtype],w,y,x,p.batchSize,k,v),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}},DH=yG(hn,0,"bool"),MH=yG(pn,0,"bool");var OH,LH={kernelName:bn,backendName:"wasm",setupFunc:function(e){FH=e.wasm.cwrap(bn,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==ya.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;FH(a,uG[t.dtype],n,e)}return s}},zH=yG(xn,0,"bool"),PH=yG(vn,0,"bool"),BH=mG(kn),WH=yG(Sn,0,"bool");var VH,UH={kernelName:$n,backendName:"wasm",setupFunc:function(e){OH=e.wasm.cwrap($n,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=_G(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;tf.assertAxesAreInnerMostDims("max",h,c);let[f,m]=tf.computeOutAndReduceShapes(l.shape,h),g=ya.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ya.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;OH(o,uG[i.dtype],g,e)}if(d&&t.disposeData(u.dataId),s){let e=tf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}},GH=yG(An);var HH,jH={kernelName:Fn,backendName:"wasm",setupFunc:function(e){VH=e.wasm.cwrap(Fn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;ya.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=tf.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.dilationHeight,b=h.dilationWidth,x=h.strideHeight,v=h.strideWidth,w=h.inChannels,k=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(h.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return VH(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,v,w,k,S),I}};var qH,KH={kernelName:Ln,backendName:"wasm",setupFunc:function(e){HH=e.wasm.cwrap(Ln,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=_G(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=tf.getInnerMostAxes(f.length,u.shape.length))}tf.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=tf.computeOutAndReduceShapes(u.shape,f),y=ya.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=VG({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==ya.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;HH(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=tf.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};var XH,YH,ZH={kernelName:zn,backendName:"wasm",setupFunc:function(e){qH=e.wasm.cwrap(zn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=_G(i,a,t);if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e)}let f=u.shape.length;tf.assertAxesAreInnerMostDims("min",p,f);let[m,g]=tf.computeOutAndReduceShapes(u.shape,p),y=ya.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ya.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;qH(l,uG[i.dtype],y,e)}if(c&&t.disposeData(h.dataId),s){let e=tf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},JH=yG(Pn);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(XH||(XH={}));var QH,ej={kernelName:Bn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return YH(i,u,t.shape.length,uG[t.dtype],d,c,XH[a],l),o},setupFunc:function(e){YH=e.wasm.cwrap(Bn,null,["number","array","number","number","array","array","number","number"])}},tj=yG(Un),nj=mG(Gn);function rj(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var aj,sj={kernelName:jn,backendName:"wasm",setupFunc:function(e){QH=e.wasm.cwrap(jn,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=QH(u,h,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=rj(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}};var ij,oj={kernelName:qn,backendName:"wasm",setupFunc:function(e){aj=e.wasm.cwrap(qn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=aj(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rj(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};var lj,uj={kernelName:Kn,backendName:"wasm",setupFunc:function(e){ij=e.wasm.cwrap(Kn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=ij(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rj(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},hj=yG(Hn,0,"bool");var pj={kernelName:Yn,backendName:"wasm",setupFunc:function(e){lj=e.wasm.cwrap(Yn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(a.dataId).id;return lj(h,s,i,o,u),l}};var dj={kernelName:Xn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var cj,fj={kernelName:Zn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return mH({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ya.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ya.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=qG({inputs:t.map((e=>{let t=mH({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}};var mj,gj={kernelName:Jn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===ya.sizeFromShape(t.shape))return yH({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return cj(i,u,t.shape.length,uG[t.dtype],d,c,a,l),o},setupFunc:function(e){cj=e.wasm.cwrap(Jn,null,["number","array","number","number","array","array","number","number"])}},yj=yG(er);var bj,xj={kernelName:tr,backendName:"wasm",setupFunc:function(e){mj=e.wasm.cwrap(tr,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=VG({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let h=n.makeOutput(r.shape,"float32"),p=n.dataIdMap.get(h.dataId).id;return mj(o,i,p),"float32"!==l.dtype&&n.disposeData(u.dataId),h}};var vj,wj={kernelName:nr,backendName:"wasm",setupFunc:function(e){bj=e.wasm.cwrap(nr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=_G(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=tf.getInnerMostAxes(f.length,u.shape.length))}tf.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=tf.computeOutAndReduceShapes(u.shape,f),y=ya.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ya.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;bj(l,y,uG[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=tf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},kj={kernelName:rr,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=_E(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},Ij=yG(jt),Sj=mG(ir),Nj=mG(dr);var Tj,_j={kernelName:hr,backendName:"wasm",setupFunc:function(e){vj=e.wasm.cwrap(hr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,h]=l,[p,d,c,f]=s.shape,m=[p,u,h,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=VG({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===ya.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return vj(y,p,d,c,f,u,h,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}};var Cj,Ej={kernelName:cr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=ya.parseAxisParam(s,a.shape);if(0===a.shape.length)return wG({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);Tj(l,h,i.length,p,a.shape.length,u);let d=MG({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){Tj=e.wasm.cwrap(cr,null,["number","array","number","array","number","number"])}};var $j,Aj={kernelName:ea,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(l.dataId).id,[p,d,c,f]=a.shape,[m,g]=tf.getImageCenter(o,d,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return Cj(u,p,d,c,f,s,m,g,b,y.length,h),l},setupFunc:function(e){Cj=e.wasm.cwrap(ea,null,["number","number","number","number","number","number","number","number","array","number","number"])}},Fj=mG(fr),Rj=mG(mr);var Dj,Mj={kernelName:gr,backendName:"wasm",setupFunc:function(e){$j=e.wasm.cwrap(gr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===ya.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=fo.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return $j(c,f,uG[s.dtype],l,u,h,m,d,g),o}};var Oj,Lj={kernelName:yr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),h=n.dataIdMap.get(u.dataId).id,p=r.shape.length,d=a.shape.length,c=0===p||p>1||1===d?1:ya.sizeFromShape(a.shape.slice(1));return Dj(i,o,l,c,h),u},setupFunc:function(e){Dj=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};var zj,Pj={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){Oj=e.wasm.cwrap(Ir,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===ya.sizeFromShape(a.shape)||Oj(r,s),a}},Bj=mG(vr);var Wj={kernelName:Er,backendName:"wasm",setupFunc:function(e){zj=e.wasm.cwrap(Er,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=ya.sizeFromShape(n.shape)/o;return 0===ya.sizeFromShape(s.shape)||zj(a,i,o,l),s}};var Vj,Uj={kernelName:_r,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=ya.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=gj.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=tf.getReshaped(u.shape,s,o,!1),p=tf.getPermuted(h.length,s.length,!1),d=tf.getReshapedPermuted(u.shape,s,o,!1),c=MG({inputs:{x:u},backend:n,attrs:{shape:h}}),f=SG({inputs:{x:c},backend:n,attrs:{perm:p}}),m=MG({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}};var Gj,Hj={kernelName:$r,backendName:"wasm",setupFunc:function(e){Vj=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],h=n.readSync(i.dataId)[0],p=[l+h,u],d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(p.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([h],"bool"),v=n.dataIdMap.get(x.dataId).id,w=n.makeOutput([l],a.dtype),k=n.dataIdMap.get(w.dataId).id,I=n.makeOutput([4],"int32"),S=n.dataIdMap.get(I.dataId).id,N=Vj(d,c,uG[s.dtype],l,h,u,f,g,b,v,k,S),T=n.readSync(I.dataId);switch(T[0]){case 1:t=tf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:t=tf.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:t=tf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(w.dataId),new Error(t);let _=m,C=y;return N!==p[0]&&(_=PG({inputs:{x:m},attrs:{begin:0,size:[N,u]},backend:n}),C=PG({inputs:{x:y},attrs:{begin:0,size:N},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[_,C,x,w]}};var jj,qj={kernelName:Ar,backendName:"wasm",setupFunc:function(e){Gj=e.wasm.cwrap(Ar,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],h=ya.sizeFromShape(s.shape),p=t.makeOutput([u,h],r.dtype),d=t.dataIdMap.get(p.dataId).id,c=t.makeOutput([h],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;Gj(i,o,l,u,d,f,g);let y,b=t.readSync(m.dataId);switch(b[0]){case 0:y=tf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:y=tf.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:y=tf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=tf.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=tf.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(p.dataId),t.disposeData(c.dataId),new Error(y);return[p,c]}};function Kj(e){jj=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Xj(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(tf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=a.shape.slice();h[0]=u;let p=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(h,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;jj(p,uG[a.dtype],a.shape[0],d,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=tf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=tf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=tf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=tf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}var Yj={kernelName:Fr,backendName:"wasm",setupFunc:Kj,kernelFunc:function(e){return Xj(e,!0)}};var Zj={kernelName:Rr,backendName:"wasm",setupFunc:Kj,kernelFunc:function(e){return Xj(e,!1)}};var Jj,Qj={kernelName:Cr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=ya.parseAxisParam(i,a.shape)[0],l=tf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let n=PG({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},eq=mG(Nr),tq=mG(Or),nq=yG(Mr);var rq,aq={kernelName:Jr,backendName:"wasm",setupFunc:function(e){Jj=e.wasm.cwrap(Jr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return Jj(i,a,uG[s.dtype],l),o}};var sq,iq={kernelName:Lr,backendName:"wasm",setupFunc:function(e){rq=e.wasm.cwrap(Lr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=bo.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=MG({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){ya.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=bo.computeOutShape(x,v,w),r=PG({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=MG({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(ya.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(v).buffer),l=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(f).buffer),h=new Uint8Array(new Int32Array(ya.computeStrides(f)).buffer),p=n.dataIdMap.get(e.dataId).id;rq(r,a,s.shape.length,i,o,l,u,h,f.length,p),t=MG({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}},oq=yG(Wr);var lq,uq={kernelName:Tr,backendName:"wasm",setupFunc:function(e){sq=e.wasm.cwrap(Tr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=_G(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=tf.getInnerMostAxes(f.length,u.shape.length))}tf.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=tf.computeOutAndReduceShapes(u.shape,f),y=ya.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ya.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;sq(l,y,uG[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=tf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},hq=mG(Vr),pq=mG(Ur);var dq,cq={kernelName:Gr,backendName:"wasm",setupFunc:function(e){lq=e.wasm.cwrap(Gr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),h=n.makeOutput(o,a.dtype),p=n.dataIdMap.get(h.dataId).id;return lq(s,l,a.shape.length,u,o.length,uG[h.dtype],p),h}};var fq,mq={kernelName:Hr,backendName:"wasm",setupFunc:function(e){dq=e.wasm.cwrap(Hr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),h=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return dq(i,o,r.shape.length,uG[r.dtype],a,s,h,d),[u,p]}};var gq={kernelName:jr,backendName:"wasm",setupFunc:function(e){fq=e.wasm.cwrap(jr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:h}=a,[p,d,c,f]=s.shape,[m,g]=null!=h?h:[d,c],y=[p,m,g,f],b=new Uint8Array(new Int32Array(ya.computeStrides(s.shape)).buffer),x=n.makeOutput(y,s.dtype),v=n.dataIdMap.get(x.dataId).id,w=n.dataIdMap.get(s.dataId).id,k=n.dataIdMap.get(i.dataId).id,I="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return fq(w,k,i.shape[0]>1,p,m,g,f,c,d,b,s.shape.length-1,I,t,u,v),x}};var yq={kernelName:Xr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i),p=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<h.length;e++)p[s]=e,h[e]=PG({inputs:{x:a},attrs:{begin:p,size:d},backend:n});return h.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}};var bq={kernelName:Zr,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},xq=[fG,gG,xG,vG,EG,AG,RG,DG,zG,WG,GG,HG,jG,XG,ZG,eH,tH,nH,aH,iH,lH,hH,pH,dH,cH,fH,gH,xH,wH,kH,IH,NH,_H,EH,AH,RH,DH,MH,IG,LH,zH,PH,BH,WH,UH,GH,jH,KH,ZH,JH,ej,tj,nj,sj,oj,uj,hj,pj,dj,fj,gj,yj,xj,wj,kj,Ij,Sj,Nj,LG,_j,Ej,Aj,Fj,Rj,Mj,Lj,Pj,Bj,BG,Wj,Uj,Hj,qj,Yj,Zj,Qj,eq,tq,nq,aq,iq,oq,uq,hq,pq,cq,mq,gq,TG,yq,bq];for(let e of xq)pa(e);var vq=je();vq.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),vq.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(vq.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var wq=y(G()),kq='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});',Iq=y(H()),Sq=class extends q{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Mq),Oq=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new j(this,ol())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=ya.now();return e(),{kernelMs:ya.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=ya.sizeFromShape(n),o=i*ya.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||ya.sizeFromShape(s);let o=ya.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=ya.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=ya.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Nq(e,t,n){if(null!=Cq)return Cq;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=$q&&null!=$q[r]?$q[r]:n+r}async function Tq(){let[e,t]=await Promise.all([je().getAsync("WASM_HAS_SIMD_SUPPORT"),je().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=kq.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?Nq(e,t,null!=Eq?Eq:r):r+n}};Fq&&(a.instantiateWasm=function(e){return(t,n)=>(ya.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(Nq(e,t,null!=Eq?Eq:"")));let s,i=!1;a.onAbort=()=>{i||Aq||(Aq=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==Cq?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+wq.default.toString()],{type:"text/javascript"}),s=(0,wq.default)(a)):s=(0,Iq.default)(a),s.then((e=>{i=!0,Aq=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}var _q=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Cq=null,Eq=null,$q={},Aq=!1,Fq=!1;function Rq(e,t=!1){if(sl("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Aq)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Cq=e,Fq=t}function Dq(e,t=!1){if(Aq)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)Eq=e;else{$q=e;let t=_q.filter((e=>null==$q[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Fq=t}var Mq=-1,Oq=-1;function Lq(e){Mq=e}function zq(){if(-1===Oq)throw new Error("WASM backend not initialized.");return Oq}var Pq="3.15.0";vl("wasm",(async()=>{let{wasm:e}=await Tq();return new Sq(e)}),2);var Bq={tfjs:"3.15.0","tfjs-core":"3.15.0","tfjs-data":"3.15.0","tfjs-layers":"3.15.0","tfjs-converter":"3.15.0","tfjs-backend-cpu":"3.15.0","tfjs-backend-webgl":"3.15.0","tfjs-backend-wasm":"3.15.0"},Wq={};function Vq(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}i(Wq,{AnchorPosition:()=>BK,DrawBox:()=>GK,DrawBoxOptions:()=>UK,DrawFaceLandmarks:()=>VX,DrawFaceLandmarksOptions:()=>WX,DrawTextField:()=>VK,DrawTextFieldOptions:()=>WK,drawContour:()=>Vq,drawDetections:()=>HK,drawFaceExpressions:()=>zX,drawFaceLandmarks:()=>UX});var Uq={};i(Uq,{computeReshapedDimensions:()=>eK,getCenterPoint:()=>tK,isDimensions:()=>Qq,isEven:()=>Zq,isFloat:()=>Yq,isTensor:()=>Hq,isTensor1D:()=>jq,isTensor2D:()=>qq,isTensor3D:()=>Kq,isTensor4D:()=>Xq,isValidNumber:()=>rK,isValidProbablitiy:()=>aK,range:()=>nK,round:()=>Jq});var Gq=class{constructor(e,t){if(!rK(e)||!rK(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new Gq(1/this.width,1/this.height)}};function Hq(e,t){return e instanceof Xa&&e.shape.length===t}function jq(e){return Hq(e,1)}function qq(e){return Hq(e,2)}function Kq(e){return Hq(e,3)}function Xq(e){return Hq(e,4)}function Yq(e){return e%1!=0}function Zq(e){return e%2==0}function Jq(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Qq(e){return e&&e.width&&e.height}function eK({width:e,height:t},n){let r=n/Math.max(t,e);return new Gq(Math.round(e*r),Math.round(t*r))}function tK(e){return e.reduce(((e,t)=>e.add(t)),new sK(0,0)).div(new sK(e.length,e.length))}function nK(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function rK(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function aK(e){return rK(e)&&e>=0&&e<=1}var sK=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new sK(this.x+e.x,this.y+e.y)}sub(e){return new sK(this.x-e.x,this.y-e.y)}mul(e){return new sK(this.x*e.x,this.y*e.y)}div(e){return new sK(this.x/e.x,this.y/e.y)}abs(){return new sK(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new sK(Math.floor(this.x),Math.floor(this.y))}},iK=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(rK)}static assertIsValidBox(e,t,n=!1){if(!iK.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(rK),a=[n.x,n.y,n.width,n.height].every(rK);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];iK.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new sK(this.left,this.top)}get topRight(){return new sK(this.right,this.top)}get bottomLeft(){return new sK(this.left,this.bottom)}get bottomRight(){return new sK(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new iK({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new iK({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new iK({x:e,y:t,width:n,height:r})}rescale(e){let t=Qq(e)?e.width:e,n=Qq(e)?e.height:e;return new iK({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new iK({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,u=s-o,h=Math.min(l,e-i),p=Math.min(u,t-o);return new iK({x:i,y:o,width:h,height:p}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new iK({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,l=this.right,u=this.bottom;return l>t&&(a=-l+t+n,l=t),u>e&&(s=-u+e+r,u=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:u,x:i,ex:l,w:n,h:r}}calibrate(e){return new iK({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},oK=class extends iK{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},lK=class{constructor(e,t,n,r,a){this._imageDims=new Gq(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new iK(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new iK(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new lK(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},uK=class extends lK{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new uK(n,r,a)}};function hK(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function pK(e){let t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new oK(r,a,s,i)}function dK(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex)),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(hK(s,l,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}function cK(e,t){return hl((()=>{let[n,r,a]=t,s=Ju([...e.shape.slice(0,3),1],n,"float32"),i=Ju([...e.shape.slice(0,3),1],r,"float32"),o=Ju([...e.shape.slice(0,3),1],a,"float32"),l=ru([s,i,o],3);return Nh(e,l)}))}function fK(e,t=!1){return hl((()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,Ju(n,0,"float32")},l=o(s),u=a-l.shape[i],h=[t&&u?o(u):null,e,l].filter((e=>!!e)).map((e=>_i(e,"float32")));return ru(h,i)}))}function mK(e){let t=e.slice();for(let e=t.length-1;e>0;e--){let n=Math.floor(Math.random()*(e+1)),r=t[e];t[e]=t[n],t[n]=r}return t}function gK(e){return 1/(1+Math.exp(-e))}function yK(e){return Math.log(e/(1-e))}var bK,xK=class extends iK{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},vK=class{constructor(e,t,n=new sK(0,0)){let{width:r,height:a}=t;this._imgDims=new Gq(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new sK(r,a)).add(n)))}get shift(){return new sK(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new sK(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new sK(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof uK?e.box.floor():new iK(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=tK(e),l=Math.floor(Math.max(0,o.x-.5*i)),u=Math.floor(Math.max(0,o.y-.43*i));return new xK(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=pK(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},wK=class extends vK{getRefPointsForAlignment(){let e=this.positions;return[e[0],e[1],tK([e[3],e[4]])]}},kK=class extends vK{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(tK)}},IK=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${Jq(this.distance)})`:""}`}},SK=class extends iK{constructor(e,t){super(e),this._label=t}static assertIsValidLabeledBox(e,t){if(iK.assertIsValidBox(e,t),!rK(e.label))throw new Error(`${t} - expected property label (${e.label}) to be a number`)}get label(){return this._label}},NK=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){let t=e.descriptors.map((e=>new Float32Array(e)));return new NK(e.label,t)}},TK=class extends SK{constructor(e,t,n,r){super(e,t),this._score=n,this._classScore=r}static assertIsValidPredictedBox(e,t){if(SK.assertIsValidLabeledBox(e,t),!aK(e.score)||!aK(e.classScore))throw new Error(`${t} - expected properties score (${e.score}) and (${e.classScore}) to be a number between [0, 1]`)}get score(){return this._score}get classScore(){return this._classScore}};function _K(e){return e.detection instanceof uK}function CK(e,t){return{...e,detection:t}}function EK(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function $K(){return"object"==typeof global&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function AK(e){let t="";if(!e&&$K())try{e=s("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function FK(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=global.fetch,a=AK();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:r,...a}}function RK(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function DK(e){bK=e}function MK(){return RK()?DK(EK()):$K()?DK(FK()):null}var OK={getEnv:function(){if(!bK)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return bK},setEnv:DK,initialize:MK,createBrowserEnv:EK,createFileSystem:AK,createNodejsEnv:FK,monkeyPatch:function(e){if(bK||MK(),!bK)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=bK.Canvas,Image:n=bK.Image}=e;bK.Canvas=t,bK.Image=n,bK.createCanvasElement=e.createCanvasElement||(()=>new t),bK.createImageElement=e.createImageElement||(()=>new n),bK.ImageData=e.ImageData||bK.ImageData,bK.Video=e.Video||bK.Video,bK.fetch=e.fetch||bK.fetch,bK.readFile=e.readFile||bK.readFile},isBrowser:RK,isNodejs:$K};function LK(e){return OK.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function zK(e){let{Canvas:t,CanvasRenderingContext2D:n}=OK.getEnv();if(e instanceof n)return e;let r=LK(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}MK();var PK,BK=((PK=BK||{}).TOP_LEFT="TOP_LEFT",PK.TOP_RIGHT="TOP_RIGHT",PK.BOTTOM_LEFT="BOTTOM_LEFT",PK.BOTTOM_RIGHT="BOTTOM_RIGHT",PK),WK=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},VK=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof VK?e.text:e,this.anchor=t,this.options=new WK(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(l,n-i),0)}}return{x:o,y:l}}draw(e){let t=LK(e),n=zK(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let h=this.getUpperLeft(n,t);n.fillRect(h.x,h.y,l,u),n.fillStyle=a,this.text.forEach(((e,t)=>{let r=o+h.x,a=o+h.y+(t+1)*s;n.fillText(e,r,a)}))}},UK=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new WK({...s,...a})}},GK=class{constructor(e,t={}){this.box=new iK(e),this.options=new UK(t)}draw(e){let t=zK(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new VK([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function HK(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof uK?t.score:_K(t)?t.detection.score:void 0,r=t instanceof uK?t.box:_K(t)?t.detection.box:new iK(t),a=n?`${Jq(n)}`:void 0;new GK(r,{label:a}).draw(e)}))}function jK(e){let{Image:t,Video:n}=OK.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function qK(e){return new Promise(((t,n)=>{function r(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}(e instanceof OK.getEnv().Canvas||jK(e))&&t(null),e.addEventListener("load",a),e.addEventListener("error",r)}))}function KK(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let e=OK.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function XK(e){let{Image:t,Video:n}=OK.getEnv();return e instanceof t?new Gq(e.naturalWidth,e.naturalHeight):e instanceof n?new Gq(e.videoWidth,e.videoHeight):new Gq(e.width,e.height)}function YK({width:e,height:t}){let{createCanvasElement:n}=OK.getEnv(),r=n();return r.width=e,r.height=t,r}function ZK(e,t){let{ImageData:n}=OK.getEnv();if(!(e instanceof n||jK(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||XK(e),s=YK({width:r,height:a});return e instanceof n?zK(s).putImageData(e,0,0):zK(s).drawImage(e,0,0,r,a),s}async function JK(e,t){let n=t||OK.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(Xq(e)?1:0),i=hl((()=>e.as3D(r,a,s).toInt()));return await ao.toPixels(i,n),i.dispose(),n}function QK(e){let{Image:t,Canvas:n,Video:r}=OK.getEnv();return e instanceof t||e instanceof n||e instanceof r}function eX(e,t,n=!1){let{Image:r,Canvas:a}=OK.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return YK({width:1,height:1});let s=XK(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=YK({width:t,height:t}),h=e instanceof a?e:ZK(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,c=n&&l<o?p:0;return h.width>0&&h.height>0&&zK(u).drawImage(h,d,c,o,l),u}var tX=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(Kq(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(Xq(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof OK.getEnv().Canvas?e:ZK(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return nK(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return eK({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,hl((()=>{let n=nK(this.batchSize,0,1).map((n=>{let r=this.getInput(n);if(r instanceof Xa){let n=Xq(r)?r:Ku(r);return n=fK(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=zc.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof OK.getEnv().Canvas)return ao.fromPixels(eX(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return nd(n.map((e=>_i(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function nX(e){if(e instanceof tX)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(LK);return r.forEach(((e,r)=>{if(!QK(e)&&!Kq(e)&&!Xq(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(Xq(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>QK(e)&&qK(e)))),new tX(r,Array.isArray(e))}async function rX(e,t){let{Canvas:n}=OK.getEnv(),r=e;if(!(e instanceof n)){let t=await nX(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await JK(a)}let a=zK(r);return t.map((e=>e instanceof uK?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{let s=YK({width:n,height:r});return n>0&&r>0&&zK(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function aX(e,t){if(!Kq(e)&&!Xq(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(Xq(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return hl((()=>{let[n,r,a]=e.shape.slice(Xq(e)?1:0);return t.map((e=>e instanceof uK?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).filter((e=>e.width>0&&e.height>0)).map((({x:t,y:s,width:i,height:o})=>Hp(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function sX(e,t){let{fetch:n}=OK.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function iX(e){let t=await sX(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return KK(n)}async function oX(e){return(await sX(e)).json()}async function lX(e){return new Float32Array(await(await sX(e)).arrayBuffer())}async function uX(e){let t=await sX(e),n=await t.blob();if(!n.type.startsWith("video/"))throw new Error(`fetchVideo - expected blob type to be of type video/*, instead have: ${n.type}, for url: ${t.url}`);return function(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToVideo - expected buf to be of type: Blob"));let r=OK.getEnv().createVideoElement();r.oncanplay=()=>t(r),r.onerror=n,r.playsInline=!0,r.muted=!0,r.src=URL.createObjectURL(e),r.play()}))}(n)}function hX(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function pX(e,t){let{manifestUri:n,modelBaseUri:r}=hX(e,t),a=await oX(n);return $i.loadWeights(a,r)}function dX(e,t,n=!1){let{width:r,height:a}=n?XK(t):t;return e.width=r,e.height=a,{width:r,height:a}}var cX=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof Za))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof Za)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{let n=Rs(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await pX(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=OK.getEnv(),{manifestUri:n,modelBaseUri:r}=hX(e,this.getDefaultModelName()),a=$i.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof Xa))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function fX(e,t,n){return hl((()=>{let r=zp(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Il(r,t.bias),r}))}function mX(e,t,n=!1){return hl((()=>{let r=_p(n?Il(Iu(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):fX(e,t.conv0,[2,2])),a=fX(r,t.conv1,[1,1]),s=fX(_p(Il(r,a)),t.conv2,[1,1]);return _p(Il(r,Il(a,s)))}))}function gX(e,t,n=!1,r=!0){return hl((()=>{let a=_p(n?Il(Iu(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):fX(e,t.conv0,r?[2,2]:[1,1])),s=fX(a,t.conv1,[1,1]),i=fX(_p(Il(a,s)),t.conv2,[1,1]),o=fX(_p(Il(a,Il(s,i))),t.conv3,[1,1]);return _p(Il(a,Il(s,Il(i,o))))}))}function yX(e,t,n="same",r=!1){return hl((()=>{let a=Il(Iu(e,t.filters,[1,1],n),t.bias);return r?_p(a):a}))}function bX(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function xX(e,t){return(n,r,a,s)=>{let i=ld(e(n*r*a*a),[a,a,n,r]),o=id(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function vX(e,t){return(n,r,a)=>{let s=od(e(n*r),[n,r]),i=id(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var wX=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function kX(e,t){return(n,r,a)=>{let s=ld(e(9*n),[3,3,n,1]),i=ld(e(n*r),[1,1,n,r]),o=id(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new wX(s,i,o)}}function IX(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new wX(n,r,a)}}function SX(e,t){return(n,r,a)=>{let s=e[n];if(!Hq(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function NX(e){let t=e;return{extractWeights:function(e){let n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function TX(e,t){let n=xX(e,t),r=kX(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:l,conv3:r(t,t,`${n}/conv3`)}}}}function _X(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function CX(e,t){let n=SX(e,t),r=_X(n),a=IX(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var EX=class extends cX{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return hl((()=>{let n=gX(cK(_i(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=gX(n,t.dense1),n=gX(n,t.dense2),n=gX(n,t.dense3),n=tu(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await nX(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock4Params:n}=CX(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return bX(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=NX(e),{extractDenseBlock4Params:a}=TX(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function $X(e,t){return hl((()=>Il(Xi(e,t.weights),t.bias)))}function AX(e){let t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var FX=class extends cX{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return hl((()=>{let n=e instanceof tX?this.faceFeatureExtractor.forwardInput(e):e;return $X(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=NX(e),i=vX(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=AX(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=SX(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return bX(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},RX=["neutral","happy","sad","angry","fearful","disgusted","surprised"],DX=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);RX.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return RX.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}},MX=class extends FX{constructor(e=new EX){super("FaceExpressionNet",e)}forwardInput(e){return hl((()=>qp(this.runNet(e))))}async forward(e){return this.forwardInput(await nX(e))}async predictExpressions(e){let t=await nX(e),n=await this.forwardInput(t),r=await Promise.all(md(n).map((async e=>{let t=e.dataSync();return e.dispose(),t})));n.dispose();let a=r.map((e=>new DX(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function OX(e){return e.expressions instanceof DX}function LX(e,t){return{...e,expressions:t}}function zX(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{let a=t instanceof DX?t:OX(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter((e=>e.probability>n)),i=_K(t)?t.detection.box.bottomLeft:r||new sK(0,0);new VK(s.map((e=>`${e.expression} (${Jq(e.probability)})`)),i).draw(e)}))}function PX(e){return _K(e)&&e.landmarks instanceof vK&&e.unshiftedLandmarks instanceof vK&&e.alignedRect instanceof uK}function BX(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new uK(e.detection.score,a.rescale(s.reverse()),s),o=function(e){let t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;let r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);let a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var WX=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},VX=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new WX(t)}draw(e){let t=zK(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof kK&&(t.strokeStyle=s,t.lineWidth=a,Vq(t,this.faceLandmarks.getJawOutline()),Vq(t,this.faceLandmarks.getLeftEyeBrow()),Vq(t,this.faceLandmarks.getRightEyeBrow()),Vq(t,this.faceLandmarks.getNose()),Vq(t,this.faceLandmarks.getLeftEye(),!0),Vq(t,this.faceLandmarks.getRightEye(),!0),Vq(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function UX(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof vK?t:PX(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new VX(n).draw(e)}))}function GX(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=NX(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=function(e,t){let n=xX(e,t),r=kX(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),u={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},h={};nK(t,0,1).forEach((e=>{h[`main_block_${e}`]=l(128,`middle_flow/main_block_${e}`)}));let p={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:u,middle_flow:h,exit_flow:p}}}function HX(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){let n=SX(e,t),r=_X(n),a=IX(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},l={};nK(t,0,1).forEach((e=>{l[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));let u={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return bX(e,n),{params:{entry_flow:o,middle_flow:l,exit_flow:u},paramMappings:n}}function jX(e,t,n){return Il(Iu(e,t.filters,n,"same"),t.bias)}function qX(e,t,n=!0){let r=n?_p(e):e;return r=fX(r,t.separable_conv0,[1,1]),r=fX(_p(r),t.separable_conv1,[1,1]),r=Wh(r,[3,3],[2,2],"same"),r=Il(r,jX(e,t.expansion_conv,[2,2])),r}var KX=class extends cX{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return hl((()=>{let n=cK(_i(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),r=_p(jX(n,t.entry_flow.conv_in,[2,2]));return r=qX(r,t.entry_flow.reduction_block_0,!1),r=qX(r,t.entry_flow.reduction_block_1),nK(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=fX(_p(e),t.separable_conv0,[1,1]);return n=fX(_p(n),t.separable_conv1,[1,1]),n=fX(_p(n),t.separable_conv2,[1,1]),n=Il(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=qX(r,t.exit_flow.reduction_block),r=_p(fX(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await nX(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return HX(e,this._numMainBlocks)}extractParams(e){return GX(e,this._numMainBlocks)}};var XX,YX=((XX=YX||{}).FEMALE="female",XX.MALE="male",XX),ZX=class extends cX{constructor(e=new KX(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return hl((()=>{let n=e instanceof tX?this.faceFeatureExtractor.forwardInput(e):e,r=tu(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:$X(r,t.fc.age).as1D(),gender:$X(r,t.fc.gender)}}))}forwardInput(e){return hl((()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:qp(n)}}))}async forward(e){return this.forwardInput(await nX(e))}async predictAgeAndGender(e){let t=await nX(e),n=await this.forwardInput(t),r=md(n.age),a=md(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{let n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?"male":"female",i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=NX(e),a=vX(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=AX(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=SX(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return bX(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},JX=class extends FX{postProcess(e,t,n){let r=n.map((({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return hl((()=>{let n=(e,t)=>nd([Ju([68],e,"float32"),Ju([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(Ju([a,136],t,"float32")).sub(nd(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(nd(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return hl((()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await nX(e))}async detectLandmarks(e){let t=await nX(e),n=hl((()=>md(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter(((e,t)=>Zq(t))),s=r.filter(((e,t)=>!Zq(t)));return new kK(Array(68).fill(0).map(((e,t)=>new sK(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},QX=class extends JX{constructor(e=new EX){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var eY=class extends cX{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return hl((()=>{let n=mX(cK(_i(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=mX(n,t.dense1),n=mX(n,t.dense2),n=tu(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await nX(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock3Params:n}=CX(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return bX(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=NX(e),{extractDenseBlock3Params:a}=TX(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}},tY=class extends JX{constructor(e=new eY){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},nY=class extends QX{};function rY(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=Iu(e,s,n,a);return o=Il(o,i),o=function(e,t){return Il(Tl(e,t.weights),t.biases)}(o,t.scale),r?_p(o):o}function aY(e,t){return rY(e,t,[1,1],!1)}function sY(e,t){return rY(e,t,[2,2],!0,"valid")}function iY(e,t){function n(n,r,a,s){let i=function(t,n,r){let a=e(t),s=a.length/(n*r*r);if(Yq(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return hl((()=>Zi(ld(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=id(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){let o=n(r,a,s,`${i}/conv`),l=function(n,r){let a=id(e(n)),s=id(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`);return{conv:o,scale:l}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function oY(e,t){let n=SX(e,t);function r(e){let t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function lY(e,t){let n=function(e,t){return rY(e,t,[1,1],!0)}(e,t.conv1);return n=aY(n,t.conv2),n=Il(n,e),n=_p(n),n}function uY(e,t){let n=sY(e,t.conv1);n=aY(n,t.conv2);let r=tu(e,2,2,"valid"),a=jh(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=jh(e);n=ru([n,t],1);let r=[...n.shape];r[2]=1;let a=jh(r);n=ru([n,a],2)}return r=s?ru([r,a],3):r,n=Il(r,n),n=_p(n),n}var hY=class extends cX{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return hl((()=>{let n=sY(cK(_i(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Wh(n,3,2,"valid"),n=lY(n,t.conv32_1),n=lY(n,t.conv32_2),n=lY(n,t.conv32_3),n=uY(n,t.conv64_down),n=lY(n,t.conv64_1),n=lY(n,t.conv64_2),n=lY(n,t.conv64_3),n=uY(n,t.conv128_down),n=lY(n,t.conv128_1),n=lY(n,t.conv128_2),n=uY(n,t.conv256_down),n=lY(n,t.conv256_1),n=lY(n,t.conv256_2),n=uY(n,t.conv256_down_out);let r=n.mean([1,2]);return Xi(r,t.fc)}))}async forward(e){return this.forwardInput(await nX(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some((e=>e<=0)))return new Float32Array(128);let n=await nX(e),r=hl((()=>md(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=oY(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),h=r("conv64_2"),p=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!qq(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:h,conv64_3:p,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return bX(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){let{extractWeights:t,getRemainingWeights:n}=NX(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=iY(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),h=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=hl((()=>Zi(od(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:h,conv64_1:p,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function pY(e){let t=new hY;return t.extractWeights(e),t}function dY(e,t){return{...e,descriptor:t}}function cY(e){return"number"==typeof e.age}function fY(e,t){return{...e,age:t}}function mY(e){return("male"===e.gender||"female"===e.gender)&&aK(e.genderProbability)}function gY(e,t,n){return{...e,gender:t,genderProbability:n}}function yY(e,t){function n(n,r,a,s,i){let o=ld(e(n*r*a*a),[a,a,n,r]),l=id(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function r(e,t,r,a){let{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){let i=function(n,r){let a=ld(e(9*n),[3,3,n,1]),s=id(e(n)),i=id(e(n)),o=id(e(n)),l=id(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function bY(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){let n=SX(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Kq(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return bX(e,t),{params:s,paramMappings:t}}function xY(e,t,n){return hl((()=>{let r=Iu(e,t.filters,n,"same");return r=Il(r,t.batch_norm_offset),bu(r,0,6)}))}function vY(e,t){return hl((()=>{let n,r=xY(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{let a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return hl((()=>{let r=Ou(e,t.filters,n,"same");return r=hu(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),bu(r,0,6)}))}(r,e.depthwise_conv,s),r=xY(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function wY(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),h=Math.max(r[n][0],r[n][2]),p=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(h-l)*(p-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,h),y=Math.min(o,p),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function kY(e,t){let{sizes:n,centers:r}=function(e){let t=md(Zi(e,[1,0])),n=[Nh(t[2],t[0]),Nh(t[3],t[1])];return{sizes:n,centers:[Il(t[0],Nl(n[0],2)),Il(t[1],Nl(n[1],2))]}}(e),a=md(Zi(t,[1,0])),s=Nl(Tl(qu(Nl(a[2],5)),n[0]),2),i=Il(Tl(Nl(a[0],10),n[0]),r[0]),o=Nl(Tl(qu(Nl(a[3],5)),n[1]),2),l=Il(Tl(Nl(a[1],10),n[1]),r[1]);return Zi(nd([Nh(i,s),Nh(l,o),Il(i,s),Il(l,o)]),[1,0])}function IY(e,t){return hl((()=>{let n=e.shape[0];return{boxPredictionEncoding:eu(yX(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:eu(yX(e,t.class_predictor),[n,-1,3])}}))}var SY=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},NY=class extends cX{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return hl((()=>{let n=_i(e.toBatchTensor(512,!1),"float32"),r=vY(Nh(Nl(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return hl((()=>{let r=xY(e,n.conv_0,[1,1]),a=xY(r,n.conv_1,[2,2]),s=xY(a,n.conv_2,[1,1]),i=xY(s,n.conv_3,[2,2]),o=xY(i,n.conv_4,[1,1]),l=xY(o,n.conv_5,[2,2]),u=xY(l,n.conv_6,[1,1]),h=xY(u,n.conv_7,[2,2]),p=IY(t,n.box_predictor_0),d=IY(e,n.box_predictor_1),c=IY(a,n.box_predictor_2),f=IY(i,n.box_predictor_3),m=IY(l,n.box_predictor_4),g=IY(h,n.box_predictor_5);return{boxPredictions:ru([p.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:ru([p.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return hl((()=>{let r=e.shape[0],a=kY(eu(Yu(n.extra_dim,[r,1,1]),[-1,4]),eu(e,[-1,4]));a=eu(a,[r,a.shape[0]/r,4]);let s=au(su(t,[0,0,1],[-1,-1,-1])),i=su(s,[0,0,0],[-1,-1,1]);return i=eu(i,[r,i.shape[1]]),{boxes:md(a),scores:md(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await nX(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new SY(t),a=await nX(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();let u=Array.from(l.dataSync()),h=function(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),l=e=>e<=r?1:0,u=[];return o.forEach((t=>{if(u.length>=i)return;let n=t.score;for(let n=u.length-1;n>=0;--n){let r=wY(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=l(r),t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,u,n,.5,r),p=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/p.width,f=d/p.height,m=o.arraySync(),g=h.map((e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*c));return new uK(u[e],new xK(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return bY(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=NX(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=yY(n,t),i=a(),o=s(),l={extra_dim:so(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}};function TY(e){let t=new NY;return t.extractWeights(e),t}function _Y(e){return TY(e)}var CY=class extends NY{},EY=[new sK(.738768,.874946),new sK(2.42204,2.65704),new sK(4.30971,7.04493),new sK(10.246,4.59428),new sK(12.6868,11.8741)],$Y=[new sK(1.603231,2.094468),new sK(6.041143,7.080126),new sK(2.882459,3.518061),new sK(4.266906,5.178857),new sK(9.041765,10.66308)],AY=[117.001,114.697,97.404],FY=e=>"number"==typeof e;function RY(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!FY(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>FY(e.x)&&FY(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(FY)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function DY(e){return hl((()=>{let t=Tl(e,Op(.10000000149011612));return Il(_p(Nh(e,t)),t)}))}function MY(e,t){return hl((()=>{let n=ip(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Iu(n,t.conv.filters,[1,1],"valid"),n=Nh(n,t.bn.sub),n=Tl(n,t.bn.truediv),n=Il(n,t.conv.bias),DY(n)}))}function OY(e,t){return hl((()=>{let n=ip(e,[[0,0],[1,1],[1,1],[0,0]]);return n=zp(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Il(n,t.bias),DY(n)}))}function LY(e,t){let n=xX(e,t);let r=kX(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){let i=n(r,a,3,`${s}/conv`),o=function(n,r){let a=id(e(n)),s=id(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}function zY(e,t){let n=SX(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){let t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:IX(n)}}var PY=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},BY=class extends cX{constructor(e){super("TinyYolov2"),RY(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=MY(e,t.conv0);return n=Wh(n,[2,2],[2,2],"same"),n=MY(n,t.conv1),n=Wh(n,[2,2],[2,2],"same"),n=MY(n,t.conv2),n=Wh(n,[2,2],[2,2],"same"),n=MY(n,t.conv3),n=Wh(n,[2,2],[2,2],"same"),n=MY(n,t.conv4),n=Wh(n,[2,2],[2,2],"same"),n=MY(n,t.conv5),n=Wh(n,[2,2],[1,1],"same"),n=MY(n,t.conv6),n=MY(n,t.conv7),yX(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?DY(yX(e,t.conv0,"valid",!1)):OY(e,t.conv0);return n=Wh(n,[2,2],[2,2],"same"),n=OY(n,t.conv1),n=Wh(n,[2,2],[2,2],"same"),n=OY(n,t.conv2),n=Wh(n,[2,2],[2,2],"same"),n=OY(n,t.conv3),n=Wh(n,[2,2],[2,2],"same"),n=OY(n,t.conv4),n=Wh(n,[2,2],[2,2],"same"),n=OY(n,t.conv5),n=Wh(n,[2,2],[1,1],"same"),n=t.conv6?OY(n,t.conv6):n,n=t.conv7?OY(n,t.conv7):n,yX(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return hl((()=>{let r=_i(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?cK(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await nX(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new PY(t),a=await nX(e),s=await this.forwardInput(a,n),i=hl((()=>md(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map((e=>e.box)),h=l.map((e=>e.score)),p=l.map((e=>e.classScore)),d=l.map((e=>this.config.classes[e.label]));return dK(u.map((e=>e.rescale(n))),h,this.config.iouThreshold,!0).map((e=>new lK(h[e],p[e],d[e],u[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=zY(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return bX(e,r),{params:n,paramMappings:r}}(e,this.config)}extractParams(e){let t=this.config.filterSizes||BY.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=NX(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:h}=LY(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,p,d,c,f]=r;a={conv0:t.isFirstLayerConv2d?l(e,s,3,"conv0"):h(e,s,"conv0"),conv1:h(s,i,"conv1"),conv2:h(i,o,"conv2"),conv3:h(o,u,"conv3"),conv4:h(u,p,"conv4"),conv5:h(p,d,"conv5"),conv6:c?h(d,c,"conv6"):void 0,conv7:f?h(c,f,"conv7"):void 0,conv8:l(f||c||d,5*n,1,"conv8")}}else{let[e,t,s,i,o,h,p,d,c]=r;a={conv0:u(e,t,"conv0"),conv1:u(t,s,"conv1"),conv2:u(s,i,"conv2"),conv3:u(i,o,"conv3"),conv4:u(o,h,"conv4"),conv5:u(h,p,"conv5"),conv6:u(p,d,"conv6"),conv7:u(d,c,"conv7"),conv8:l(c,5*n,1,"conv8")}}if(0!==i().length)throw new Error(`weights remaing after extract: ${i().length}`);return{params:a,paramMappings:o}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[h,p,d]=hl((()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]);return[t.slice([0,0,0,0],[l,l,u,4]),t.slice([0,0,0,4],[l,l,u,1]),this.withClassScores?qp(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):Op(0)]})),c=[],f=await p.array(),m=await h.array();for(let e=0;e<l;e++)for(let t=0;t<l;t++)for(let r=0;r<u;r++){let a=gK(f[e][t][r][0]);if(!n||a>n){let n=(t+gK(m[e][t][r][0]))/l*i,s=(e+gK(m[e][t][r][1]))/l*o,u=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/l*i,h=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/l*o,p=n-u/2,f=s-h/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,g):{classScore:1,label:0};c.push({box:new oK(p,f,p+u,f+h),score:a,classScore:a*y,label:b,...g})}}return h.dispose(),p.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},WY=BY;WY.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var VY=class extends WY{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:$Y,meanRgb:AY}:{anchors:EY,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new uK(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};function UY(e,t=!0){let n=new VY(t);return n.extractWeights(e),n}var GY=class extends PY{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},HY=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function jY(e,t,n,r,a=({alignedRect:e})=>e){let s=e.map((e=>PX(e)?a(e):e.detection)),i=r||(t instanceof Xa?await aX(t,s):await rX(t,s)),o=await n(i);return i.forEach((e=>e instanceof Xa&&e.dispose())),o}async function qY(e,t,n,r,a){return jY([e],t,(async e=>n(e[0])),r,a)}var KY=[new sK(1.603231,2.094468),new sK(6.041143,7.080126),new sK(2.882459,3.518061),new sK(4.266906,5.178857),new sK(9.041765,10.66308)],XY=[117.001,114.697,97.404],YY=class extends WY{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:KY,meanRgb:XY,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new uK(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},ZY={ssdMobilenetv1:new NY,tinyFaceDetector:new YY,tinyYolov2:new VY,faceLandmark68Net:new QX,faceLandmark68TinyNet:new tY,faceRecognitionNet:new hY,faceExpressionNet:new MX,ageGenderNet:new ZX},JY=(e,t)=>ZY.ssdMobilenetv1.locateFaces(e,t),QY=(e,t)=>ZY.tinyFaceDetector.locateFaces(e,t),eZ=(e,t)=>ZY.tinyYolov2.locateFaces(e,t),tZ=e=>ZY.faceLandmark68Net.detectLandmarks(e),nZ=e=>ZY.faceLandmark68TinyNet.detectLandmarks(e),rZ=e=>ZY.faceRecognitionNet.computeFaceDescriptor(e),aZ=e=>ZY.faceExpressionNet.predictExpressions(e),sZ=e=>ZY.ageGenderNet.predictAgeAndGender(e),iZ=e=>ZY.ssdMobilenetv1.load(e),oZ=e=>ZY.tinyFaceDetector.load(e),lZ=e=>ZY.tinyYolov2.load(e),uZ=e=>ZY.faceLandmark68Net.load(e),hZ=e=>ZY.faceLandmark68TinyNet.load(e),pZ=e=>ZY.faceRecognitionNet.load(e),dZ=e=>ZY.faceExpressionNet.load(e),cZ=e=>ZY.ageGenderNet.load(e),fZ=iZ,mZ=JY,gZ=tZ,yZ=class extends HY{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},bZ=class extends yZ{async run(){let e=await this.parentTask,t=await jY(e,this.input,(async e=>Promise.all(e.map((e=>ZY.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>LX(e,t[n])))}withAgeAndGender(){return new IZ(this,this.input)}},xZ=class extends yZ{async run(){let e=await this.parentTask;if(e)return LX(e,await qY(e,this.input,(e=>ZY.faceExpressionNet.predictExpressions(e)),this.extractedFaces))}withAgeAndGender(){return new SZ(this,this.input)}},vZ=class extends bZ{withAgeAndGender(){return new NZ(this,this.input)}withFaceDescriptors(){return new CZ(this,this.input)}},wZ=class extends xZ{withAgeAndGender(){return new TZ(this,this.input)}withFaceDescriptor(){return new EZ(this,this.input)}},kZ=class extends HY{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},IZ=class extends kZ{async run(){let e=await this.parentTask,t=await jY(e,this.input,(async e=>Promise.all(e.map((e=>ZY.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return fY(gY(e,a,s),r)}))}withFaceExpressions(){return new bZ(this,this.input)}},SZ=class extends kZ{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await qY(e,this.input,(e=>ZY.ageGenderNet.predictAgeAndGender(e)),this.extractedFaces);return fY(gY(e,n,r),t)}withFaceExpressions(){return new xZ(this,this.input)}},NZ=class extends IZ{withFaceExpressions(){return new vZ(this,this.input)}withFaceDescriptors(){return new CZ(this,this.input)}},TZ=class extends SZ{withFaceExpressions(){return new wZ(this,this.input)}withFaceDescriptor(){return new EZ(this,this.input)}},_Z=class extends HY{constructor(e,t){super(),this.parentTask=e,this.input=t}},CZ=class extends _Z{async run(){let e=await this.parentTask;return(await jY(e,this.input,(e=>Promise.all(e.map((e=>ZY.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>dY(e[n],t)))}withFaceExpressions(){return new vZ(this,this.input)}withAgeAndGender(){return new NZ(this,this.input)}},EZ=class extends _Z{async run(){let e=await this.parentTask;if(e)return dY(e,await qY(e,this.input,(e=>ZY.faceRecognitionNet.computeFaceDescriptor(e)),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0}))))}withFaceExpressions(){return new wZ(this,this.input)}withAgeAndGender(){return new TZ(this,this.input)}},$Z=class extends HY{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?ZY.faceLandmark68TinyNet:ZY.faceLandmark68Net}},AZ=class extends $Z{async run(){let e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof Xa?await aX(this.input,t):await rX(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof Xa&&e.dispose())),e.filter(((e,t)=>r[t])).map(((e,t)=>BX(e,r[t])))}withFaceExpressions(){return new vZ(this,this.input)}withAgeAndGender(){return new NZ(this,this.input)}withFaceDescriptors(){return new CZ(this,this.input)}},FZ=class extends $Z{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof Xa?await aX(this.input,[t]):await rX(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach((e=>e instanceof Xa&&e.dispose())),BX(e,r)}withFaceExpressions(){return new wZ(this,this.input)}withAgeAndGender(){return new TZ(this,this.input)}withFaceDescriptor(){return new EZ(this,this.input)}},RZ=class extends HY{constructor(e,t=new SY){super(),this.input=e,this.options=t}},DZ=class extends RZ{async run(){let e,{input:t,options:n}=this;if(n instanceof GY)e=ZY.tinyFaceDetector.locateFaces(t,n);else if(n instanceof SY)e=ZY.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof PY))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=ZY.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>CK({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(e=!1){return new AZ(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new bZ(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new IZ(this.runAndExtendWithFaceDetections(),this.input)}},MZ=class extends RZ{async run(){let e=await new DZ(this.input,this.options),t=e[0];return e.forEach((e=>{e.score>t.score&&(t=e)})),t}runAndExtendWithFaceDetection(){return new Promise((async e=>{let t=await this.run();e(t?CK({},t):void 0)}))}withFaceLandmarks(e=!1){return new FZ(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new xZ(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new SZ(this.runAndExtendWithFaceDetection(),this.input)}};function OZ(e,t=new SY){return new MZ(e,t)}function LZ(e,t=new SY){return new DZ(e,t)}async function zZ(e,t){return LZ(e,new SY(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function PZ(e,t={}){return LZ(e,new PY(t)).withFaceLandmarks().withFaceDescriptors()}var BZ=zZ;function WZ(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t**2),0))}var VZ=class{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof NK)return e;if(e instanceof Float32Array)return new NK(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new NK(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>WZ(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new IK(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this._distanceThreshold?t:new IK("unknown",t.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){let t=e.labeledDescriptors.map((e=>NK.fromJSON(e)));return new VZ(t,e.distanceThreshold)}};function UZ(e){let t=new YY;return t.extractWeights(e),t}function GZ(e,t){let{width:n,height:r}=new Gq(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>GZ(e,{width:n,height:r})));if(PX(e)){let t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return BX(CK(e,t),a)}return _K(e)?CK(e,e.detection.forSize(n,r)):e instanceof vK||e instanceof uK?e.forSize(n,r):e}var HZ="1.6.7";return(e=>((e,s,i,o)=>{if(s&&"object"==typeof s||"function"==typeof s)for(let l of r(s))!a.call(e,l)&&l!==i&&t(e,l,{get:()=>s[l],enumerable:!(o=n(s,l))||o.enumerable});return e})(t({},"__esModule",{value:!0}),e))(o)})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=/sm/3ac97088b0f27918dbbf60768b0bbadbc5907de2505137d3f7b49d99454e74e0.map